-- phpMyAdmin SQL Dump
-- version 3.5.1
-- http://www.phpmyadmin.net
--
-- 主机: localhost
-- 生成日期: 2015 年 05 月 30 日 14:34
-- 服务器版本: 5.5.24-log
-- PHP 版本: 5.3.13

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- 数据库: `boke`
--

-- --------------------------------------------------------

--
-- 表的结构 `age`
--

CREATE TABLE IF NOT EXISTS `age` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `birthday` varchar(20) NOT NULL DEFAULT '',
  `add_time` int(11) NOT NULL DEFAULT '0',
  `name` varchar(10) NOT NULL DEFAULT '',
  `comment` varchar(100) NOT NULL DEFAULT '',
  `img_url` varchar(100) NOT NULL DEFAULT '',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=62 ;

--
-- 转存表中的数据 `age`
--

INSERT INTO `age` (`id`, `birthday`, `add_time`, `name`, `comment`, `img_url`) VALUES
(1, '1986-10-02', 1428991290, '杨振星', '', ''),
(2, '1991-01-12', 1428991290, '桂文秀', '', ''),
(3, '2013-11-07', 1428991290, '杨怀瑾', '怀瑾握瑜', 'upload/2015-05-26/5564934647bac.jpg'),
(4, '2013-02-24', 1428991290, '李子俊', '丽的娃', ''),
(40, '2015-05-06', 1431055095, '邓子涵', '平的娃', ''),
(39, '2015-04-21', 1429718816, '胡宇哲', '玮的娃', ''),
(23, '1964-01-07', 1429091050, '杨远来', '', ''),
(22, '1987-11-23', 1429090930, '杨星丽', '', ''),
(41, '1986-05-09', 1431948930, '杨思', '', ''),
(59, '2015-05-12', 1432720438, '测试账号', '无畏者无敌。', 'upload/2015-05-28/5566e8f95c8e1.gif');

-- --------------------------------------------------------

--
-- 表的结构 `message`
--

CREATE TABLE IF NOT EXISTS `message` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(10) COLLATE utf8_bin NOT NULL,
  `email` varchar(20) COLLATE utf8_bin NOT NULL,
  `website` varchar(50) COLLATE utf8_bin NOT NULL,
  `cont` text COLLATE utf8_bin NOT NULL,
  `dates` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `is_delete` int(2) DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 COLLATE=utf8_bin AUTO_INCREMENT=308 ;

--
-- 转存表中的数据 `message`
--

INSERT INTO `message` (`id`, `name`, `email`, `website`, `cont`, `dates`, `is_delete`) VALUES
(66, 'admin', 'zxzhaw@163.com', 'http://localhost/8/div_css/index.php#', '留言板的雏形出来了。', '2014-05-20 15:25:59', 1),
(67, 'admin', 'zxzhaw@163.com', '', '原生js操作太麻烦，引入jQuery，操作体验瞬间上去了。', '2014-05-20 15:30:03', 1),
(149, 'admin', 'zxzhaw@163.com', '', '准备再加一功能，让提交的时候，有一个状态显示。', '2014-05-25 05:07:30', 1),
(68, 'admin', 'zxzhaw@163.com', '', '1.留言一多，分页就得要了，但是这个是用ajax提交的，根据目前的设计从url那得不到参数，看来不能用之前的分页来做了，得想个法子处理一下。<br />\n2.目前只是简单的用js检测带星号的内容有没填，还没做进一步检查。<br />\n3.php那边往数据库写入时，得防止sql注入。<br />\n4.以上三点，尽快把它们解决掉。', '2014-05-20 15:44:30', 1),
(69, 'admin', 'zxzhaw@163.com', '', '1.还有一点很不方便，输入内容的这个框只是一个简单的textarea，不能对输入进行任何格式化，只能在输入时手动输入html标签来排版。最突出的一个问题就是敲下回车后，它不会将换行符转为br。<br />\n2.既然有此问题，为何不引入一个在线编辑器呢？以后会考虑的，先这么着吧。', '2014-05-21 02:30:49', 1),
(104, 'admin', 'zxzhaw@163.com', '', '为什么不用$.get()来提交数据呢？<br />\n$.post()方法的使用和$.get()基本上一致，它们之前的区别比较隐晦，只是背后有些不同，在用户使用上体现不出来。区别如下：<br />\n1.GET请求是通过URL提交的，而POST请求是通过HTTP消息实体提交的。<br />\n2.GET提交有大小限制（2KB），而POST方式不受限制。<br />\n3.GET方式会被缓存下来，可能有安全性问题，而POST没有这个问题。<br />\n4.GET方式通过$_GET[]获取，POST方式通过$_POST[]获取。', '2014-05-21 04:55:09', 1),
(256, 'admin', 'zxzhaw@163.com', '', '13#所说的，原来是jquery-ui-1.10.3.js的一个bug，刚刚引用最新版jquery-ui-1.10.4.js就没这个问题了。【问题重述：第一次发表成功后，第二次再发，光标只要一定位在输入邮箱的这个text框时，就会自动失去焦点，自动提示也失效，控制台就会提示：TypeError: Cannot call method ''_focusTabbable'' of undefined】', '2014-05-28 09:23:35', 1),
(103, 'admin', 'zxzhaw@163.com', '', '测试用$.post来取代load()来提交数据。', '2014-05-21 04:41:53', 1),
(106, 'admin', 'zxzhaw@163.com', '', '$.ajax是最底层的封装，现在用它来试试提交数据。', '2014-05-22 04:00:18', 1),
(245, 'admin', 'zxzhaw@163.com', '', '加入搜索本地留言功能。', '2014-05-28 01:33:56', 1),
(148, 'admin', 'zxzhaw@163.com', '', '添加楼层号，解决一些显示上的小问题。', '2014-05-25 03:21:17', 1),
(145, 'admin', 'zxzhaw@163.com', '', '引入validate，可以对表单进行验证了，在chrome及firefox上调试通过。', '2014-05-24 14:20:42', 1),
(259, 'admin', 'zxzhaw@163.com', '', '<a href=''http://www.verycd.com/topics/2956408/'' target=''_blank''>猛击这里，查看由李炎恢主讲的jQuery基础视频（讲得挺详细）</a>', '2014-05-28 09:38:42', 1),
(232, 'admin', 'zxzhaw@163.com', '', '<a target=''blank'' href=''http://pan.baidu.com/share/link?uk=4211285463&shareid=579305153''>猛击这里，查看jQuery视频教程</a>', '2014-05-27 05:08:55', 1),
(246, 'admin', 'zxzhaw@163.com', '', '增加对textarea的字数限制，暂定200个。', '2014-05-28 02:10:44', 1),
(258, 'admin', 'zxzhaw@163.com', '', '<a href=''http://pan.baidu.com/share/link?uk=4211285463&shareid=543954'' target=''_blank''>猛击查看=>jQuery实例视频教程</a>', '2014-05-28 09:36:57', 1),
(242, 'yk', '1@df.com', '', '第二次发表留言时，到输入邮箱时，只要一点左边这个输入框，光标就会跳掉，基本没法输入，下拉提示也没了，严重影响心情！急待解决。', '2014-05-28 09:31:16', 1),
(233, 'admin', 'zxzhaw@163.com', '', '不能相信从表单收到的数据，别忘了使用：mysql_real_escape_string ---【 转义 SQL 语句中使用的字符串中的特殊字符，并考虑到连接的当前字符集】 ', '2014-05-27 05:07:50', 1),
(260, 'admin', 'zxzhaw@163.com', '', '<a href=''http://ajaxload.info/'' target=''_blank''>这个网站ajaxload.info提供了一些ajax提交时可能用到的图标</a>', '2014-05-28 10:13:42', 1),
(281, 'admin', 'zxzhaw@163.com', '', '将本站程序移植到CentOs上进行测试，谁知mysql始终连不上[mysql在另一台电脑上]，左试右试，原来是selinux在作怪。<br />暂时关闭它：setenforce 0 <br />查看都设置了哪些规则：getsebool -a <br />设置规则：setsebool -P \\''要设置的服务\\'' 1或0<br/>\n附：selinux的一些命令：\n<pre>\n查看SELinux状态：\n1、/usr/sbin/sestatus -v      ##如果SELinux status参数为enabled即为开启状态\nSELinux status:                 enabled\n2、getenforce                 ##也可以用这个命令检查\n关闭SELinux：\n1、临时关闭（不用重启机器）：\nsetenforce 0                  ##设置SELinux 成为permissive模式\n                              ##setenforce 1 设置SELinux 成为enforcing模式\n2、修改配置文件需要重启机器：\n修改/etc/selinux/config 文件\n将SELINUX=enforcing改为SELINUX=disabled\n重启机器即可\n</pre>', '2014-06-15 14:46:34', 1),
(280, 'admin', 'zxzhaw@163.com', '', '抽空去看下这本书------《javascript语言精粹》。', '2014-06-15 08:31:52', 1),
(279, 'admin', 'zxzhaw@163.com', '', '用ajax把分页弄出来了，其原理跟以前做的是一样的，只需稍微变通一下就可以了。', '2014-06-14 01:33:10', 1),
(282, 'admin', 'zxzhaw@163.com', '', '主页增加文章搜索功能。', '2014-06-20 05:40:43', 1),
(283, 'admin', 'zxzhaw@163.com', '', '增加一些小功能：<br/>网站title随着浏览内容动态改变，搜索文章时若没找到记录，则给出提示。留言区在显示所有留言后，可以再回到最初状态。', '2014-06-23 09:02:11', 1),
(284, 'aaaa', 'aaa@163.com', '', 'aaaaaaaaaaaaa', '2014-06-24 02:38:43', 1),
(285, 'admin', 'zxzhaw@163.com', '', 'mysql主从配置成功，并解决了同步时遇到的一些问题。', '2014-07-05 15:24:41', 1),
(286, 'admin', 'zxzhaw@163.com', '', 'IE11下面浏览肯定是没问题的。', '2014-07-15 05:23:14', 1),
(287, 'admin', 'zxzhaw@163.com', '', '1、由之前200字数限制改为1000，方便记录一些比较长的片段。\n2、优化分辨率大于1024*768的屏幕浏览效果。\n3、修正一些缺陷。', '2014-08-08 03:42:25', 1),
(288, 'admin', 'zxzhaw@163.com', '', '即时将结果输出到浏览器上，代码如下：\n<pre>\nfor ($i=10; $i>2; $i--)\n{\n    echo $i.''<br />'';\n    ob_flush(); //此句不能少\n    flush();\n    sleep(1);\n}\nob_end_flush();\n</pre>', '2014-08-23 13:29:59', 1),
(289, 'admin', 'zxzhaw@163.com', '', '说明：windows的路径分隔符是\\也可以是/，linux的路径分隔符是/，它不认识\\。<br />\n在 Windows 中，斜线（/）和反斜线（\\）都可以用作目录分隔符，在linux上路径的分隔符是/，这就导致了一个问题，比如开发机器是windows，有一个图片上传程序，，而我们又使用了(\\)作为文件分隔符，调试机器上指定的上传文件保存目录是：<br />define(''ROOT'',dirname(__FILE__)."\\upload")，在本地调试都很正常，但是上传到linux服务器的时候会发现会出错。<br />\nDIRECTORY_SEPARATOR是一个返回跟操作系统相关的路径分隔符的php内置命令，在windows上返回\\，而在linux或者类unix上返回/，就是这么个区别，通常在定义包含文件路径或者上传保存目录的时候会用到。', '2014-08-23 14:58:27', 1),
(290, 'admin', 'zxzhaw@163.com', '', '一别两个月了。', '2014-10-23 09:50:39', 1),
(291, 'admin', 'zxzhaw@163.com', '', '现在在Win8下留言。', '2015-03-14 05:32:38', 1),
(292, 'admin', 'zxzhaw@163.com', '', '现在在Win8下留言。', '2015-03-14 05:32:45', 1),
(297, 'admin', 'admin@163.com', '', '<a href=''http://209.85.228.22/''>google 209.85.228.22访问</a>', '2015-04-15 12:04:45', 1),
(303, 'hgf', 'hgf@163.com', '', '<p>ghgfhgfhg</p>', '2015-05-26 03:32:43', 0),
(302, 'admin', 'zxzhaw@163.com', '', '再增加一小功能，“点击显示所有文章”。', '2015-05-11 15:27:58', 1),
(304, 'fdsa', 'fdsa@163.com', '', '', '2015-05-26 04:03:45', 0),
(305, 'fd', 'fds@163.com', '', '', '2015-05-26 03:32:34', 0),
(306, 'admin', 'admin@163.com', '', '<p>引入ueditor，编辑内容方便多了。<br/></p>', '2015-05-23 03:42:10', 1),
(307, 'admin', 'admin@163.com', '', '<p>一、</p><p>二、</p><p>三、</p>', '2015-05-26 04:03:42', 0);

-- --------------------------------------------------------

--
-- 表的结构 `news`
--

CREATE TABLE IF NOT EXISTS `news` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` char(50) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL DEFAULT '''''',
  `dates` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `content` text CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `hits` int(11) NOT NULL DEFAULT '0',
  `is_delete` tinyint(2) unsigned NOT NULL DEFAULT '1' COMMENT '默认为1，0表示删除',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=170 ;

--
-- 转存表中的数据 `news`
--

INSERT INTO `news` (`id`, `title`, `dates`, `content`, `hits`, `is_delete`) VALUES
(44, '双引号转义', '2013-05-13 10:02:20', '双引号里面出现双引号，需要用\\将双引号转义。', 10, 1),
(45, '正则表达式', '2013-05-13 10:04:19', 'ereg()和eregi()后者不区分大小写。\r\nereg("正则表达式"，"要处理的文件"，"匹配结果存到这里定义的数组")。', 3, 1),
(46, '变量的命名', '2013-05-16 09:52:34', '<p>\r\n	变量名是严格区分大小的。</p><p>但内置结构和关键字以及用户自定义的类名和函数名都是不区分大小写的。&nbsp;</p><p>例如 echo 、while 、 class名称 、function 名称等都可以任意大小写。</p>', 8, 1),
(53, '单引号与双引号', '2013-05-16 11:20:27', '单引号再含单引号，需用\\转义，如:\r\necho ''that''s ok'';\r\n输出： that''s ok\r\n另外，它包含的变量不会被变量的值取代，如: \r\necho ''$a'';\r\n会原样输出：\r\n$a\r\n而双引号就会解析包含的变量，如：\r\n$a = 3;\r\necho "$a";\r\n会输出为：3\r\n\r\n', 3, 1),
(57, 'php查手册用到的函数', '2013-05-16 12:18:46', '<p>\r\n	<strong>str_replace() <span class="dc-title">子字符串替换</span></strong></p><p>&nbsp;&nbsp;&nbsp;&nbsp;<span class="type"><a title="mixed" class="type mixed" href="mk:@MSITStore:D:\\QMDownload\\php_manual_zh_review.chm::/res/language.pseudo-types.html#language.types.mixed">mixed</a> </span> <span class="methodname"><strong>str_replace</strong> </span> &nbsp; &nbsp;( <span class="methodparam"><span class="type"><a title="mixed" class="type mixed" href="mk:@MSITStore:D:\\QMDownload\\php_manual_zh_review.chm::/res/language.pseudo-types.html#language.types.mixed">mixed</a> </span> <code class="parameter">$search</code> </span> &nbsp; , <span class="methodparam"><span class="type"><a title="mixed" class="type mixed" href="mk:@MSITStore:D:\\QMDownload\\php_manual_zh_review.chm::/res/language.pseudo-types.html#language.types.mixed">mixed</a> </span> <code class="parameter">$replace</code> </span> &nbsp; , <span class="methodparam"><span class="type"><a title="mixed" class="type mixed" href="mk:@MSITStore:D:\\QMDownload\\php_manual_zh_review.chm::/res/language.pseudo-types.html#language.types.mixed">mixed</a> </span> <code class="parameter">$subject</code> </span> &nbsp; [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&amp;$count</code> </span> &nbsp;] )</p><p class="para rdfs-comment">&nbsp;&nbsp;&nbsp;&nbsp;该函数返回一个字符串或者数组。该字符串或数组是将 <code class="parameter">subject</code> 中全部的 <code class="parameter">search</code> 都被 <code class="parameter">replace</code> 替换之后的结果。</p><p class="para">&nbsp;&nbsp;&nbsp;&nbsp;如果没有一些特殊的替换需求（比如正则表达式），你应该使用该函数替换 <span class="function"><a title="ereg_replace()" class="function" href="mk:@MSITStore:D:\\QMDownload\\php_manual_zh_review.chm::/res/function.ereg-replace.html">ereg_replace()</a> </span> 和 <span class="function"><a title="preg_replace()" class="function" href="mk:@MSITStore:D:\\QMDownload\\php_manual_zh_review.chm::/res/function.preg-replace.html">preg_replace()</a> </span>。&nbsp;</p><p>&nbsp;<br/></p><p><strong>iconv_substr() 截取字符串部分内容</strong></p><p>&nbsp;&nbsp;&nbsp;&nbsp;<span class="type">string</span> <span class="methodname"><strong>iconv_substr</strong> </span>( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code> </span> &nbsp; , <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code> </span> &nbsp; [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code> <span class="initializer"> = iconv_strlen($str, $charset)</span> </span> &nbsp; [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$charset</code> <span class="initializer"> = ini_get(&quot;iconv.internal_encoding&quot;)</span> </span> &nbsp;]] )</p><p class="para rdfs-comment">&nbsp;&nbsp;&nbsp;&nbsp;根据 <code class="parameter">offset</code> 和 <code class="parameter">length</code> 参数指定 <code class="parameter">str</code> 截取的部分。&nbsp;</p><p><strong>mysql_real_escape_string() 转义</strong></p><p></p><p>&nbsp;&nbsp;&nbsp;&nbsp;<span class="type">string</span> <span class="methodname"><strong>mysql_real_escape_string</strong> </span> &nbsp; &nbsp; &nbsp; ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$unescaped_string</code> </span> &nbsp; &nbsp; &nbsp;[, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code> </span> &nbsp; &nbsp; ] )</p><p class="para rdfs-comment">&nbsp;&nbsp;&nbsp;&nbsp;本函数将 &nbsp; &nbsp; &nbsp;<code class="parameter">unescaped_string</code> &nbsp; &nbsp; &nbsp;中的特殊字符转义，并计及连接的当前字符集，因此可以安全用于 &nbsp; &nbsp; &nbsp;<span class="function"><a title="mysql_query()" class="function" href="mk:@MSITStore:D:\\QMDownload\\php_manual_zh_review.chm::/res/function.mysql-query.html">mysql_query()</a> </span>。&nbsp;</p><p><strong><br/></strong><br/></p><p>intval() <span class="dc-title">获取变量的整数值</span>&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<span class="type">int</span> <span class="methodname"><strong>intval</strong> </span> &nbsp; &nbsp;( <span class="methodparam"><span class="type"><a title="mixed" class="type mixed" href="mk:@MSITStore:D:\\QMDownload\\php_manual_zh_review.chm::/res/language.pseudo-types.html#language.types.mixed">mixed</a> </span> <code class="parameter">$var</code> </span> &nbsp; [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$base</code> <span class="initializer"> = 10</span> </span> &nbsp;] )</p><p class="para rdfs-comment">&nbsp;&nbsp;&nbsp;&nbsp;通过使用指定的进制 <code class="parameter">base</code> 转换（默认是十进制），返回变量 <code class="parameter">var</code> &nbsp; &nbsp; &nbsp;的 <span class="type"><a title="integer" class="type integer" href="mk:@MSITStore:D:\\QMDownload\\php_manual_zh_review.chm::/res/language.types.integer.html">integer</a> </span> 数值。 &nbsp; &nbsp; &nbsp; <span class="function"><strong>intval()</strong> </span> 不能用于 object，否则会产生 &nbsp;<strong><code>E_NOTICE</code> </strong> 错误并返回 1。</p><p><br/></p>', 7, 1),
(58, 'return的作用', '2013-05-18 10:36:38', '\r\n》return 语句可以向函数调用者返回函数体中任意确定的值。\r\n》将程序控制权回到调用者的作用域，即退出函数。\r\n在函数体中如果执行了 return语句，它后面的语句就不会被执行。', 2, 1),
(59, '凉鞋-边油加工费', '2013-05-19 12:52:53', '<p>\n    1、743+835+529.65+642+574+364+583+368+1104+722+1368+1468+596+1382+570+446+1330=13624.65\n</p>\n<p>\n    2、348+647+453+1167+908+786=4309\n\n总共：13624.65+4309=17933.65\n</p>', 4, 1),
(61, '经典for循环之百钱买百鸡', '2013-05-29 01:51:39', '<p>	</p><p><span style="background-color: rgb(221, 217, 195);">公鸡5文钱一只，母鸡3文钱一只，1文钱3只小鸡，问：共100文钱要买100只鸡，公鸡、母鸡、小鸡各多少只？（设每种至少一只）</span><br/></p><pre class="brush:php;toolbar:false"><span style="background-color: rgb(221, 217, 195);">for($g=1;$g&lt;=100;$g++){<br/>&nbsp;&nbsp;&nbsp;&nbsp;for($m=1;$m&lt;=100;$m++){<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for($x=1;$x&lt;=100;$x++){<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($g+$m+$x&nbsp;==&nbsp;100&nbsp;&amp;&amp;&nbsp;($g*5&nbsp;+&nbsp;$m*3&nbsp;+&nbsp;$x*(1/3))&nbsp;==&nbsp;100){<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;公鸡：&#39;&nbsp;.&nbsp;$g&nbsp;.&nbsp;&#39;只，&#39;;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;母鸡：&#39;&nbsp;.&nbsp;$m&nbsp;.&nbsp;&#39;只，&#39;;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;小鸡&#39;&nbsp;.&nbsp;$x&nbsp;.&nbsp;&#39;只。&#39;;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;&lt;br/&gt;&#39;;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/>}<br/></span></pre><p><span style="background-color: rgb(221, 217, 195);">运行结果是：</span></p><p><span style="background-color: rgb(221, 217, 195);"><span style="font-family: Simsun; font-size: medium; background-color: rgb(221, 217, 195);">公鸡：4只，母鸡：18只，小鸡78只。</span><br style="font-family: Simsun; font-size: medium; white-space: normal;"/><span style="font-family: Simsun; font-size: medium; background-color: rgb(221, 217, 195);">公鸡：8只，母鸡：11只，小鸡81只。</span><br style="font-family: Simsun; font-size: medium; white-space: normal;"/><span style="font-family: Simsun; font-size: medium; background-color: rgb(221, 217, 195);">公鸡：12只，母鸡：4只，小鸡84只。</span></span></p><p><span style="font-family: Simsun; font-size: medium; background-color: rgb(221, 217, 195);"><br/></span></p><p><span style="background-color: rgb(221, 217, 195);">假如在极端情况下，上面for无解，那得运行100*100*100=100W次。稍微优化一次，如果公鸡和母鸡的数量确定了，那小鸡的数量也可以算出来了，第三层for循环就可以去掉了：</span></p><pre class="brush:php;toolbar:false"><span style="background-color: rgb(221, 217, 195);">for($g=1;$g&lt;=100;$g++){<br/>&nbsp;&nbsp;&nbsp;&nbsp;for($m=1;$m&lt;=100;$m++){<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$x&nbsp;=&nbsp;100&nbsp;-&nbsp;$g&nbsp;-&nbsp;$m;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($g+$m+$x&nbsp;==&nbsp;100&nbsp;&amp;&amp;&nbsp;($g*5&nbsp;+&nbsp;$m*3&nbsp;+&nbsp;$x*(1/3))&nbsp;==&nbsp;100){<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;公鸡：&#39;&nbsp;.&nbsp;$g&nbsp;.&nbsp;&#39;只，&#39;;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;母鸡：&#39;&nbsp;.&nbsp;$m&nbsp;.&nbsp;&#39;只，&#39;;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;小鸡&#39;&nbsp;.&nbsp;$x&nbsp;.&nbsp;&#39;只。&#39;;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;&lt;br/&gt;&#39;;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/>}<br/></span></pre><p><span style="background-color: rgb(238, 236, 225);">此时在极端情况下运行100*100=1w次。</span></p><p><br/></p><p><span style="background-color: rgb(238, 236, 225);">再优化，考虑一下边界值，公鸡最多不会超过(100/5)-2=18;母鸡100/3</span></p><pre class="brush:php;toolbar:false"><span style="background-color: rgb(221, 217, 195);">for($g=1;$g&lt;=18;$g++){<br/>&nbsp;&nbsp;&nbsp;&nbsp;for($m=1;$m&lt;=33;$m++){<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$x&nbsp;=&nbsp;100&nbsp;-&nbsp;$g&nbsp;-&nbsp;$m;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($g+$m+$x&nbsp;==&nbsp;100&nbsp;&amp;&amp;&nbsp;($g*5&nbsp;+&nbsp;$m*3&nbsp;+&nbsp;$x*(1/3))&nbsp;==&nbsp;100){<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;公鸡：&#39;&nbsp;.&nbsp;$g&nbsp;.&nbsp;&#39;只，&#39;;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;母鸡：&#39;&nbsp;.&nbsp;$m&nbsp;.&nbsp;&#39;只，&#39;;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;小鸡&#39;&nbsp;.&nbsp;$x&nbsp;.&nbsp;&#39;只。&#39;;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;&lt;br/&gt;&#39;;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/>}<br/>此时在极端情况下就只需要运行18*33=594次了。<br/></span></pre><p><br/></p>', 4, 1),
(62, 'include,require,include_once,require_once用法', '2013-06-01 13:56:59', '<p>include,require,include_once,require_once之间的差别：<br/>include与require相同点都是包含文件，不同点是，include包含文件没找到时，报一个警告错误，并尝试继续往下执行，而require包含文件时，若没找到，则报一个致命错误，不再往下执行。<br/>加了_once后，则系统会检查有没被包含过，包含了，就不再包含，没被包含过，就包含一次。效率上来说，要低一点。</p>', 2, 1),
(63, 'alsamixer命令行下控制声音', '2013-06-01 14:23:56', 'alsamixer命令行下控制声音，远程操作，还是很神奇的。\r\n\r\nalsamixer－音频混音器，这可不好记，下面来抄写几下：\r\n\r\nalsamixer,alsamixer,alsamixer,alsamixer,alsamixer.', 4, 1),
(64, '现在可是在屏幕录像哦', '2013-06-02 02:55:36', '如你所见，现在看到了么？', 3, 1),
(67, '正则表达式', '2013-06-27 14:19:14', '\r\neregi;\r\npreg_match;', 3, 1),
(68, '考驾之路', '2013-07-02 02:46:18', '<p>	</p><p>3月26日报名。<br/></p><p>4月20日模拟科目一考试通过。91分\r\n5月20日通过科目一（一次通过）。95分【90合格，满分100】&nbsp;</p><p>7月02日通过科目二（第1次死在S路上，第2次通过）。90分【80合格，满分100】</p><p>9月11日12：30-16：30第一次上路练习（2号线上）。9月16日12：10-16:00第二次上路练习（3号线）。<strong>10月6日8：40-11：00</strong>，10月7日练一天， 10月8日路考（因大雨淹了很多路，取消），10月12日09：00开练，10月13路考（3号线）<br/></p>', 3, 1),
(69, '字体的顺序font', '2013-07-05 07:26:57', 'font-style,font-weight,font-size/line-height,font-family', 3, 1),
(70, 'a伪类的顺序', '2013-07-05 07:39:02', 'a:link,a:visited,a:hover,a:active', 3, 1),
(71, '全局变量', '2013-07-17 10:04:48', 'global variable', 3, 1),
(72, '求解一元二次方程', '2013-07-18 03:16:09', '<p>	</p><p>python代码：<br/></p><pre class="brush:python;toolbar:false">#&nbsp;coding=utf-8\r\n__author__&nbsp;=&nbsp;&#39;zhenxing&#39;\r\nimport&nbsp;math\r\n#计算一元二次方程\r\na&nbsp;=&nbsp;float(raw_input(&#39;请输入a的值:&nbsp;&#39;))\r\nb&nbsp;=&nbsp;float(raw_input(&#39;请输入b的值:&nbsp;&#39;))\r\nc&nbsp;=&nbsp;float(raw_input(&#39;请输入c的值:&nbsp;&#39;))\r\n#&nbsp;delta&nbsp;=&nbsp;b^2-4ac\r\ndelta&nbsp;=&nbsp;b&nbsp;**&nbsp;2&nbsp;-&nbsp;4&nbsp;*&nbsp;a&nbsp;*&nbsp;c\r\nif(a&nbsp;!=&nbsp;0):\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(delta&nbsp;&lt;&nbsp;0):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;&#39;无解&#39;\r\n&nbsp;&nbsp;&nbsp;&nbsp;elif&nbsp;delta&nbsp;==&nbsp;0:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s&nbsp;=&nbsp;-(b/2*a)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;&#39;此一元二次方程的唯一解是：&#39;&nbsp;,&nbsp;s\r\n&nbsp;&nbsp;&nbsp;&nbsp;else:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;root&nbsp;=&nbsp;math.sqrt(delta)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s1&nbsp;=&nbsp;-(b&nbsp;+&nbsp;root)&nbsp;/&nbsp;(2&nbsp;*&nbsp;a)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s2&nbsp;=&nbsp;-(b&nbsp;-&nbsp;root)&nbsp;/&nbsp;(2&nbsp;*&nbsp;a)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;&#39;此一元二次方程的第一个解是：&#39;&nbsp;,&nbsp;s1&nbsp;,&nbsp;&#39;\\n&#39;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;&#39;此一元二次方程的第二个解是：&#39;&nbsp;,&nbsp;s2&nbsp;,&nbsp;&#39;\\n&#39;\r\nelse:\r\n&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;&#39;a的值为0，计算无意义，程序退出&#39;</pre><p>php代码：</p><pre class="brush:php;toolbar:false">&lt;?php\r\nheader(&quot;Content-type:text/html;charset=utf-8&quot;);\r\nfunction&nbsp;yi($a,$b,$c){\r\n	if($a&nbsp;==&nbsp;0){\r\n		exit(&#39;a为0，计算无意义，程序退出&#39;);\r\n	}else{\r\n		$delta&nbsp;=&nbsp;pow($b,2)&nbsp;-&nbsp;(4&nbsp;*&nbsp;$a&nbsp;*&nbsp;$c);\r\n		if($delta&nbsp;&lt;&nbsp;0){\r\n			exit(&#39;此一元二次方程无解&#39;);\r\n		}elseif($delta&nbsp;==&nbsp;0){\r\n			echo&nbsp;&#39;此一元二次方程唯一解为：&#39;&nbsp;.&nbsp;-($b&nbsp;/&nbsp;2&nbsp;*&nbsp;$a);\r\n		}else{\r\n			$root&nbsp;=&nbsp;sqrt($delta);\r\n			echo&nbsp;&#39;此一元二次方程第一个解为：&#39;&nbsp;.&nbsp;-($b&nbsp;+&nbsp;$root)&nbsp;/&nbsp;(2&nbsp;*&nbsp;$a)&nbsp;.&nbsp;&#39;&lt;br/&gt;&#39;;\r\n			echo&nbsp;&#39;此一元二次方程第二个解为：&#39;&nbsp;.&nbsp;-($b&nbsp;-&nbsp;$root)&nbsp;/&nbsp;(2&nbsp;*&nbsp;$a);\r\n		}\r\n	}\r\n}\r\nyi(10,40,15);\r\n?&gt;</pre><p><br/></p>', 7, 1),
(73, 'js节点的查找', '2013-07-19 02:20:52', '<p>\r\n	1、document.getElementById:根据ID来查找节点&nbsp;</p><p>2、document.getElementsByTagName:根据标签来查找&nbsp;</p><p>3、document.getElementsByName:根据Name属性来查找</p>', 5, 1),
(74, 'IT的核心为开发', '2013-07-24 10:04:01', '有人说IT的核心为开发：创造东西。', 5, 1),
(75, 'cookie的五个参数', '2013-07-24 14:50:40', '第一个为名，第二个为值，第三个为生效时间，第四个为可访问目录，第五个为可访问域名。', 3, 1),
(76, 'cookie的添加，读取，删除', '2013-07-24 14:54:57', 'php中设置cookie：setcookie(''name'',''value'',''time'');\r\nphp中读取：cookie设置后，保存到$_COOKIE这个超全局变量中了。\r\n删除一个cookie，将第三个参数设为0即可。\r\n如,setcookie(''name'','''',0);', 5, 1),
(77, 'session操作', '2013-07-26 02:09:17', '无论是创建，修改，删除，还是销毁session,都需要先session_start()。一旦session_start()后，就可以$_SESSION就可以自由的添加，删除，修改。即当成一个普通数组来操作。\r\n$_SESSION[]=''''\r\nor\r\nsession_destory();', 2, 1),
(81, '如何判断闺年闺月', '2013-08-01 05:52:40', '<p>	</p><p>如果年份Y能被4整除但是不能被100整，或者能被400整除，就是闺年。<br/></p><pre class="brush:php;toolbar:false">&lt;?php\r\n\r\nif(($y&nbsp;%&nbsp;4)&nbsp;==&nbsp;0&nbsp;&amp;&amp;&nbsp;($y&nbsp;%&nbsp;100)&nbsp;!=&nbsp;0&nbsp;||&nbsp;($y&nbsp;%&nbsp;400)&nbsp;==&nbsp;0)\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;$y&nbsp;.&nbsp;&#39;是闺年&#39;&nbsp;.&nbsp;&#39;&lt;br/&gt;&#39;;\r\n&nbsp;}\r\n&nbsp;\r\n&nbsp;?&gt;</pre><p><br/></p>', 3, 1),
(85, 'js定时函数', '2013-08-01 14:21:04', '<p>setInterval() 方法可按照指定的周期（以毫秒计）来调用函数或计算表达式。</p><p>setInterval() 方法会不停地调用函数，直到 clearInterval() 被调用或窗口被关闭。由 setInterval() 返回的 ID 值可用作 clearInterval() 方法的参数。</p><p>setTimeout() 方法用于在指定的毫秒数后调用函数或计算表达式。</p>', 3, 1),
(86, 'php常用函数', '2013-08-05 12:24:40', '<p>	</p><p><strong>数学函数</strong><br/></p><p>求绝对值&nbsp;mixed abs(mixed number);&nbsp;</p><p>进一取整 &nbsp;int ceil(float number);</p><p>舍去法取整 &nbsp;int floor(float number)</p><p>浮点数取余 &nbsp;float fmod(float x,float,y)</p><p>浮点数取余 &nbsp;float fmod(float x,float,y)&nbsp;</p>函数返回x的y次方 &nbsp;pow(x,y)<p>求平方根 &nbsp;float sqrt(float arg)</p><p>求最大值 mixed max(number arg1,number arg2)</p><p>求最小值 mixed min(number arg1,number arg2)</p><p>随机取数 &nbsp; int rand_(int min, int max)</p><p>可替代rand 生成更好的随机数 &nbsp;int mt_rand(int min,int max)</p><p>获取圆周率 float pi(void)&nbsp;</p><p>任意进制之间的转换 &nbsp; string base_convert ( string $number , int $frombase , int $tobase )</p><p>计算指数 &nbsp;float exp ( float $arg )</p><p><strong>字符串函数</strong></p><p>trim(string str[,string charlist]) 删除字符串两端的空格或其他预定义字符</p><p>rtrim() &nbsp;删除字符串右边的空格或其他预定义字符 &nbsp; 其别名是chop</p><p>ltrim () &nbsp;删除字符串左边的空格或其他预定义字符</p><p>dirname(string path) &nbsp;返回路径中的目录部分&nbsp;</p><p>str_pad(string put,int pad_length[,string pad_string [,int pad_type]]) 把字符串填充为指定的长度 【pad】：填补&nbsp;</p><p>str_repeat(string input, int multiplier) &nbsp;重复使用指定字符串 &nbsp;</p><p>str_split() &nbsp;把字符串分割到数组中 &nbsp;【split】：分离，离开，劈开&nbsp;</p><p class="reader-word-layer reader-word-s4-1" style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 169px; font-family: Consolas, ea26ef1f10a6f524ccbf85d10010004, Consolas; position: absolute; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 2313px; height: 189px; line-height: 189px; top: 7755px; left: 683px; z-index: 93; letter-spacing: -0.88px; background-color: rgb(255, 255, 255);">strrev(string&nbsp;string)&nbsp;&nbsp;</p><p class="reader-word-layer reader-word-s4-9" style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 169px; font-family: 宋体, ea26ef1f10a6f524ccbf85d10030004, 宋体; letter-spacing: -0.87px; position: absolute; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 845px; height: 189px; line-height: 189px; top: 7755px; left: 2990px; z-index: 94; background-color: rgb(255, 255, 255);">反转字符串</p><p class="reader-word-layer reader-word-s4-15" style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 169px; font-family: Consolas, ea26ef1f10a6f524ccbf85d10010004, Consolas; letter-spacing: -9.71px; position: absolute; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 176px; height: 189px; line-height: 189px; top: 7755px; left: 3835px; z-index: 95; background-color: rgb(255, 255, 255);">&nbsp;&nbsp;</p><p class="reader-word-layer reader-word-s4-2" style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 169px; font-family: 宋体, ea26ef1f10a6f524ccbf85d10030004, 宋体; position: absolute; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 169px; height: 189px; line-height: 189px; top: 7755px; left: 4063px; z-index: 96; background-color: rgb(255, 255, 255);">【</p><p class="reader-word-layer reader-word-s4-1" style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 169px; font-family: Consolas, ea26ef1f10a6f524ccbf85d10010004, Consolas; position: absolute; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 649px; height: 189px; line-height: 189px; top: 7755px; left: 4233px; z-index: 97; letter-spacing: -0.66px; background-color: rgb(255, 255, 255);">reverse</p><p class="reader-word-layer reader-word-s4-2" style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 169px; font-family: 宋体, ea26ef1f10a6f524ccbf85d10030004, 宋体; position: absolute; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 169px; height: 189px; line-height: 189px; top: 7755px; left: 4882px; z-index: 98; background-color: rgb(255, 255, 255);">】</p><p class="reader-word-layer reader-word-s4-2" style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 169px; font-family: 宋体, ea26ef1f10a6f524ccbf85d10030004, 宋体; position: absolute; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 1015px; height: 189px; line-height: 189px; top: 7755px; left: 4967px; z-index: 99; letter-spacing: -0.7px; background-color: rgb(255, 255, 255);">：相反；颠倒</p><p class="reader-word-layer reader-word-s4-1" style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 169px; font-family: simsun; position: absolute; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 93px; height: 189px; line-height: 189px; top: 7755px; left: 5981px; z-index: 100; background-color: rgb(255, 255, 255);">&nbsp;</p><p>strrev(string string) &nbsp;反转字符串 &nbsp;【reverse】：相反；颠倒&nbsp;</p><p>wordwrap ( string str [, int width [, string break [, bool cut]]]) &nbsp;按照指定长度对字符串进行折行处理 【wrap】：包，缠绕 &nbsp;//分隔符 break 默认为\\n &nbsp;在源代码显示 ，若想看出效果需要加上&lt;br /&gt;等 &nbsp; cut &nbsp;判断是否分割单词 ，默认为false ，不分割。</p><p>str_shuffle()&nbsp;随机地打乱字符串中所有字符【</p><p class="reader-word-layer reader-word-s4-10" style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 169px; font-family: Consolas, ea26ef1f10a6f524ccbf85d10010004, Consolas; letter-spacing: -0.72px; position: absolute; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 649px; height: 189px; line-height: 189px; top: 11772px; left: 4697px; z-index: 207; background-color: rgb(255, 255, 255);">shuffle\r\n\r\n &nbsp; &nbsp;：洗牌，搅乱。</p><p>str_shuffle() 随机地打乱字符串中所有字符 &nbsp;【shuffle】：洗牌，搅乱。</p><p>strcmp() 区分大小写比较两字符串 &nbsp; cmp：【compare】：比较&nbsp;</p><p>strncmp() 比较字符串前n个字符,区分大小写 &nbsp;int strncmp ( string $str1 , string $str2&nbsp;</p><p>, int $len )&nbsp;</p><p>strncasecmp() 比较字符串前n个字符,不区分大小写 &nbsp;int strncasecmp ( string $str1 , string $str2 , int $len )</p><p>strnatcmp() 自然顺序法比较字符串长度,区分大小写</p><p>strnatcasecmp() 自然顺序法比较字符串长度,不区分大小写</p><p>chunk_split() 将字符串分成小块</p><p>strtok() 切开字符串 str strtok(str $str,str $token)</p><p>explode() 使用一个字符串为标志分割另一个字符串&nbsp;</p><p>string implode ( string $glue提供一个连接字符或者字符串 , array $pieces被连接的数组 ) $glue默认，用&#39;&#39;则直接相连</p><p>implode() 同join,将数组值用预订字符连接成字符串 【implode】：向内破裂</p><p>substr() 截取字符串 string substr ( string $string , int $start [, int $length ] ) 【sub】：截取</p><p>str_word_count() 统计字符串含有的单词数 mix str_word_count(str $str,[])&nbsp;</p><p>strlen() 统计字符串长度</p><p>count_chars() 统计字符串中所有字母出现次数</p><p>md5() 字符串md5编码</p><p>htmlentities() 把字符转为HTML实体</p><p>htmlspecialchars() 预定义字符转html编码&nbsp;</p><p>nl2br() \\n转义为&lt;br&gt;标签&nbsp;</p><p>strip_tags() 剥去 HTML、XML 以及 PHP 的标签</p><p>stripcslashes() &nbsp;删除由addcslashes()添加的反斜线</p><p>addslashes() 指定预定义字符前添加反斜线 &nbsp;把目标串中的&#39; &quot; \\和null进行转义处理&nbsp;</p><p>stripslashes() 删除由addslashes()添加的转义字符</p><p>quotemeta() 在字符串中某些预定义的字符前添加反斜线&nbsp;</p><p>hr() 从指定的 ASCII 值返回字符&nbsp;</p><p>ord() 返回字符串第一个字符的 ASCII 值 &nbsp;</p><p>str_replace() 字符串替换操作,区分大小写</p><p>str_ireplace() 字符串替换操作,不区分大小写</p><p>substr_count() 统计一个字符串,在另一个字符串中出现次数</p><p>substr_replace() 替换字符串中某串为另一个字符串</p><p>similar_text() 返回两字符串相同字符的数量 int similar_text(str $str1,str $str2) 两个 比较的字符串</p><p>strrchr() 返回一个字符串在另一个字符串中最后一次出现位置开始到末尾的字符串</p><p>strstr() 返回一个字符串在另一个字符串中开始位置到结束的字符串&nbsp;</p><p>strchr() strstr()的别名,返回一个字符串在另一个字符串中首次出现的位置开始到末尾的字符串 &nbsp;</p><p>stristr() 返回一个字符串在另一个字符串中开始位置到结束的字符串，不区分大小写</p><p>strtr() 转换字符串中的某些字符 &nbsp;&nbsp;</p><p>strpos() &nbsp;寻找字符串中某字符最先出现的位置,区分大小写&nbsp;</p><p>stripos() 寻找字符串中某字符最先出现的位置,不区分大小写&nbsp;</p><p>strrpos() 寻找某字符串中某字符最后出现的位置</p><p>strripos() 寻找某字符串中某字符最后出现的位置,不区分大小写 &nbsp;</p><p>strspn() 返回字符串中首次符合mask的子字符串长度 &nbsp;</p><p>strcspn() 返回字符串中不符合mask的字符串的长度</p><p><strong>数组函数</strong></p><p>array() &nbsp;生成一个数组&nbsp;</p><p>array_combine(array1,array2) 生成一个数组，用一个数组的值作为其键名，另一个数组的值作为其值 【combine】：使联合，使结合&nbsp;</p><p>range 创建并返回一个包含指定范围的元素的数组 &nbsp;（开始|结束|步长）</p><p>compact（） 创建一个由参数所带变量组成的数组 &nbsp;【compact】：合同，使紧凑，使简洁 &nbsp; 变量=&gt;变量值</p><p>array_fill(键|填充数量|填充内容)&nbsp;</p><p>array_chunk(array,size,[preserve_key])把一个数组分割成新的数组块 &nbsp;【chunk]：大块的； //true - 保留原始数组中的键名。 false - 默认。每个结果数组使用从零开始的新数组索引。</p><p>array_merge() 把两个或多个数组合并为一个数组 【merge】 ：合并，融合&nbsp;</p><p>array_slice(array|offset|length|[preserve_key]) 在数组中根据条件取出一段值，并返回 &nbsp;slice:切下，把。。分成部分&nbsp;</p><p>array_diff(array1,array2) 返回两个数组的差集数组(返回的是第一个数组的值) 【differential】:差别的，特异的</p><p>array_intersect(array1,array2) 返回两个或或多个数组的交集数组 【intersect】:相交，交叉，贯穿；</p><p>array_search(value,array,[strict【真时返回键名，假时返回false】])在数组中查找一个键&nbsp;</p><p>array_splice(array[被移除数组],offset[移除开始参数],length[移除长度，默认为true，offset到数组结尾],array[填充数组])&nbsp;</p><p>array_sum() 返回数组中所有值的总和</p><p>in_array(value,array[,type真时true,假时false])在数组中搜索给定的值，区分大小写</p><p>array_key_exists(key,array) 判断某个数组中是否存在指定的键名或索引 【exists】:存在，出现</p><p>key() 返回数组内部指针当前指向元素的键名</p><p>current() 返回数组中的当前元素（单元）。&nbsp;</p><p>pos() &nbsp;current() 函数&nbsp;的别名&nbsp;</p><p>next() 把指向当前元素的指针移动到下一个元素的位置，并返回当前元素的值 &nbsp;</p><p>prev() 把指向当前元素的指针移动到上一个元素的位置，并返回当前元素的值 &nbsp; &nbsp; &nbsp;</p><p>end() &nbsp;将数组内部指针指向最后一个元素，并返回该元素的值（如果成功） &nbsp; &nbsp; &nbsp;</p><p>reset() 把数组的内部指针指向第一个元素，并返回这个元素的值</p><p>list () 用数组中的元素为一组变量赋值 &nbsp; 【list】：列表，清单，</p><p>array_shift 删除数组中的第一个元素，并返回被删除元素的值 【shift】：移动，改变，替换</p><p>array_unshift() 在数组开头插入一个或多个元素</p><p>array_push() 向数组最后压入一个或多个元素&nbsp;</p><p>array_pop() 删除数组中的最后一个元素&nbsp;</p><p>shuffle() 将数组打乱,不保留键名</p><p>count() 计算数组中的单元数目或对象中的属性个数</p><p>array_flip() 返回一个键值反转后的数组 &nbsp;【flip】: 掷， 轻击。</p><p>array_keys() 返回数组所有的键,组成一个数组</p><p>array_values() 返回数组中所有值，组成一个数组</p><p>array_reverse() 返回一个元素顺序相反的数组</p><p>array_count_values() &nbsp;统计数组中所有的值出现的次数</p><p>array_rand() 从数组中随机抽取一个或多个元素,注意是键名!!!&nbsp;</p><p>array_unique() 删除重复值，返回剩余的数组。 &nbsp;</p><p>bool sort(array &amp;$array [,int $sort_flags]) 按升序对给定数组的值进行排序，不保留键名。返回bool值</p><p>rsort() 对数组逆向排序，不保留键名。</p><p>asort() 对数组排序，保持索引关系。</p><p>arsort() &nbsp;对数组逆向排序，保持索引关系。</p><p>ksort() &nbsp;按键名对数组排序。</p><p>krsort() 将数组按照键名逆向排序</p><p>natsort() &nbsp;用自然顺序算法对数组中的元素排序 &nbsp; 记忆：【nature】：自然</p><p>natcasesort() &nbsp;自然排序，不区分大小写。</p>', 11, 1);
INSERT INTO `news` (`id`, `title`, `dates`, `content`, `hits`, `is_delete`) VALUES
(88, 'mysql笔记一之基本增删改查', '2013-08-09 09:14:11', '<p>	</p><p>好记性不如烂笔头哇，把它记下来，可比相信记忆靠谱多了<br/></p><pre class="brush:html;toolbar:false">mysql默认有个test库，操作表前，需先选择test库【use&nbsp;test】。\r\n先来建一张表：\r\n&nbsp;&nbsp;&nbsp;&nbsp;create&nbsp;table&nbsp;member(\r\n&nbsp;//&nbsp;字段名&nbsp;类型&nbsp;参数&nbsp;默认值\r\n&nbsp;&nbsp;&nbsp;&nbsp;id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;&nbsp;[unsigned&nbsp;not&nbsp;null]&nbsp;default&nbsp;0&nbsp;auto_increment(自增长),\r\n&nbsp;&nbsp;&nbsp;&nbsp;content&nbsp;text&nbsp;not&nbsp;null&nbsp;default&nbsp;&#39;&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;primary&nbsp;key(id);\r\n&nbsp;&nbsp;&nbsp;&nbsp;//设置引擎及编码\r\n&nbsp;&nbsp;&nbsp;&nbsp;)engine&nbsp;myisam&nbsp;charset&nbsp;utf8;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;一个建表例子：\r\n&nbsp;&nbsp;&nbsp;&nbsp;create&nbsp;table&nbsp;user(\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id&nbsp;int(10)&nbsp;not&nbsp;null&nbsp;auto_increment,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;username&nbsp;char(10)&nbsp;not&nbsp;null&nbsp;default&#39;&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;content&nbsp;text&nbsp;not&nbsp;null&nbsp;default&#39;&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;utime&nbsp;time&nbsp;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;primary&nbsp;key(id)\r\n&nbsp;&nbsp;&nbsp;&nbsp;)engine&nbsp;myisam&nbsp;charset&nbsp;utf8;</pre><p>往表中插入一行值：</p><p><span style="background-color: rgb(216, 216, 216);">insert into [table_name] values [列1，列2，列3...] ;</span></p><p>往表中插入一行值（只插入指定的列）</p><p><span style="background-color: rgb(216, 216, 216);">insert into [table_name] [字段1，字段2] values [字段1的值],[字段2的值];</span></p><p>将表A的数据插入到表B中来：</p><p><span style="background-color: rgb(216, 216, 216);">insert into [表A] [字段1，字段2] select [字段a,字段b] from [表B]; #实际SQL中[]是不需要的</span></p><p>某列中插入多行的另种写法：</p><p><span style="background-color: rgb(216, 216, 216);">insert into [table_name] values (列1，列2，列3...),(列1，列2，列3...);</span></p><p>删除某列的值（<em>注意：</em><em>使用update和delete时最好加上where条件，否则就变成更新所有行和删除所有行了</em>）<br/></p><p><span style="background-color: rgb(216, 216, 216);">delete from [table_name] where [满足哪个条件执行]。</span></p><p><span style="background-color: rgb(216, 216, 216);">delete from [table_name] where id=NULL; //原意是打算删除id的值为NULL的行，一执行，发现啥也没删，把where改写一下，where isnull(id),这样就会删除id的值为NULL的行了。</span></p><p>删除表中所有数据：</p><p><span style="background-color: rgb(216, 216, 216);">使用 truncate table_name 而不使用 delete from table_name，因为truncate 实际是删除原来的表并重新创建一张表，而不是逐行删除表中的数据，所以它执行起来更快些。通过truncate删除表内所有数据后，再往表里插入数据，其自动增长ID会从1开始，而用delete删除表内所有数据后，自动增长ID不会从1开始。</span><br/></p><p>修改某列的值：<span style="background-color: rgb(216, 216, 216);"></span></p><p><span style="background-color: rgb(216, 216, 216);">update [table_name] set&nbsp;[字段1=值1],[字段2=值2] where [满足哪个条件执行]。</span></p><p>查找某列的值：</p><p><span style="background-color: rgb(216, 216, 216);">select [要显示哪几个字段，全部显示，写*，要不显示重复的行，在字段名前加上关键DISTINCT] from [table_name] where [满足哪个条件执行]。</span></p><p><span style="background-color: rgb(216, 216, 216);"><br/></span></p><pre class="brush:sql;toolbar:false">【\r\nwhere后面跟什么呢？\r\n想找一个id大于某个值的，如33，那么sql语句为：\r\nselect&nbsp;*&nbsp;from&nbsp;[table_name]&nbsp;where&nbsp;id&nbsp;&gt;&nbsp;33;\r\n同理，小于用&lt;,不等于用!=或&lt;&gt;等等。\r\n\r\n想找出id为22和33的数据，where前面不变，后面为为：\r\nid&nbsp;=&nbsp;22&nbsp;or&nbsp;id&nbsp;=&nbsp;33;\r\n另外可用in这么写：\r\nid&nbsp;in(22,33);\r\n\r\n想找出id在某个范围之前的值，如12至32。\r\nwhere&nbsp;id&nbsp;&gt;=&nbsp;12&nbsp;and&nbsp;id&nbsp;&lt;=&nbsp;32;\r\n用&nbsp;between...and...&nbsp;可以这么表示：\r\nwhere&nbsp;id&nbsp;between&nbsp;12&nbsp;and&nbsp;32;\r\n//between...and...&nbsp;找出来的结果，包含了边界值。\r\n\r\n模糊查询like。\r\n想找出字段dates开头为&#39;2013-08-01&#39;的数据来：\r\nwhere&nbsp;dates&nbsp;like&nbsp;&#39;2013-08-01%&#39;;&nbsp;&nbsp;//%匹配任意字符，_匹配单个字符。\r\n在上面的结果里再找出字段hits为三位数的值来：\r\nwhere&nbsp;dates&nbsp;like&nbsp;&#39;2013-08-01&#39;&nbsp;and&nbsp;hits&nbsp;like&nbsp;&#39;___&#39;;\r\n】</pre><p><span style="background-color: rgb(216, 216, 216);"></span></p><p><strong>在已有表上进行增加、修改、删除列：</strong></p><p>增加：</p><p><span style="background-color: rgb(216, 216, 216);">alter table [table_name] add [列名] [列类型] [列参数];</span></p><p><span style="background-color: rgb(216, 216, 216);">例 ：alter table member add pid char(10) not null default 0;</span></p><p><span style="background-color: rgb(216, 216, 216);"><br/></span></p><p>在某列之后增加：</p><p><span style="background-color: rgb(216, 216, 216);">alter table [table_name] add [列名] [列类型] [列参数] after [添加在哪列后面？这里填上它的列名];</span></p><p><span style="background-color: rgb(216, 216, 216);">例： alter table member add username varchar(5) not null default &#39;&#39; after pid;</span></p><p><span style="background-color: rgb(216, 216, 216);"><br/></span></p><p>增加一列于表最前面：</p><p><span style="background-color: rgb(216, 216, 216);">alter table [table_name] add [列名] [列类型] [列参数] first</span><br/></p><p><span style="background-color: rgb(216, 216, 216);">例： alter table member add test1 int first;</span></p><p><span style="background-color: rgb(216, 216, 216);"><br/></span></p><p>修改某列参数：</p><p><span style="background-color: rgb(216, 216, 216);">alter table [table_name] modify [列名] [新列类型] [新列参数];</span><br/></p><p><span style="background-color: rgb(216, 216, 216);">例： alter table member modify test1 tinyint(2) unsigned not null default 0;</span></p><p><span style="background-color: rgb(216, 216, 216);"><br/></span></p><p>修改某列名及参数：</p><p><span style="background-color: rgb(216, 216, 216);">alter table [table_name] change [旧列名][新列名] [新列类型] [新列参数];</span></p><p><span style="background-color: rgb(216, 216, 216);">例：alter table member change test1 test2 int not null default 0;</span></p><p><span style="background-color: rgb(216, 216, 216);"><br/></span></p><p>删除某列：</p><p><span style="background-color: rgb(216, 216, 216);">alter table [table_name] drop [列名];</span><br/></p><p><span style="background-color: rgb(216, 216, 216);">例： alter table member drop test1;</span></p><p>&nbsp;&nbsp;&nbsp;&nbsp;<br/></p><p><strong>group by :</strong></p><p>假如要分别统计pid为1，5，10的count之和（如下），用group by 和 sum组合即可达到。</p><pre>&nbsp;&nbsp;&nbsp;&nbsp;+------+-----+\r\n&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;count|&nbsp;pid&nbsp;|\r\n&nbsp;&nbsp;&nbsp;&nbsp;+------+-----+\r\n&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;|&nbsp;&nbsp;&nbsp;1&nbsp;|\r\n&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;|&nbsp;&nbsp;&nbsp;1&nbsp;|\r\n&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;|&nbsp;&nbsp;&nbsp;1&nbsp;|\r\n&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;12&nbsp;|&nbsp;&nbsp;&nbsp;5&nbsp;|\r\n&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;22&nbsp;|&nbsp;&nbsp;10&nbsp;|\r\n&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;25&nbsp;|&nbsp;&nbsp;10&nbsp;|\r\n&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;35&nbsp;|&nbsp;&nbsp;10&nbsp;|\r\n&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;45&nbsp;|&nbsp;&nbsp;10&nbsp;|\r\n&nbsp;&nbsp;&nbsp;&nbsp;+------+-----+</pre><p>执行 ：<span style="background-color: rgb(216, 216, 216);">select pid,sum(count) from [table_name] group by pid </span>后</p><p>结果如下：</p><pre>&nbsp;&nbsp;&nbsp;&nbsp;+-------+------------+\r\n&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;pid&nbsp;&nbsp;|&nbsp;sum(count)&nbsp;|\r\n&nbsp;&nbsp;&nbsp;&nbsp;+-------+------------+\r\n&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6&nbsp;&nbsp;&nbsp;&nbsp;|\r\n&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;12&nbsp;&nbsp;&nbsp;&nbsp;|\r\n&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;10&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;127&nbsp;&nbsp;&nbsp;&nbsp;|\r\n&nbsp;&nbsp;&nbsp;&nbsp;+-------+------------+</pre><p><strong>having 在结果中筛选</strong></p><p><strong><span style="color: rgb(192, 0, 0);">有这么一道题：在如下数据中，计算出挂科数大于等于2的平均成绩来。（用having结合group by）</span></strong></p><pre>+------+---------+-------+\r\n|&nbsp;name&nbsp;|&nbsp;subject&nbsp;|&nbsp;score&nbsp;|\r\n+------+---------+-------+\r\n|&nbsp;张三&nbsp;|&nbsp;数学&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;90&nbsp;|\r\n|&nbsp;张三&nbsp;|&nbsp;语文&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;50&nbsp;|\r\n|&nbsp;张三&nbsp;|&nbsp;地理&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;40&nbsp;|\r\n|&nbsp;李四&nbsp;|&nbsp;语文&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;55&nbsp;|\r\n|&nbsp;李四&nbsp;|&nbsp;政治&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;45&nbsp;|\r\n|&nbsp;王五&nbsp;|&nbsp;政治&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;30&nbsp;|\r\n|&nbsp;赵六&nbsp;|&nbsp;语文&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;99&nbsp;|\r\n|&nbsp;赵六&nbsp;|&nbsp;数学&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;100&nbsp;|\r\n|&nbsp;赵六&nbsp;|&nbsp;英语&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;98&nbsp;|\r\n+------+---------+-------+</pre><p>下面来分解一下该题，如果只是算每个人的平均成绩，那么下面这一句就够了：</p><p>1、&nbsp;计算出每个人的平均成绩(result为该表表名)：</p><pre>mysql&gt;&nbsp;select&nbsp;name,avg(score)&nbsp;from&nbsp;result&nbsp;group&nbsp;by&nbsp;name;\r\n+------+------------+\r\n|&nbsp;name&nbsp;|&nbsp;avg(score)&nbsp;|\r\n+------+------------+\r\n|&nbsp;张三&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;60.0000&nbsp;|\r\n|&nbsp;李四&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;50.0000&nbsp;|\r\n|&nbsp;王五&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;30.0000&nbsp;|\r\n|&nbsp;赵六&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;99.0000&nbsp;|\r\n+------+------------+</pre><p>2、题目要求算挂科大于等于2的来，先想办法把挂科的标记出来(score&lt;60)。</p><p>标记出挂科类别来：</p><pre>mysql&gt;&nbsp;select&nbsp;name,subject,score,(score&lt;60)&nbsp;from&nbsp;result&nbsp;;\r\n+------+---------+-------+------------+\r\n|&nbsp;name&nbsp;|&nbsp;subject&nbsp;|&nbsp;score&nbsp;|&nbsp;(score&lt;60)&nbsp;|\r\n+------+---------+-------+------------+\r\n|&nbsp;张三&nbsp;|&nbsp;数学&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;90&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;|\r\n|&nbsp;张三&nbsp;|&nbsp;语文&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;50&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;|\r\n|&nbsp;张三&nbsp;|&nbsp;地理&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;40&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;|\r\n|&nbsp;李四&nbsp;|&nbsp;语文&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;55&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;|\r\n|&nbsp;李四&nbsp;|&nbsp;政治&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;45&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;|\r\n|&nbsp;王五&nbsp;|&nbsp;政治&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;30&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;|\r\n|&nbsp;赵六&nbsp;|&nbsp;语文&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;99&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;|\r\n|&nbsp;赵六&nbsp;|&nbsp;数学&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;100&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;|\r\n|&nbsp;赵六&nbsp;|&nbsp;英语&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;98&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;|\r\n+------+---------+-------+------------+</pre><p>&nbsp;3、统计一下每人挂科数目（只要加一下score&lt;60）：</p><pre>&nbsp;mysql&gt;&nbsp;select&nbsp;name,subject,score,sum(score&lt;60)&nbsp;from&nbsp;result\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;group&nbsp;by&nbsp;name;\r\n+------+---------+-------+---------------+\r\n|&nbsp;name&nbsp;|&nbsp;subject&nbsp;|&nbsp;score&nbsp;|&nbsp;sum(score&lt;60)&nbsp;|\r\n+------+---------+-------+---------------+\r\n|&nbsp;张三&nbsp;|&nbsp;数学&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;90&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;|\r\n|&nbsp;李四&nbsp;|&nbsp;语文&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;55&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;|\r\n|&nbsp;王五&nbsp;|&nbsp;政治&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;30&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;|\r\n|&nbsp;赵六&nbsp;|&nbsp;语文&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;99&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;|\r\n+------+---------+-------+---------------+</pre><p>4、在上面的基础上再算一下它们的平均成绩，用avg(score)来统计一下就行。</p><pre>mysql&gt;&nbsp;select&nbsp;name,avg(score),sum(score&lt;60)&nbsp;as&nbsp;gks&nbsp;from&nbsp;result&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;group&nbsp;by&nbsp;name&nbsp;;\r\n+------+------------+------+\r\n|&nbsp;name&nbsp;|&nbsp;avg(score)&nbsp;|&nbsp;gks&nbsp;&nbsp;|\r\n+------+------------+------+\r\n|&nbsp;张三&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;60.0000&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;|\r\n|&nbsp;李四&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;50.0000&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;|\r\n|&nbsp;王五&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;30.0000&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;|\r\n|&nbsp;赵六&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;99.0000&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;|\r\n+------+------------+------+</pre><p>最后： 只要挂科数&gt;=2的数据，用having一筛选就OK。</p><pre>mysql&gt;&nbsp;select&nbsp;name,avg(score),sum(score&lt;60)&nbsp;as&nbsp;gks&nbsp;from&nbsp;result&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;group&nbsp;by&nbsp;name&nbsp;having&nbsp;gks&nbsp;&gt;=2;\r\n+------+------------+------+\r\n|&nbsp;name&nbsp;|&nbsp;avg(score)&nbsp;|&nbsp;gks&nbsp;&nbsp;|\r\n+------+------------+------+\r\n|&nbsp;张三&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;60.0000&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;|\r\n|&nbsp;李四&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;50.0000&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;|\r\n+------+------------+------+</pre><p><strong>order by :对最后的结果集进行排序</strong></p><p>有这么张表：</p><pre>mysql&gt;&nbsp;select&nbsp;*&nbsp;from&nbsp;test1;\r\n+----------+--------+\r\n|&nbsp;add_time&nbsp;|&nbsp;number&nbsp;|\r\n+----------+--------+\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;123&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;154&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;123&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;13&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;30&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;87&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;27&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;20&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9&nbsp;|\r\n+----------+--------+</pre><p>对number进行升序排序（从小到大）</p><pre>mysql&gt;&nbsp;select&nbsp;*&nbsp;from&nbsp;test1&nbsp;order&nbsp;by&nbsp;number&nbsp;asc;\r\n+----------+--------+\r\n|&nbsp;add_time&nbsp;|&nbsp;number&nbsp;|\r\n+----------+--------+\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;123&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;154&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;123&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;27&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;13&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;87&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;30&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;20&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9&nbsp;|\r\n+----------+--------+</pre><p>得到的结果中，发现add_time是杂乱无序的，想对它再进行降序排序，怎么操作呢，很简单，在第一次排序后面以逗号隔开，再写上add_time,空一格后面跟desc(倒序)，默认不跟是升序(asc)。</p><pre>mysql&gt;&nbsp;select&nbsp;*&nbsp;from&nbsp;test1&nbsp;order&nbsp;by&nbsp;number&nbsp;asc,add_time&nbsp;desc;\r\n+----------+--------+\r\n|&nbsp;add_time&nbsp;|&nbsp;number&nbsp;|\r\n+----------+--------+\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;154&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;123&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;123&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;27&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;87&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;13&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;30&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;20&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9&nbsp;|\r\n+----------+--------+</pre><p><strong>limit 限制取出条数</strong></p><p>limit offset N === &gt; offset 偏移量（从第几条后开始取），N 条数（取几条）。不写offset的话，默认从0开始，也就是limit 0,N。</p><p>在上面排序得到的结果中，只想看前三名，咋办？<br/></p><pre>mysql&gt;&nbsp;select&nbsp;*&nbsp;from&nbsp;test1&nbsp;order&nbsp;by&nbsp;number&nbsp;asc,add_time&nbsp;desc&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;limit&nbsp;3;\r\n+----------+--------+\r\n|&nbsp;add_time&nbsp;|&nbsp;number&nbsp;|\r\n+----------+--------+\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;154&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;123&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;123&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;|\r\n+----------+--------+</pre><p>接下来，还是取三条，但只想看前三名以后的三条</p><pre>mysql&gt;&nbsp;select&nbsp;*&nbsp;from&nbsp;test1&nbsp;order&nbsp;by&nbsp;number&nbsp;asc,add_time&nbsp;desc&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;limit&nbsp;3,3;\r\n+----------+--------+\r\n|&nbsp;add_time&nbsp;|&nbsp;number&nbsp;|\r\n+----------+--------+\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;27&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;87&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;|\r\n+----------+--------+</pre>', 31, 1),
(92, 'css之强制换行word-break:break-all', '2013-08-09 14:16:42', '<p>在不加word-break:break-all的情况下，纯数字超过盒子宽度后，会突出来，如下：</p><p><span style="background-color: rgb(191, 191, 191);">53253028509</span>346534</p><p>当加上word-break:break-all，让它强制换行，就会这样显示：</p><p><span style="background-color: rgb(191, 191, 191);">53253028509</span><br /><span style="background-color: rgb(191, 191, 191);">346534</span></p>', 2, 1),
(93, 'git常用命令', '2013-08-18 03:04:49', '<p class="cont_info_artical">记录一些git常用操作</p><p>git init &nbsp;//初始化仓库</p><p>git add &nbsp;//</p><p>git commit -m &#39;添加注释&#39;</p><p><br/></p><p>git clone 地址 //克隆一个仓库</p><p>git push &nbsp;//</p>', 1, 1),
(94, 'mysql笔记二之常用命令及多表查询', '2013-08-18 05:22:13', '<p>	</p><p><br/></p><p>记录一下经常用到的那些mysql命令，以便事后查记。<br/></p><p class="cont_info_artical"><strong>数据库连接：</strong><br/> &nbsp;<span style="background-color: rgb(216, 216, 216);">mysql -u username -p password -h host</span><br/> &nbsp;<span style="background-color: rgb(216, 216, 216);">-u 用户名</span><br/> &nbsp;<span style="background-color: rgb(216, 216, 216);">-p 密码</span><br/> &nbsp;<span style="background-color: rgb(216, 216, 216);">-h 主机</span></p><p style="white-space: normal;"><strong>设置字符集：</strong><br/><span style="background-color: rgb(216, 216, 216);">set names [utf8/gbk];</span><br/></p><p><strong>查看现有数据库：</strong><br/><span style="background-color: rgb(216, 216, 216);">show databases;</span></p><p><strong>选择数据库：</strong><br/><span style="background-color: rgb(216, 216, 216);">use [databases_name];</span></p><p><strong>选择数据库后，查看有哪些表：</strong><br/><span style="background-color: rgb(216, 216, 216);">show tables;</span></p><p><strong>接着查看某张表的结构：</strong><br/> <span style="background-color: rgb(216, 216, 216);">desc [table_name];</span></p><p><strong>查某张表建表语句：</strong><br/><span style="background-color: rgb(216, 216, 216);">show create table [table_name];</span></p><p><strong><span style="background-color: rgb(216, 216, 216);">修改表名：</span></strong></p><p><span style="background-color: rgb(216, 216, 216);">alter table table_name rename to new_table_name;</span></p><p><span style="background-color: rgb(216, 216, 216);">rename table table_name to new_table_name;</span></p><p><strong>五个统计函数：</strong></p><pre>&nbsp;&nbsp;max:&nbsp;&nbsp;&nbsp;&nbsp;求最大\r\n&nbsp;&nbsp;min:&nbsp;&nbsp;&nbsp;&nbsp;求最小\r\n&nbsp;&nbsp;sum:&nbsp;&nbsp;&nbsp;&nbsp;求总和\r\n&nbsp;&nbsp;avg:&nbsp;&nbsp;&nbsp;&nbsp;求平均数\r\n&nbsp;&nbsp;count:&nbsp;&nbsp;计算条数</pre><p>select count(*) from [table_name];<br/>select count(列名) from [table_name];<br/>select count(1) from [table_name];</p><p>//这三条语句都是统计行数，其区别是，中间是*的，统计的是绝对行数，中间是列名的，如那列的值为NULL，那么它不计算在内。对引擎为myisam的表来说，count(*)和count(1)没有区别，因为它内部有专门在维护行数计算器。</p><p>子查询：</p><p>where 子查询<br/>\r\n &nbsp;from 子查询<br/>\r\n &nbsp;exists 子查询</p><p>多表查询：</p><p>两表全联：</p><p><strong>select * from 表A,表B where <strong style="white-space: normal;">A.[x列] = B.[y列] ；</strong></strong></p><p>左连接 &nbsp;【表A left join 表B on 条件】 &nbsp;它产生的结果，可当成表C，表A和表B有的列，都可以取出来。对它进行order by ,group by ,limit等操作。</p><p><strong>select A.[列],B.[列] from A left join B on A.[x列] = B.[y列];</strong></p><p>在效率上，左连接要比上面的高很多。</p><p>右连接：A right join B on 条件。<br/>内连接：A inner join B on 条件。<br/>有两张表m和t:hid表示客场id，gid表示主场id，mid表示场次。</p><pre>mysql&gt;&nbsp;select&nbsp;*&nbsp;from&nbsp;m;\r\n+------+------+------+------+------------+\r\n|&nbsp;mid&nbsp;&nbsp;|&nbsp;hid&nbsp;&nbsp;|&nbsp;gid&nbsp;&nbsp;|&nbsp;mres&nbsp;|&nbsp;matime&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n+------+------+------+------+------------+\r\n|&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;|&nbsp;2:0&nbsp;&nbsp;|&nbsp;2006-05-21&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;|&nbsp;1:2&nbsp;&nbsp;|&nbsp;2006-06-21&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;|&nbsp;2:5&nbsp;&nbsp;|&nbsp;2006-06-25&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;|&nbsp;3:2&nbsp;&nbsp;|&nbsp;2006-07-21&nbsp;|\r\n+------+------+------+------+------------+</pre><pre>mysql&gt;&nbsp;select&nbsp;*&nbsp;from&nbsp;t;\r\n+------+----------+\r\n|&nbsp;tid&nbsp;&nbsp;|&nbsp;tname&nbsp;&nbsp;&nbsp;&nbsp;|\r\n+------+----------+\r\n|&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;|&nbsp;国安&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;|&nbsp;申花&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;|&nbsp;公益联队&nbsp;|\r\n+------+----------+</pre><p>要求取得数据如下：</p><pre>+----------+------+----------+------------+\r\n|&nbsp;申花&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;1:2&nbsp;&nbsp;|&nbsp;公益联队&nbsp;|&nbsp;2006-06-21&nbsp;|\r\n|&nbsp;公益联队&nbsp;|&nbsp;2:5&nbsp;&nbsp;|&nbsp;国安&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;2006-06-25&nbsp;|&nbsp;\r\n+----------+------+----------+------------+</pre><p>参考答案：</p><pre>mysql&gt;&nbsp;select&nbsp;t1.tname,mres,t2.tname,matime&nbsp;&nbsp;from&nbsp;m&nbsp;left&nbsp;join&nbsp;t&nbsp;as\r\n&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;t1&nbsp;on&nbsp;m.hid=t1.tid&nbsp;left&nbsp;join&nbsp;t&nbsp;as&nbsp;t2&nbsp;on&nbsp;m.gid=t2.tid\r\n&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;where&nbsp;matime&nbsp;between&nbsp;&#39;2006-06-01&#39;&nbsp;and&nbsp;&#39;2006-07-01&#39;;\r\n+----------+------+----------+------------+\r\n|&nbsp;tname&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;mres&nbsp;|&nbsp;tname&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;matime&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n+----------+------+----------+------------+\r\n|&nbsp;申花&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;1:2&nbsp;&nbsp;|&nbsp;公益联队&nbsp;|&nbsp;2006-06-21&nbsp;|\r\n|&nbsp;公益联队&nbsp;|&nbsp;2:5&nbsp;&nbsp;|&nbsp;国安&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;2006-06-25&nbsp;|\r\n+----------+------+----------+------------+</pre><p>问：为什么有m left join t<strong> <span style="color: rgb(192, 80, 77);">as t1</span></strong>呢？</p><p>答：两次左连都是t表，若不给t加个别名，会报如下错：<br/>\r\n &nbsp; <span style="color: rgb(247, 150, 70);">&nbsp;<span style="color: rgb(255, 0, 0);">ERROR 1066 (42000): Not unique table/alias: &#39;t&#39;</span></span></p>', 19, 1),
(95, 'mysql笔记三之union', '2013-08-21 13:05:28', '<p>	</p><p>union的作用是什么呢？<br/></p><p>合并两多或多条语句的结果。</p><p>语法：sql1 union sql2;</p><p>有下面两张表：</p><pre>mysql&gt;&nbsp;select&nbsp;*&nbsp;from&nbsp;test1&nbsp;limit&nbsp;5;\r\n+----------+--------+\r\n|&nbsp;add_time&nbsp;|&nbsp;number&nbsp;|\r\n+----------+--------+\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;123&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;154&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;123&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;13&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;|\r\n+----------+--------+</pre><pre>mysql&gt;&nbsp;select&nbsp;*&nbsp;from&nbsp;test2;\r\n+----+------+\r\n|&nbsp;id&nbsp;|&nbsp;name&nbsp;|\r\n+----+------+\r\n|&nbsp;&nbsp;1&nbsp;|&nbsp;张三&nbsp;|\r\n|&nbsp;&nbsp;2&nbsp;|&nbsp;李四&nbsp;|\r\n|&nbsp;&nbsp;3&nbsp;|&nbsp;王五&nbsp;|\r\n|&nbsp;&nbsp;4&nbsp;|&nbsp;赵六&nbsp;|\r\n|&nbsp;&nbsp;5&nbsp;|&nbsp;张三&nbsp;|\r\n|&nbsp;&nbsp;6&nbsp;|&nbsp;王五&nbsp;|\r\n+----+------+</pre><p>我要是需要同时向这两张表里取数据，以前通过多次查询来到，好笨拙！\r\n现在用union将两个结果连起来看看什么样子？</p><pre>+----------+--------+\r\n|&nbsp;add_time&nbsp;|&nbsp;number&nbsp;|\r\n+----------+--------+\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;123&nbsp;|&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;154&nbsp;|&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;13&nbsp;|&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15&nbsp;|&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;|&nbsp;张三&nbsp;&nbsp;&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;|&nbsp;李四&nbsp;&nbsp;&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;|&nbsp;王五&nbsp;&nbsp;&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;|&nbsp;赵六&nbsp;&nbsp;&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;|&nbsp;张三&nbsp;&nbsp;&nbsp;|\r\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6&nbsp;|&nbsp;王五&nbsp;&nbsp;&nbsp;|\r\n+----------+--------+</pre><p>发现没？经过union得到的结果，直接将两条sql执行的结果连起来了，而且列名是第一条sql语句取的列名</p><p>满足什么条件，union就可用呢？&nbsp;</p><p>只要合并的两个结果集列数一样就行。假如一个是取三列，一个是取四列，就用不了union。</p><p><br/></p><p>默认情况下，union合并的结果集，会去重，不想去重呢？union all</p><p>有两张表A,B：</p><pre>mysql&gt;&nbsp;select&nbsp;*&nbsp;from&nbsp;a;\r\n+------+------+\r\n|&nbsp;id&nbsp;&nbsp;&nbsp;|&nbsp;num&nbsp;&nbsp;|\r\n+------+------+\r\n|&nbsp;a&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;|\r\n|&nbsp;b&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;10&nbsp;|\r\n|&nbsp;c&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;15&nbsp;|\r\n|&nbsp;d&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;10&nbsp;|\r\n+------+------+</pre><pre>mysql&gt;&nbsp;select&nbsp;*&nbsp;from&nbsp;b;\r\n+------+------+\r\n|&nbsp;id&nbsp;&nbsp;&nbsp;|&nbsp;num&nbsp;&nbsp;|\r\n+------+------+\r\n|&nbsp;b&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;|\r\n|&nbsp;c&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;15&nbsp;|\r\n|&nbsp;d&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;20&nbsp;|\r\n|&nbsp;e&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;99&nbsp;|\r\n+------+------+</pre><p>想得到如下结果：</p><pre>+------+----------+\r\n|&nbsp;id&nbsp;&nbsp;&nbsp;|&nbsp;sum(num)&nbsp;|\r\n+------+----------+\r\n|&nbsp;a&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;|\r\n|&nbsp;b&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15&nbsp;|\r\n|&nbsp;c&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;30&nbsp;|\r\n|&nbsp;d&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;30&nbsp;|\r\n|&nbsp;e&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;99&nbsp;|\r\n+------+----------+</pre><p>参考答案：</p><pre>mysql&gt;&nbsp;select&nbsp;id,sum(num)&nbsp;from\r\n&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;(select&nbsp;*&nbsp;from&nbsp;a&nbsp;union&nbsp;all&nbsp;select&nbsp;*&nbsp;from&nbsp;b)\r\n&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;as&nbsp;tmp&nbsp;group&nbsp;by&nbsp;id;\r\n+------+----------+\r\n|&nbsp;id&nbsp;&nbsp;&nbsp;|&nbsp;sum(num)&nbsp;|\r\n+------+----------+\r\n|&nbsp;a&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;|\r\n|&nbsp;b&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15&nbsp;|\r\n|&nbsp;c&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;30&nbsp;|\r\n|&nbsp;d&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;30&nbsp;|\r\n|&nbsp;e&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;99&nbsp;|\r\n+------+----------+</pre>', 2, 1),
(96, 'mysql笔记四之视图', '2013-08-23 03:43:37', '<p>创建视图语法：</p><p>create view 视图名称 as sql语句; &nbsp;#执行完后，就会创建一张名为‘视图名称的表’，其内容就是sql语句产生的结果。</p>', 3, 1),
(97, 'php面向对象零星知识点', '2013-08-26 03:33:57', '<p class="cont_info_artical">函数不可以有重名的（js可以）。<br/></p><p>类里面的属性赋值不可以是“1+1，time()”等间接值，（与java不同）。类里面的方法名可以与外部函数名同名。如：</p><pre class="brush:java;toolbar:false">function&nbsp;time(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;t&#39;;\r\n}//这个会报错。\r\nclass&nbsp;clock{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;$a&nbsp;=&nbsp;2;&nbsp;//可以直接赋值为2，但不能赋值为1+1\r\n&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;time(){&nbsp;&nbsp;//可以与系统函数time()同名\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;hi&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p>构造函数：__construct(前面是2个下划线），实例化类（对象产生）时自动执行。</p><p>析构函数：__destruct（前面也是2下划线），对象销毁时自动执行。<br/>对象怎么销毁呢？<br/>1、显示销毁，unset(),赋值为NULl,false等<br/>2、php执行到最后一行代码时，之前所申请的内存被收回，当然对象也就被销毁了。</p><p><br/></p><p>子类继承父类构造函数时注意点：<br/>&nbsp;&nbsp;&nbsp;&nbsp;子类继承(extends)父类时，会将父类构造函数也继承过来，若子类也有自己的构造函数，会将父类构造函数给重写，如果父类构造函数需要完成一些必要的初始化工作，父类构造函数被重写后，就会出问题。为避免此问题，可在子类构造函数里手动再调用一下父类构造函数：parent::__construct();后面再写子类自己的构造函数。</p>', 7, 1),
(99, 'php魔术方法', '2013-08-30 04:01:58', '<p>	</p><p>__construct()：每次创建对象时自动调用此方法。<br/></p><p>__destruct() ：某个对象的所有引用都被删除或者当对象被显式销毁时执行此方法。</p><p>__get(<span class="methodparam"><span class="type">string</span> <code class="parameter">$name) ：读取未定义的变量的值时或无权访问的变量的值时执行该方法。</code></span></p><p>__set(string $name, mixed $value) ：给一个不存在的变量赋值或给无权访问的变量赋值时执行。</p><p>__isset()：用isset()来判断对象不可见的属性（private/protected/不存在的属性）时，执行该访法。</p><p>__unset()：用unset()来销毁对象的不可见属性（private/protected/不存在的属性）时，引发此方法。</p><p>__call($method,$argu)：调用一个不存在或无权访问的方法（$method）时，且传了参数（$argu）触发该方法。</p><pre class="brush:php;toolbar:false">function&nbsp;__call($_methodName,$arguList){\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;$_methodName&nbsp;&#39;&nbsp;.&nbsp;&#39;()方法不存在。&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;print_r($arguList);\r\n}\r\n\r\n$mysql&nbsp;=&nbsp;new&nbsp;mysql();&nbsp;\r\n$mysql-&gt;conn();&nbsp;//假如实例化mysql成功后，再调用它一个不存在的conn方法，\r\n//如果没有__call方法，页面会报一个致使错误，有这call方法后，就会屏蔽这个错误，会转而执行call方法</pre><p>__callStatic()：同上，区别在于调用不存在或无权访问的静态方法。</p><p style="white-space: normal;">__autoload($_className):自动加载类</p><pre class="brush:php;toolbar:false">function&nbsp;__autoload($_className){\r\n&nbsp;&nbsp;&nbsp;&nbsp;require(strtolower($_className)&nbsp;.&nbsp;&#39;.class.php&#39;);\r\n}\r\n\r\n$mysql&nbsp;=&nbsp;new&nbsp;mysql();&nbsp;//实例化mysql时，会自动去require&nbsp;mysql.class.php</pre><p>__toString():用于一个类被当成字符串时应怎样回应。例如<em>echo $obj;</em> 应该显示些什么。此方法必须返回一个字符串，否则将发出一条 <strong><code>E_RECOVERABLE_ERROR</code></strong> 级别的致命错误。\r\n &nbsp;</p><p><code><span style="color: #000000"><span style="color: #0000BB">&lt;?php<br/></span><span style="color: #FF8000">//&nbsp;Declare&nbsp;a&nbsp;simple&nbsp;class<br/></span><span style="color: #007700">class&nbsp;</span><span style="color: #0000BB">TestClass<br/></span><span style="color: #007700">{<br/>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;</span><span style="color: #0000BB">$foo</span><span style="color: #007700">;<br/>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #0000BB">__construct</span><span style="color: #007700">(</span><span style="color: #0000BB">$foo</span><span style="color: #007700">)&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">foo&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #0000BB">$foo</span><span style="color: #007700">;<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;</span><span style="color: #0000BB">__toString</span><span style="color: #007700">()&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">foo</span><span style="color: #007700">;<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/>}<br/></span><span style="color: #0000BB">$class&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #0000BB">TestClass</span><span style="color: #007700">(</span><span style="color: #DD0000">&#39;Hello&#39;</span><span style="color: #007700">);<br/>echo&nbsp;</span><span style="color: #0000BB">$class</span><span style="color: #007700">;<br/></span><span style="color: #0000BB">?&gt;</span></span></code></p><p>以上例程会输出：</p><pre>Hello</pre><p>__clone();克隆</p>', 7, 1),
(100, '各省简称', '2013-09-06 12:15:31', '<p>	</p><p><span style="color: rgb(51, 51, 51); font-family: Simsun; font-size: 13px; line-height: 21px;">关于各省简称顺口溜：</span><br/></p><p><span class="STYLE3" style="color: rgb(0, 0, 204); font-family: Simsun; font-size: 13px; line-height: 21px;">鲁是山东晋山西，河南河北称豫冀。安徽皖称云南滇，湖南湖北称湘鄂。</span><br/><span class="STYLE3" style="color: rgb(0, 0, 204); font-family: Simsun; font-size: 13px; line-height: 21px;">闽为福建赣江西，蜀为四川黔贵州。粤桂广东与广西，青海称青甘肃陇。</span><br/><span class="STYLE3" style="color: rgb(0, 0, 204); font-family: Simsun; font-size: 13px; line-height: 21px;">西北陕西简称陕，东北三省黑吉辽。苏浙海南在沿海，宝岛台湾简称台。<br/>北京天津为京津，渝是重庆沪上海。新西内宁自治区，地理位置听我述。</span><br/><span class="STYLE3" style="color: rgb(0, 0, 204); font-family: Simsun; font-size: 13px; line-height: 21px;">雪域明珠为西藏，天山脚下是新疆。北部沙漠内蒙古，河西走廊有宁夏。</span><br/><span class="STYLE3" style="color: rgb(0, 0, 204); font-family: Simsun; font-size: 13px; line-height: 21px;">一国两制是创举，香港澳门设特区。经常查看政区图，省份简称记得住。</span> &nbsp; &nbsp;<span class="STYLE3" style="color: rgb(0, 0, 204); font-family: Simsun; font-size: 13px; line-height: 21px;"></span></p><pre><strong><span style="font-size: 18px;">省、市、自治区	&nbsp;&nbsp;&nbsp;&nbsp;简称或别称	&nbsp;&nbsp;&nbsp;&nbsp;省会(或首府)名<br/>安徽省	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;皖	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;合肥<br/>北京市	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;京	&nbsp;<br/>重庆市	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;渝	&nbsp;<br/>福建省	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;闽	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;福州<br/>甘肃省	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;甘	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;兰州<br/>广东省	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;粤	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;广州<br/>广西自治区	&nbsp;&nbsp;&nbsp;&nbsp;桂	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;南宁<br/>贵州省	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;黔	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;贵阳<br/>海南省	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;琼	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;海口<br/>河北省	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;冀	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;石家庄<br/>河南省	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;豫	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;郑州<br/>黑龙江省	&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;黑	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;哈尔滨<br/>湖北省	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;鄂	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;武汉<br/>湖南省	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;湘	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;长沙<br/>吉林省	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;吉	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;长春<br/>江苏省	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;苏	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;南京<br/>江西省	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;赣	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;南昌<br/>辽宁省	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;辽	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;沈阳<br/>内蒙古自治区	&nbsp;&nbsp;&nbsp;&nbsp;蒙	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;呼和浩特<br/>宁夏自治区	&nbsp;&nbsp;&nbsp;&nbsp;宁	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;银川<br/>青海省	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;青	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;西宁<br/>山东省	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;鲁	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;济南<br/>山西省	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;晋	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;太原<br/>陕西省	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;陕	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;西安<br/>上海市	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;沪	　<br/>四川省	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;川	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;成都<br/>天津市	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;津	　<br/>西藏自治区	&nbsp;&nbsp;&nbsp;&nbsp;藏	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;拉萨<br/>新疆自治区	&nbsp;&nbsp;&nbsp;&nbsp;新	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;乌鲁木齐<br/>云南省	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;滇	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;昆明<br/>浙江省	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;浙	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;杭州<br/>香港(特别行政区)&nbsp;&nbsp;&nbsp;&nbsp; 港	　<br/>澳门(特别行政区)&nbsp;&nbsp;&nbsp; &nbsp;澳	　<br/>台湾省	 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;台湾</span></strong><br/></pre>', 7, 1),
(101, '摘来几句话', '2013-09-07 03:31:55', '<p>	</p><p>&nbsp;&nbsp;&nbsp;&nbsp;自古以来，有这样一群僧人，他们遵守戒律，不吃肉，不喝酒，整日诵经念佛，而与其他和尚不同的是，他们往往几十年坐碰上不动，甚至有的鞭打折磨自己的身体，痛苦不堪却依然故我。<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;有这样一群习武者，经过多年磨练，武艺已十分高强，但他们却更为努力地练习，坚持不辍。<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;有这样一群读书人，他们有的已经学富五车，甚至功成名就，却依然日夜苦读，不论寒暑。<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;他们并不是精神错乱，平白无故给自己找麻烦的白痴，如此苦心苦行，只是为了寻找一样东西。<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;传说这个世界上存在着一种神奇的东西，它无影无形，却又无处不在，轻若无物，却又重如泰山，如果能够获知这样东西，就能够了解这个世界上的所有奥秘，看透所有伪装，通晓所有知识，天下万物皆可归于掌握！<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;这并不是传说，而是客观存在的事实。<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;《明朝的那些事儿》 --- 当年明月</p>', 15, 1),
(102, 'php-单双引号有什么区别？', '2013-09-15 05:26:37', '<p>	</p><p>转义方面：<br/></p><p>单引号不做复杂的转义，只转义\\&#39;，\\\\，其它的一律原样输出。<br/>双引号就转义的比较多，\\&quot;，\\\\，\\r，\\n，\\t，\\$等。<br/></p><p>对变量解释区别：<br/>单引号不对字符串中的$作变量名解析，而双引号会。</p><p>综上，显然单引号解析更快。</p>', 3, 1),
(104, '定义字符串的4种方式', '2013-09-15 05:59:42', '<p>	</p><p>1、单引号：<br/></p><p>&nbsp;$str = &#39;hello world&#39;;</p><p>2、双引号：<br/>\r\n &nbsp;$str = &quot;hello world&quot;;</p><p>3、heredoc：</p><pre>$str&nbsp;=&nbsp;&lt;&lt;&lt;END&nbsp;&nbsp;&nbsp;&nbsp;----&gt;&nbsp;这个END只是一个标识符，可用其它名称取代，命\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;名规则跟变量一样。\r\nhello&nbsp;world&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;----&gt;&nbsp;下面这两行就是该变量的内容。\r\nit&#39;s&nbsp;ok!\r\nEND;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;----&gt;&nbsp;这个是结束标识符，它前面不能出现任何其它字\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;符。</pre><p>4、nowdoc</p><pre>$str&nbsp;=&nbsp;&lt;&lt;&lt;&#39;END&#39;&nbsp;----&gt;&nbsp;语法与heredoc不同的就是将标识符用单引号包含\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;起来。\r\nhello&nbsp;world\r\nit&#39;s&nbsp;ok!\r\nEND;</pre><p>heredoc和nowdoc的区别就相当于双引号与单引号的区别。用heredoc来定义的字符串，里面若含有变量$，及转义字符\\&#39;,\\t等，会对它们进行解释，nowdoc出现这些，只对\\&#39;,\\\\解释，其它原样输出。</p>', 3, 1);
INSERT INTO `news` (`id`, `title`, `dates`, `content`, `hits`, `is_delete`) VALUES
(105, '名字', '2013-09-15 09:39:03', '<p>	</p><p><span style="background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: Simsun; font-size: 14px; line-height: 28px;">男：怀瑾。《九章•怀沙》：“怀瑾握瑜兮”。如国学大师南怀瑾。</span><br/></p><p><span style="color: rgb(51, 51, 51); font-family: Simsun; font-size: 14px; line-height: 28px;  background-color: rgb(255, 255, 255);">女：楚楚。《曹风·蜉蝣》：“蜉蝣之羽，衣裳楚楚”。楚楚：鲜明貌。蜉蝣是一种短命的小虫，故而此篇的基调是消沉的。</span></p>', 6, 1),
(106, 'php之文件上传', '2013-10-05 09:45:44', '<p style="text-align:center;">小记php文件上传</p><h3><span style="font-family:幼圆">php文件上传过程</span></h3><p style="text-indent:2em;">写好一个上传表单后，提交后，它会将文件自动发往服务器，形成一个临时文件，你需要做的，就是将临时文件移到你规定的地方。与此同时，还形成了一个超全局数组$_FILES，里面记录着该文件的相关信息。</p><h3><span style="font-family:幼圆">表单写法</span></h3><p style="text-indent:2em;">1、method必须是post</p><p style="text-indent:2em;">2、需在表单里注明enctype=&#39;multipart/form-data&#39; ，告诉服务器这不是一个普通文件。</p><h3><span style="font-family:幼圆">示例</span></h3><pre class="brush:html;toolbar:false">&lt;form&nbsp;action=&#39;&#39;&nbsp;method=&#39;post&#39;&nbsp;enctype=&#39;multipart/form-data&#39;&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input&nbsp;type=&#39;text&#39;&nbsp;name=&#39;username&#39;&nbsp;/&gt;&lt;br&nbsp;/&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input&nbsp;type=&#39;file&#39;&nbsp;name=&#39;pic&#39;&nbsp;/&gt;&lt;br&nbsp;/&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input&nbsp;type=&#39;submit&#39;&nbsp;value=&#39;上传&#39;&nbsp;/&gt;\r\n&lt;/form&gt;\r\n&lt;?php\r\n&nbsp;&nbsp;&nbsp;&nbsp;print_r($_FILES);\r\n?&gt;</pre><p>选择一张图片后，点击‘上传’，打印$_FILES，如果能看到类似如下数据，那就成功一半了，接下来只需将文件移动到真实目录即可。</p><pre>Array\r\n(\r\n&nbsp;&nbsp;&nbsp;&nbsp;[pic]&nbsp;=&gt;&nbsp;Array&nbsp;----&gt;&nbsp;pic是表单域的名称\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[name]&nbsp;=&gt;&nbsp;Desert.jpg&nbsp;---&gt;文件名称\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[type]&nbsp;=&gt;&nbsp;image/jpeg&nbsp;---&gt;文件类型\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[tmp_name]&nbsp;=&gt;&nbsp;D:\\wamp\\tmp\\php5354.tmp&nbsp;---&gt;文件临时存放地\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[error]&nbsp;=&gt;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;---&gt;错误代码，0表示‘无错误’\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[size]&nbsp;=&gt;&nbsp;845941&nbsp;---&gt;文件大小（单位：字节）\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\r\n\r\n)</pre><p>到这一步，就是移动文件了，用move_uploaded_file();这个函数来操作。</p>', 26, 1),
(107, 'mysql主从设置', '2014-05-08 09:42:02', '<p>实现步骤：</p><p>1、首先确保主服务器打开二进制日志功能。（主服务器一旦有数据变化，就会产生二进制日志）</p><p>2、从服务器也需开启二进制日志和relay日志功能。（可以从主服务器读取binlog并产生relaylog，开启binlog是方便数据丢失后尝试从binlog中恢复。）</p><p>3、在主服务器建立一个从服务器的账号，并授予读binlog的权限。</p><p>4、指定从服务对应的主服务器，开启从服务器。</p><p><br/></p><p>具体实施，先设置主、从服务器的my.cnf。</p><p>一、mysql主从备份设置：</p><p>1、192.168.1.111 做主服务器，【系统环境：mysql &nbsp;Ver 14.14 Distrib 5.5.24, for Win32 (x86)】my.cnf设置如下：</p><p>[mysqld]</p><p>server-id=111&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#给服务起一个唯一的ID，为了方便，可以设置为IP的最3位</p><p>log-bin=mysql-bin&nbsp;&nbsp;&nbsp;&nbsp;#开启二进制日志，并指定名称为mysql-bin开头</p><p>#binlog-do-db=boke&nbsp;&nbsp;&nbsp;#指定数据库</p><p>binlog-format=mixed &nbsp;#可选mixed[系统根据语句自动选择],row[根据磁盘变化],statement[根据sql语句]<br/></p><p>2、192.168.1.121 做从服务器【系统环境：mysql &nbsp;Ver 14.14 Distrib 5.1.61, for redhat-linux-gnu (i386) using readline 5.1】，my.cnf设置如下：</p><p>[mysqld]<br/></p><p>server-id=121</p><p>log-bin=mysql-bin</p><p>relay-log=mysql-relay</p><p>binlog-format=mixed</p><p>二、主从服务器建立连接</p><p>1、登录主服务器，查看主服务器状态</p><pre>mysql&gt;&nbsp;show&nbsp;master&nbsp;status;\r\n+------------------+----------+--------------+------------------+\r\n|&nbsp;File&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;Position&nbsp;|&nbsp;Binlog_Do_DB&nbsp;|&nbsp;Binlog_Ignore_DB&nbsp;|\r\n+------------------+----------+--------------+------------------+\r\n|&nbsp;mysql-bin.000053&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4550&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n+------------------+----------+--------------+------------------+\r\n1&nbsp;row&nbsp;in&nbsp;set&nbsp;(0.00&nbsp;sec)</pre><p>能看到上面的信息，说明充当主服务器的这台机器没问题，产生了binlog日志文件，且二进制日志文件已到000053，二进制日志文件指针已写到4550偏移处.</p><p>OK，接下来在主服务器上给从服务器一个账号，并授予它查看binlog的权限：</p><p>grant replication client,replication slave on *.* to repl@&#39;192.168.1.%&#39; identified by &#39;repl&#39;;</p><p>上句话的意思是，生成一个账号repl，密码为repl，允许它从局域网192.168.1.xxx来读取binlog。</p><p>再刷新一下权限：flush privileges;</p><p>2、在从服务器上通过语句指定要复制的主服务器（可以一主多从，不可一从多主）。</p><p>下面这条命令，如果之前已配置过主从，可能会报错，可以先执行stop slave;然后reset slave;再执行下面的。</p><pre>mysql&gt;&nbsp;change&nbsp;master&nbsp;to\r\n&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;master_host=&#39;192.168.1.111&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;master_user=&#39;repl&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;master_password=&#39;repl&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;master_log_file=&#39;mysql-bin.000053&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;master_log_pos=4550;\r\nQuery&nbsp;OK,&nbsp;0&nbsp;rows&nbsp;affected&nbsp;（0.40&nbsp;sec）</pre><p>show slave status \\G 查看从服务器状态</p><p><br/></p><pre>mysql&gt;&nbsp;show&nbsp;slave&nbsp;status\\G\r\n***************************&nbsp;1.&nbsp;row&nbsp;***************************\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Slave_IO_State:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Master_Host:&nbsp;192.168.1.111\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Master_User:&nbsp;repl\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Master_Port:&nbsp;3306\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Connect_Retry:&nbsp;60\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Master_Log_File:&nbsp;mysql-bin.000053\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Read_Master_Log_Pos:&nbsp;4550\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Relay_Log_File:&nbsp;mysql-relay.000001\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Relay_Log_Pos:&nbsp;4\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Relay_Master_Log_File:&nbsp;mysql-bin.000053\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Replicate_Do_DB:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Replicate_Ignore_DB:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Replicate_Do_Table:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Replicate_Ignore_Table:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Replicate_Wild_Do_Table:\r\n&nbsp;&nbsp;Replicate_Wild_Ignore_Table:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Last_Errno:&nbsp;0\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Last_Error:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Skip_Counter:&nbsp;0\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exec_Master_Log_Pos:&nbsp;4550\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Relay_Log_Space:&nbsp;106\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Until_Condition:&nbsp;None\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Until_Log_File:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Until_Log_Pos:&nbsp;0\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Master_SSL_Allowed:&nbsp;No\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Master_SSL_CA_File:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Master_SSL_CA_Path:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Master_SSL_Cert:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Master_SSL_Cipher:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Master_SSL_Key:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Seconds_Behind_Master:&nbsp;NULL\r\nMaster_SSL_Verify_Server_Cert:&nbsp;No\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Last_IO_Errno:&nbsp;0\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Last_IO_Error:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Last_SQL_Errno:&nbsp;0\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Last_SQL_Error:\r\n1&nbsp;row&nbsp;in&nbsp;set&nbsp;(0.00&nbsp;sec)</pre><p>启动从服务器start slave，再查看show slave status\\G，其中</p><p><span style="color: rgb(255, 0, 0);">&nbsp;Slave_IO_State: Waiting for master to send event</span></p><p><span style="color: rgb(255, 0, 0);">&nbsp;Slave_IO_Running: Yes</span></p><p><span style="color: rgb(255, 0, 0);">&nbsp;Slave_SQL_Running: Yes</span></p><p>说明主从已正常通信了。在主服务器上新建一个数据库，在从服务器show databases，发现主服务器新建的数据库，从服务器上也存在了。<br/></p><p>同步遇到了这个问题：</p><p>&nbsp;Last_SQL_Error: Error &#39;Can&#39;t drop database &#39;test8&#39;; database doesn&#39;t exist&#39; on query. Default database: &#39;&#39;. Query: &#39;drop database test8&#39;</p><p>1 row in set (0.00 sec)</p><p>问题很明了，就是主服务器上删除test8数据库，而从服务器上并没有test8，让从服务器跳过这条SQL，依次执行stop slave;</p><p>&nbsp;set GLOBAL SQL_SLAVE_SKIP_COUNTER=1;start slave;再show slave status就正常了。</p><p><br/></p>', 9, 1),
(108, 'mysql导入导出特定数据库', '2014-05-08 11:29:02', '导入有两种，1：用mysql -uroot -p 登陆后，选择数据库use boke,然后执行source test.sql\n，会将数据导入到boke数据库中。<br />\n2:直接mysql -uroot -p boke < boke.sql。\n<br />\n导出数据库：\nmysqldump -hlocalhost -uroot -p boke > boke.sql<br />\n上句的意思是，将数据库boke导出为boke.sql', 21, 1),
(109, 'jQuery的一些事件对象', '2014-05-26 10:30:04', '<p>event.pageX &nbsp;获取鼠标相对于文档的X轴坐标<br/></p><p>event.pageY &nbsp;获取鼠标相对于文档的Y轴坐标</p><p>event.stopPropagation()阻止冒泡</p><p>event.preventDefault()阻止浏览器默认行为</p><p>event.which &nbsp;监听键盘输入和鼠标操作</p><p>阻止默认行为，如下面这个form所示，点提交后就会跳转到123.html页面上去：</p><pre class="brush:html;toolbar:false">&lt;form&nbsp;action=&#39;123.html&#39;&nbsp;id=&#39;form1&#39;&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input&nbsp;type=&#39;submit&#39;&nbsp;value=&#39;提交&#39;&nbsp;/&gt;\r\n&lt;/form&gt;</pre><p>不让它跳转，用jQuery这么操作：</p><pre class="brush:js;toolbar:false">$(&#39;form1).submit(function(e){\r\n&nbsp;&nbsp;&nbsp;&nbsp;...\r\n&nbsp;&nbsp;&nbsp;&nbsp;e.preventDefault();&nbsp;&nbsp;//&nbsp;直接return&nbsp;false也可以阻止\r\n});</pre>', 20, 1),
(110, 'jQuery绑定及移除事件', '2014-05-26 10:51:15', '<p>	</p><p>bind() 绑定事件。<br/></p><pre class="brush:js;toolbar:false">$(document).bind(&#39;click&#39;,function(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;...\r\n},true/false)</pre><p>为什么要绑定click呢？用bind时，可以传递第三个参数true/false，直接阻止冒泡和默认行为，很强大。</p><p>unbind() 移除事件。</p><p>on() 绑定事件。</p><p>off() 移除事件。</p><p>one() 执行一次事件，然后销毁该事件。</p><p>事件委托delegate()和移除事件委托undelegate()推荐用on()和off()代替。</p><p>hover(fn1,fn2)是模拟鼠标进入（mouseenter）和鼠标（mouseleave）离开的事件。它的基本语法如下：</p><pre class="brush:js;toolbar:false">$(&#39;p&#39;).hover(function(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;$(this).css(&#39;background&#39;,&#39;red&#39;);\r\n},function(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;$(this).css(&#39;background&#39;,&#39;none&#39;);\r\n});</pre><p>trigger()模拟事件的发生。</p><pre class="brush:js;toolbar:false">$(&#39;a&#39;).click(function(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;alert(&#39;我被点了一下&#39;);\r\n});</pre><p>上面这条语句在鼠标点击一下a标签就会执行弹窗。我想一打开页面，浏览器帮我去执行 点击 操作呢？<br/></p><pre class="brush:js;toolbar:false">$(&#39;a&#39;).trigger(&#39;click&#39;);</pre><p>triggerHandler()模拟事件的发生并阻止冒泡。</p>', 80, 1),
(111, 'mysql之权限管理', '2014-07-05 16:11:49', '<p class="cont_info_artical">看到报Access denied for user ... ，往往都是权限在作怪。可能是登录时密码写错了，可能是不允许远程登陆，也有可能是你没权限操作刚才的步骤，具体如何，请看下面。</p><h3><span id="_baidu_bookmark_start_0" style="display: none; line-height: 0px;">‍</span><span id="_baidu_bookmark_start_2" style="display: none; line-height: 0px;">‍</span><span id="_baidu_bookmark_start_4" style="display: none; line-height: 0px;">‍</span><span id="_baidu_bookmark_start_6" style="display: none; line-height: 0px;">‍</span>权限更改何时生效</h3><p style="margin-top: 0px; margin-bottom: 10px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; line-height: 25.200000762939453px; font-family: Helvetica, Arial, sans-serif; max-width: 720px; white-space: normal; background: rgb(255, 255, 255);">当<span style="margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;">mysqld</span>启动时，所有授权表的内容被读进内存并且从此时生效。</p><p style=" font-size: 14px; vertical-align: baseline; line-height: 25.200000762939453px; font-family: Helvetica, Arial, sans-serif; max-width: 720px; white-space: normal; background: rgb(255, 255, 255);">当服务器注意到授权表被改变了时，现存的客户端连接有如下影响：</p><ul type="disc" style="list-style-type: initial;" class=" list-paddingleft-2"><li><p>表和列权限在客户端的下一次请求时生效。</p></li><li><p>数据库权限改变在下一个<span style="margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;">USE&nbsp;<em style="margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;">db_name</em></span>命令生效。</p></li></ul><p style="margin-top: 0px; margin-bottom: 10px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; line-height: 25.200000762939453px; font-family: Helvetica, Arial, sans-serif; max-width: 720px; white-space: normal; background: rgb(255, 255, 255);"><span style="margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;">·<span style="margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>全局权限的改变和密码改变在下一次客户端连接时生效。</p><p style="margin-top: 0px; margin-bottom: 10px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; line-height: 25.200000762939453px; font-family: Helvetica, Arial, sans-serif; max-width: 720px; white-space: normal; background: rgb(255, 255, 255);">如果用<span style="margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;">GRANT</span>、<span style="margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;">REVOKE</span>或<span style="margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;">SET PASSWORD</span>对授权表进行修改，服务器会注意到并立即重新将授权表载入内存。</p><p style="margin-top: 0px; margin-bottom: 10px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; line-height: 25.200000762939453px; font-family: Helvetica, Arial, sans-serif; max-width: 720px; white-space: normal; background: rgb(255, 255, 255);">如果你手动地修改授权表<span style="margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;">(</span>使用<span style="margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;">INSERT</span>、<span style="margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;">UPDATE</span>或<span style="margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;">DELETE</span>等等<span style="margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;">)</span>，你应该执行<strong style="margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;">mysqladmin flush-privileges</strong>或<strong style="margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;">mysqladmin reload</strong>告诉服务器再装载授权表，否则你的更改将<em style="margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; font-weight: bold; background: transparent;">不会生效</em>，除非你重启服务器。</p><p style="margin-top: 0px; margin-bottom: 10px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; line-height: 25.200000762939453px; font-family: Helvetica, Arial, sans-serif; max-width: 720px; white-space: normal; background: rgb(255, 255, 255);">如果你直接更改了授权表但忘记重载，重启服务器后你的更改方生效。这样可能让你迷惑为什么你的更改没有什么变化！</p><p>以上内容摘自：<a href="http://dev.mysql.com/doc/refman/5.1/zh/database-administration.html#privilege-changes" target="_blank" title="">http://dev.mysql.com/doc/refman/5.1/zh/database-administration.html#privilege-changes</a></p><p>————————————————————————————————</p><p><strong>新增用户3种方式：</strong><br/>&nbsp; &nbsp; &nbsp; &nbsp;1、<span style="background-color: rgb(216, 216, 216);">CREATE USER username IDENTIFIED BY &#39;paddword&#39;;</span><em>#只新增用户，有登录数据库的权限，但没查看数据及任何操作数据库的权限</em></p><p>&nbsp; &nbsp; &nbsp; &nbsp;2、<span style="background-color: rgb(216, 216, 216);">GRANT &nbsp;[权限1，权限2，权限3 ... ] ON &nbsp;*.* (每个库的每张表) TO &#39;user&#39;@&#39;host&#39; IDENTIFIED BY &#39;password&#39;;</span><em>#新增用户并授权</em></p><p>&nbsp; &nbsp; &nbsp; &nbsp;3、<span style="background-color: rgb(216, 216, 216);">INSERT INTO 一行到mysql.user表中</span> <em>#一般不建议这么做，通过这种方式创建的用户，不能用下面说的set password对他进行更改密码，show grants对他进行查看授权情况，rename user更改用户名，drop user删除此账号。</em></p><p><strong>更改用户名：</strong><em>(mysql5以后的版本支持，之前版本改名直接用update更改mysql.user表）</em></p><p>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; <span style="background-color: rgb(216, 216, 216);">RENAME USER oldname TO newname;</span><br/></p><p>设置密码：</p><p>&nbsp; &nbsp; &nbsp; &nbsp;<span style="background-color: rgb(216, 216, 216);">SET PASSWORD FOR username = PASSWORD(&#39;your passowrd&#39;);</span><em>#设置指定用户密码</em></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<span style="background-color: rgb(216, 216, 216);">SET PASSWORD = PASSWORD(&#39;your password&#39;)</span>; <em>#设置当前用户密码</em><br/></p><p><strong>删除用户账号：</strong><em>(mysql 5以后drop user会删除用户账号和所有相关权限，之前版本则只删除账号，需先用revoke删除权限，再drop user删除账号)</em></p><p>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; <span style="background-color: rgb(216, 216, 216);">DROP USER username;</span><br/></p><p><strong>设置权限：</strong></p><p>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; <span style="background-color: rgb(216, 216, 216);">GRANT [权限列表] ON [库名].[表名] TO &#39;user&#39;@&#39;host&#39;;</span> <em>#若指定[库名]，则只对该库有相应权限，若填*则表示对所有库有相应权限，[表名]同理,user指对哪个用户设置权限，host指接受它从哪来来访问，如只能在本地登录就是localhost,指定IP 192.168.1.11登录就是192.168.1.11，所有从192.168.1.XXX登录的都可以就是192.168.1.%</em><br/></p><p><strong>常用权限</strong>：<br/>&nbsp; &nbsp; &nbsp; &nbsp;ALL,CREATE,DROP,INSERT,UPDATE,SELECT</p><p><strong>查看用户权限：</strong></p><p>&nbsp; &nbsp; &nbsp; &nbsp;<span style="background-color: rgb(216, 216, 216);">SHOW GRANTS FOR username;</span></p><p><strong>收回权限：</strong><br/>&nbsp; &nbsp; &nbsp; &nbsp;<span style="background-color: rgb(216, 216, 216);">REVOKE [要收回的权限列表] ON *.* FROM &#39;user&#39;@&#39;host&#39;;</span></p><p>例：创建一个用户yang，密码是123456，拥有除GRANT OPTION之外的所有简单权限，可对所有数据库进行操作：<br/>&nbsp; &nbsp; &nbsp; &nbsp;<span style="background-color: rgb(216, 216, 216);">GRANT ALL ON *.* TO &#39;yang&#39;@&#39;localost&#39; IDENTIFIED BY &#39;123456&#39;;</span></p><p><strong>撤消用户yang的所有权限：</strong><br/>&nbsp; &nbsp; &nbsp; &nbsp;<span style="background-color: rgb(216, 216, 216);">REVOKE ALL ON *.* FROM yang@localhost;</span></p><p><span style="background-color: rgb(216, 216, 216);"><span id="_baidu_bookmark_start_0" style="display: none; line-height: 0px;">‍</span></span><span id="_baidu_bookmark_start_2" style="display: none; line-height: 0px;">‍</span>Mysql权限检查主要分两步，第一步，检查你是否有权连接（你是哪个用户，你从哪里来，你密码多少），第二步，连上mysql后检查你是否有权create,insert,drop,update,select等操作。</p><p>全局级权限、库级权限、表级别权限，分别记录在mysql的三张表里user,db,tables_priv,其中user表是在用户尝试登录时会先核对user表，看你是否有权连接及操作库和表的权限，若user表中规定用户’zhangsan&#39;有权连接上来，但无任何其它操作权限，会再核对db表，看你有没权操作指定的某个库，以及对该库的create,insert,drop,update等操作，若db表中没规定，最后检查tables_priv表看你是否有权对某张表进行操作。<span style="background-color: rgb(216, 216, 216);"><span id="_baidu_bookmark_end_1" style="display: none; line-height: 0px;">‍</span></span></p>', 38, 1),
(112, '【转】php内置取整函数', '2015-03-20 15:07:52', '<p><br/></p><p style="margin-top: 10px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); text-indent: 28px; font-family: 宋体; font-size: 14px; line-height: 28px; white-space: normal; background-color: rgb(248, 248, 248);">对于功能强大的<a href="http://developer.51cto.com/art/200810/94162.htm" style="color: rgb(0, 66, 118);">PHP语言</a>来说，能掌握到它的函数用法，一般都能灵活的编写各种需求的PHP程序。我们经常用到的PHP取整函数，主要是：ceil，floor，round，intval。</p><ul style="list-style-type: none;" class=" list-paddingleft-2"><li><p><a href="http://developer.51cto.com/art/200912/166141.htm" target="_blank" style="color: rgb(0, 66, 118); text-decoration: none;">PHP表单数组的具体使用方法介绍</a></p></li><li><p><a href="http://developer.51cto.com/art/200912/166148.htm" target="_blank" style="color: rgb(0, 66, 118); text-decoration: none;">探讨PHP表单重复提交的预防法则</a></p></li><li><p><a href="http://developer.51cto.com/art/200912/166152.htm" target="_blank" style="color: rgb(0, 66, 118); text-decoration: none;">PHP缓存控制器的详细介绍</a></p></li><li><p><a href="http://developer.51cto.com/art/200912/166154.htm" target="_blank" style="color: rgb(0, 66, 118); text-decoration: none;">几款主流PHP框架的优缺点评比</a></p></li><li><p><a href="http://developer.51cto.com/art/200912/166162.htm" target="_blank" style="color: rgb(0, 66, 118); text-decoration: none;">总结PHP代码转义的相关方法</a></p></li></ul><p><span style="color: rgb(51, 51, 51); font-family: 宋体; font-size: 14px; line-height: 28px;  background-color: rgb(248, 248, 248);">ceil -- 进一法取整</span><br style="clear: both; width: 0px; height: 0px; color: rgb(51, 51, 51); font-family: 宋体; font-size: 14px; line-height: 28px; white-space: normal; background-color: rgb(248, 248, 248);"/><span style="color: rgb(51, 51, 51); font-family: 宋体; font-size: 14px; line-height: 28px;  background-color: rgb(248, 248, 248);">说明</span><br style="clear: both; width: 0px; height: 0px; color: rgb(51, 51, 51); font-family: 宋体; font-size: 14px; line-height: 28px; white-space: normal; background-color: rgb(248, 248, 248);"/><span style="color: rgb(51, 51, 51); font-family: 宋体; font-size: 14px; line-height: 28px;  background-color: rgb(248, 248, 248);">float ceil ( float value )</span><br style="clear: both; width: 0px; height: 0px; color: rgb(51, 51, 51); font-family: 宋体; font-size: 14px; line-height: 28px; white-space: normal; background-color: rgb(248, 248, 248);"/><span style="color: rgb(51, 51, 51); font-family: 宋体; font-size: 14px; line-height: 28px;  background-color: rgb(248, 248, 248);">返回不小于 value 的下一个整数，value 如果有小数部分则进一位。ceil() 返回的类型仍然是 float，因为 float 值的范围通常比 integer 要大。</span></p><p style="margin-top: 10px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); text-indent: 28px; font-family: 宋体; font-size: 14px; line-height: 28px; white-space: normal; background-color: rgb(248, 248, 248);">PHP取整函数例子 1. ceil() 例子</p><pre style="margin-top: 0px; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &#39;Courier New&#39;, monospace; font-size: 12px;  overflow: auto; line-height: 28px; background-color: rgb(230, 230, 230);">&lt;&nbsp;?php&nbsp;\r\n&nbsp;echo&nbsp;ceil(4.3);&nbsp;//&nbsp;5&nbsp;\r\n&nbsp;echo&nbsp;ceil(9.999);&nbsp;//&nbsp;10&nbsp;&nbsp;\r\n&nbsp;?&gt;</pre><p style="margin-top: 10px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); text-indent: 28px; font-family: 宋体; font-size: 14px; line-height: 28px; white-space: normal; background-color: rgb(248, 248, 248);">floor -- 舍去法取整<br style="clear: both; width: 0px; height: 0px;"/>说明<br style="clear: both; width: 0px; height: 0px;"/>float floor ( float value )<br style="clear: both; width: 0px; height: 0px;"/>返回不大于 value 的下一个整数，将 value 的小数部分舍去取整。floor() 返回的类型仍然是 float，因为 float 值的范围通常比 integer 要大。</p><p style="margin-top: 10px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); text-indent: 28px; font-family: 宋体; font-size: 14px; line-height: 28px; white-space: normal; background-color: rgb(248, 248, 248);">PHP取整函数例子 1. floor() 例子</p><pre style="margin-top: 0px; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &#39;Courier New&#39;, monospace; font-size: 12px;  overflow: auto; line-height: 28px; background-color: rgb(230, 230, 230);">&lt;&nbsp;?php&nbsp;&nbsp;\r\necho&nbsp;floor(4.3);&nbsp;//&nbsp;4&nbsp;&nbsp;\r\necho&nbsp;floor(9.999);&nbsp;//&nbsp;9&nbsp;&nbsp;\r\n?&gt;</pre><p style="margin-top: 10px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); text-indent: 28px; font-family: 宋体; font-size: 14px; line-height: 28px; white-space: normal; background-color: rgb(248, 248, 248);">round -- 对浮点数进行四舍五入<br style="clear: both; width: 0px; height: 0px;"/>说明<br style="clear: both; width: 0px; height: 0px;"/>float round ( float val [, int precision] )<br style="clear: both; width: 0px; height: 0px;"/>返回将 val 根据指定精度 precision（十进制小数点后数字的数目）进行四舍五入的结果。precision 也可以是负数或零（默认值）。</p><p style="margin-top: 10px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); text-indent: 28px; font-family: 宋体; font-size: 14px; line-height: 28px; white-space: normal; background-color: rgb(248, 248, 248);">PHP取整函数例子 1. round() 例：</p><pre style="margin-top: 0px; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &#39;Courier New&#39;, monospace; font-size: 12px;  overflow: auto; line-height: 28px; background-color: rgb(230, 230, 230);">&lt;?php\r\n&nbsp;&nbsp;echo&nbsp;round(3.4);&nbsp;//&nbsp;3&nbsp;&nbsp;\r\n&nbsp;&nbsp;echo&nbsp;round(3.5);&nbsp;//&nbsp;4&nbsp;&nbsp;\r\n&nbsp;&nbsp;echo&nbsp;round(3.6);&nbsp;//&nbsp;4&nbsp;&nbsp;\r\n&nbsp;&nbsp;echo&nbsp;round(3.6,&nbsp;0);&nbsp;//&nbsp;4&nbsp;&nbsp;\r\n&nbsp;&nbsp;echo&nbsp;round(1.95583,&nbsp;2);&nbsp;//&nbsp;1.96&nbsp;&nbsp;\r\n&nbsp;&nbsp;echo&nbsp;round(1241757,&nbsp;-3);&nbsp;//&nbsp;1242000&nbsp;&nbsp;\r\n&nbsp;&nbsp;echo&nbsp;round(5.045,&nbsp;2);&nbsp;//&nbsp;5.05&nbsp;&nbsp;\r\n&nbsp;&nbsp;echo&nbsp;round(5.055,&nbsp;2);&nbsp;//&nbsp;5.06&nbsp;&nbsp;?&gt;</pre><p style="margin-top: 10px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); text-indent: 28px; font-family: 宋体; font-size: 14px; line-height: 28px; white-space: normal; background-color: rgb(248, 248, 248);">intval---对变数转成整数型态</p><p style="margin-top: 10px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); text-indent: 28px; font-family: 宋体; font-size: 14px; line-height: 28px; white-space: normal; background-color: rgb(248, 248, 248);">PHP取整函数例子intval()</p><pre style="margin-top: 0px; margin-bottom: 1em; padding: 0px; color: rgb(51, 51, 51); font-family: &#39;Courier New&#39;, monospace; font-size: 12px;  overflow: auto; line-height: 28px; background-color: rgb(230, 230, 230);">&lt;?php&nbsp;&nbsp;\r\necho&nbsp;intval(4.3);&nbsp;//4&nbsp;&nbsp;\r\necho&nbsp;intval(4.6);&nbsp;//&nbsp;4&nbsp;&nbsp;&nbsp;\r\n?&gt;</pre><p><br/></p>', 8, 1),
(113, 'mysqli中文乱码', '2015-04-07 16:11:15', '<pre class="brush:sql;toolbar:false">$mysql&nbsp;=&nbsp;mysqli(&#39;localhost&#39;,&#39;root&#39;,&#39;password&#39;,&#39;database&nbsp;name&#39;);\r\n$mysql-&gt;query(&#39;select&nbsp;*&nbsp;from&nbsp;news&#39;);&nbsp;//数据库表为news\r\n$result&nbsp;=&nbsp;$mysql-&gt;fetch_assoc();\r\n//通过var_dump()查看结果集里的内容，发现中文全以？显示\r\nvar_dump($result);&nbsp;\r\n\r\n解决思路：\r\n//&nbsp;1、先查看下当前编码是什么\r\necho&nbsp;$mysql-&gt;character_set_name();\r\n//&nbsp;得到结果是latin1\r\nlatin1\r\n\r\n//&nbsp;2、使用$mysql-&gt;set_charset($charset)将编码设置成存入数据库时的编码\r\n$mysql-&gt;set_charset(&#39;utf8&#39;);\r\n\r\n//再通过var_dump($result);查看结果就是正常的了。这里设置编码时为啥不用$mysql-&gt;query(&#39;set&nbsp;names&nbsp;utf8&#39;)呢？手册上写着：\r\nNote:\r\n如果在Windows平台上使用该方法，需要4.1.11版或以上的MySQL客户端库，且MySQL版本为5.0.6以上。\r\n\r\nNote:\r\n这应该是首选的用于改变字符编码的方法，不建议使用&nbsp;mysqli_query()&nbsp;执行SQL请求的SET&nbsp;NAMES&nbsp;...（如&nbsp;SET&nbsp;NAMES&nbsp;utf8）。详见MySQL字符集的概念\r\n\r\n//&nbsp;如果这样设置后，浏览器还是以乱码显示中文，明确告诉浏览器以UTF-8来显示\r\nheader(&#39;Content-type:text/html:charset:utf-8&#39;);</pre><p><br/></p>', 4, 1),
(114, 'mysql事务', '2015-04-09 12:33:47', '<p>	</p><p><br/></p><p>在某些情况下需要用到事务，如，张三在商城里买了一台电脑4000元，那么就要扣除张三账户里的4000元钱，电脑库存数量减一，商城账户增加4000元，当这三个操作有一个没有成功执行时，就得回溯到原始状态，这就是事务的大意。</p><p>mysql的存储引擎包括：MyISAM、InnoDB、BDB、MEMORY、MERGE、EXAMPLE、NDB Cluster、ARCHIVE、CSV、BLACKHOLE、FEDERATED等，其中<strong>InnoDB</strong>和<strong>BDB</strong>提供事务安全表，其它存储引擎都是非事务安全表。</p><p>其中以<strong>MyISAM</strong>和<strong style="white-space: normal;">InnoDB</strong>最常用，前者不支持事务，后者支持。因此，若要使用事务，建表时需指定引擎为<strong style="white-space: normal;">InnoDB</strong>。</p><p>在MySql console下操作事务4步走，1、将自动提交关闭（set autocommit=0），2、开启事务（start transaction），3、执行SQL(insert,update,delete)语句... ，若发现有误需回到之前状态，也即没有执行SQL(insert,update,delete)之前，rollback&nbsp;4、一切无误后，再提交commit。</p><p><br/></p><p>在test库里随便找一张表来进行练习，执行了上面的操作后，set autocommit=0;start strnsaction;insert into ...;rollback后发现并没回到insert 之前的状态，问题出在哪呢？</p><p>首先得知道这表用的引擎是什么，如果不是InnoDB，那么如何将它改为InnoDB？<br/></p><p>查看test库下面表a的引擎，方法一：show table status from 数据库名 where name=&#39;表名&#39; &nbsp;(后面加了&#39;\\G&#39;是为了显示更为易读 )</p><pre>mysql&gt;&nbsp;show&nbsp;table&nbsp;status&nbsp;from&nbsp;test&nbsp;where&nbsp;name=&#39;a&#39;&nbsp;\\G\r\n***************************&nbsp;1.&nbsp;row&nbsp;***************************\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Name:&nbsp;a\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Engine:&nbsp;MyISAM\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Version:&nbsp;10\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Row_format:&nbsp;Compact\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rows:&nbsp;0\r\n&nbsp;Avg_row_length:&nbsp;0\r\n&nbsp;&nbsp;&nbsp;&nbsp;Data_length:&nbsp;16384\r\nMax_data_length:&nbsp;0\r\n&nbsp;&nbsp;&nbsp;Index_length:&nbsp;0\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Data_free:&nbsp;5242880\r\n&nbsp;Auto_increment:&nbsp;NULL\r\n&nbsp;&nbsp;&nbsp;&nbsp;Create_time:&nbsp;2013-08-22&nbsp;14:41:40\r\n&nbsp;&nbsp;&nbsp;&nbsp;Update_time:&nbsp;NULL\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Check_time:&nbsp;NULL\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Collation:&nbsp;utf8_general_ci\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Checksum:&nbsp;NULL\r\n&nbsp;Create_options:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Comment:\r\n1&nbsp;row&nbsp;in&nbsp;set&nbsp;(0.00&nbsp;sec)</pre><p>方法二：show create table 表名（这方法有时候会不准，假如创建表时指定的引擎是innodb，而innodb没有启用，那么实际它的引擎就会是数据库的默认引擎）。<br/></p><pre>mysql&gt;&nbsp;show&nbsp;create&nbsp;table&nbsp;a\\G\r\n***************************&nbsp;1.&nbsp;row&nbsp;***************************\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Table:&nbsp;a\r\nCreate&nbsp;Table:&nbsp;CREATE&nbsp;TABLE&nbsp;`a`&nbsp;(\r\n&nbsp;&nbsp;`id`&nbsp;varchar(1)&nbsp;DEFAULT&nbsp;NULL,\r\n&nbsp;&nbsp;`num`&nbsp;int(11)&nbsp;DEFAULT&nbsp;NULL\r\n)&nbsp;ENGINE=MyISAM&nbsp;DEFAULT&nbsp;CHARSET=utf8\r\n1&nbsp;row&nbsp;in&nbsp;set&nbsp;(0.00&nbsp;sec)</pre><p>方法三：在命令行下面输入mysqlshow -u登录用户名 -p密码 --status 数据库名 表名</p><pre>C:\\Users\\wenxiu-hero&gt;mysqlshow&nbsp;-uroot&nbsp;-pmysql&nbsp;--status&nbsp;test&nbsp;a;\r\nDatabase:&nbsp;test&nbsp;&nbsp;Wildcard:&nbsp;a;\r\n+------+--------+---------+------------+------+----------------+-------------+--\r\n---------------+--------------+-----------+----------------+-------------+------\r\n-------+------------+-----------+----------+----------------+---------+\r\n|&nbsp;Name&nbsp;|&nbsp;Engine&nbsp;|&nbsp;Version&nbsp;|&nbsp;Row_format&nbsp;|&nbsp;Rows&nbsp;|&nbsp;Avg_row_length&nbsp;|&nbsp;Data_length&nbsp;|&nbsp;M\r\nax_data_length&nbsp;|&nbsp;Index_length&nbsp;|&nbsp;Data_free&nbsp;|&nbsp;Auto_increment&nbsp;|&nbsp;Create_time&nbsp;|&nbsp;Updat\r\ne_time&nbsp;|&nbsp;Check_time&nbsp;|&nbsp;Collation&nbsp;|&nbsp;Checksum&nbsp;|&nbsp;Create_options&nbsp;|&nbsp;Comment&nbsp;|\r\n+------+--------+---------+------------+------+----------------+-------------+--\r\n---------------+--------------+-----------+----------------+-------------+------\r\n-------+------------+-----------+----------+----------------+---------+\r\n+------+--------+---------+------------+------+----------------+-------------+--\r\n---------------+--------------+-----------+----------------+-------------+------\r\n-------+------------+-----------+----------+----------------+---------+</pre><p>这里并没有看到Engine对应的值，不知为什么。</p><p>更改表引擎：alter table 表名 engine=&#39;引擎名&#39;;(若表里数据量大的话，速度较慢，数据量大于500M时，可先将表数据转移到一张临时表，再删除表数据，更改原表引擎，将临时表数据导入原表)</p><pre>mysql&gt;&nbsp;alter&nbsp;table&nbsp;a&nbsp;engine=&#39;innodb&#39;;\r\nQuery&nbsp;OK,&nbsp;0&nbsp;rows&nbsp;affected&nbsp;(0.21&nbsp;sec)\r\nRecords:&nbsp;0&nbsp;&nbsp;Duplicates:&nbsp;0&nbsp;&nbsp;Warnings:&nbsp;0</pre><p>以上是直接对数据库进行操作，如果是通过PHP来操作呢？</p><p><span class="type">首先关闭自动提交 bool</span> <span class="methodname"><strong>mysqli::autocommit</strong> </span> &nbsp; &nbsp;( <span class="methodparam"><span class="type">bool</span> <code class="parameter">$mode</code> </span> &nbsp; )</p><p>若有错就撤销操作&nbsp;<span class="type">bool</span> <span class="methodname"><strong>mysqli::rollback</strong> </span> &nbsp; &nbsp;( <span class="methodparam">void</span> &nbsp; )</p><p>最后确认无误才提交<span class="type">bool</span> <span class="methodname"><strong>mysqli::commit</strong> </span> &nbsp; &nbsp;( <span class="methodparam">void</span> &nbsp; )</p><p><br/></p>', 8, 1);
INSERT INTO `news` (`id`, `title`, `dates`, `content`, `hits`, `is_delete`) VALUES
(115, 'PDO使用小记', '2015-04-12 10:02:27', '<p><span style="color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px; background-color: rgb(255, 255, 255);">Mysql和Mysqli扩展都可以用来连接Mysql，为什么还要用PDO呢？</span><br/></p><p><strong><span style="color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px; background-color: rgb(255, 255, 255);">什么是PDO？</span></strong></p><p><span style="color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px; background-color: rgb(255, 255, 255);">它的全称是PHP Date Object，是一个对多种数据库提供统一操作方法的数据库访问层。“PDO扩展为PHP访问数据库定义了一个轻量级的、一致性的接口，它提供了一个数据访问抽象层，这样，无论使用什么数据库，都可以通过一致的函数执行查询和获取数据。PDO随PHP5.1发行，在PHP5.0的PECL扩展中也可以使用，无法运行于之前的PHP版本。”</span></p><p><span style="color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px; background-color: rgb(255, 255, 255);">使用PDO在以后更换数据库将更有方便和高效。</span></p><p><strong><span style="color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;  background-color: rgb(255, 255, 255);">如何使用呢？</span></strong></p><p><span id="_baidu_bookmark_start_39" style="display: none; line-height: 0px;">‍</span><span style="font-size: 16px;">1、安装：以使用PDO来连接Mysql为例，在Windows环境下，编辑php.ini将[;extension=php_pdo.dll和;extension=php_pdo_mysql.dll]前面的分号去掉，再重启服务器（如Apache）就行。</span></p><p><span id="_baidu_bookmark_end_40" style="display: none; line-height: 0px;">‍</span></p><p><br/></p><p>2、实例化PDO: $pdo = new pdo(string $dsn [, string $username [, string $password [, array $driver_options ]]]&nbsp;);一共4个参数，后3个参数可选。</p><p>以使用Mysql为例：$dsn的格式是 mysql:host=数据库地址;dbname=数据库名，$username填连接数据库的用户名，$password填连接数据库的密码。$driver_options驱动选项。假设以root用户连接，密码是mysql，那么一个完整的实例化PDO代码就是：</p><p>$pdo = new pdo(&#39;mysql:host=localhost;dbname=test&#39;,&#39;root&#39;,&#39;mysql&#39;);它在执行时，若遇到错误会抛出一个异常PDOException，可以将这段代码放在try里执行。</p><p><br/></p><pre class="brush:php;toolbar:false">try{\r\n&nbsp;&nbsp;&nbsp;&nbsp;$pdo&nbsp;=&nbsp;new&nbsp;pdo(&#39;mysql:host=localhost;dbname=test&#39;,&#39;root&#39;,&#39;mysql&#39;);\r\n}catch(PDOException&nbsp;$e){\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;数据库连接出错：&#39;&nbsp;.&nbsp;$e-&gt;getMessage();\r\n&nbsp;&nbsp;&nbsp;&nbsp;exit;\r\n}</pre><p>连上数据库后，就可以执行SQL语句了，主要有三个方法：</p><p>1)$pdo-&gt;query() 返回的是结果集，用来执行select等产生结果集的语句,2）$pdo-&gt;exec() 返回的是影响的行数，主要用来执行insert,update,delete等产生影响行数的语句,$pdo-&gt;prepare()预处理;</p><pre class="brush:php;toolbar:false">CREATE&nbsp;TABLE&nbsp;a&nbsp;(\r\n&nbsp;&nbsp;`id`&nbsp;varchar(10)&nbsp;not&nbsp;null&nbsp;auto_increment&nbsp;primary&nbsp;key,\r\n&nbsp;&nbsp;`num`&nbsp;int(11)&nbsp;not&nbsp;null&nbsp;default&nbsp;0\r\n)&nbsp;ENGINE=InnoDB&nbsp;DEFAULT&nbsp;CHARSET=utf8</pre><p>对表a插入一条数据:</p><pre class="brush:php;toolbar:false">$affected_rows&nbsp;=&nbsp;$pdo-&gt;exec(&quot;insert&nbsp;into&nbsp;a(num)&nbsp;values(100)&quot;);\r\necho&nbsp;$affected_rows;&nbsp;\r\n//若成功插入1条数据，会输出1，如果执行失败，默认什么都不会输出，想得到出错信息的话，就需要通过$mysql-&gt;errorInfo()和$mysql-&gt;errorCode()来获取，如：\r\nif(!affected_rows){\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;出错了：&#39;&nbsp;.&nbsp;$mysql-&gt;errorCode()&nbsp;.&nbsp;&#39;&lt;br/&gt;&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;print_r($mysql-&gt;errorInfo());&nbsp;&nbsp;//返回的是数组\r\n}</pre><p>这里其实是涉及到了错误报告模式的问题，一共有三个PDO::ERRMODE_SILENT (integer) 这是默认的，遇到错误不会自动输出，PDO::ERRMODE_WARNING (integer) 遇到问题，会输出。PDO::ERRMODE_EXCEPTION (integer) 异常模式，遇到问题会抛出一个异常。要设置其它两种，可以在实例化PDO对象时指定：</p><p>设置为警告模式，遇到错误直接在浏览器上输出</p><pre class="brush:php;toolbar:false">try{\r\n&nbsp;&nbsp;&nbsp;&nbsp;$pdo&nbsp;=&nbsp;new&nbsp;pdo(&#39;mysql:host=localhost;dbname=test&#39;,&#39;root&#39;,&#39;mysql&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;$pdo-&gt;setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_WARNING);\r\n}catch(PDOException&nbsp;$e){\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;数据库连接出错：&#39;&nbsp;.&nbsp;$e-&gt;getMessage();\r\n&nbsp;&nbsp;&nbsp;&nbsp;exit;\r\n}\r\n\r\n$pdo-&gt;exec(&quot;insert&nbsp;into&nbsp;a(num)&nbsp;values(100)&quot;);</pre><p>设置为异常模式，遇到问题抛出异常，用try...catch来获取</p><pre class="brush:php;toolbar:false">try{\r\n&nbsp;&nbsp;&nbsp;&nbsp;$pdo&nbsp;=&nbsp;new&nbsp;pdo(&#39;mysql:host=localhost;dbname=test&#39;,&#39;root&#39;,&#39;mysql&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;$pdo-&gt;setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_EXCEPTION);\r\n}catch(PDOException&nbsp;$e){\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;数据库连接出错：&#39;&nbsp;.&nbsp;$e-&gt;getMessage();\r\n&nbsp;&nbsp;&nbsp;&nbsp;exit;\r\n}\r\ntry{\r\n&nbsp;&nbsp;&nbsp;&nbsp;$pdo-&gt;exec(&quot;insert&nbsp;into&nbsp;a(numn)&nbsp;values(100)&quot;);\r\n}catch(PDOExcption&nbsp;$e){\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;$e-&gt;getMessage();\r\n}&nbsp;//故意将字段num写错了，会输出SQLSTATE[42S22]:&nbsp;Column&nbsp;not&nbsp;found:&nbsp;1054&nbsp;Unknown&nbsp;column&nbsp;&#39;numn&#39;&nbsp;in&nbsp;&#39;field&nbsp;list&#39;</pre><p><strong>PDO中使用事务</strong></p><pre class="brush:php;toolbar:false">有张表：引擎为InnoDB，它支持事务\r\n\r\n&nbsp;CREATE&nbsp;TABLE&nbsp;`shiwu`&nbsp;(\r\n&nbsp;&nbsp;`name`&nbsp;varchar(40)&nbsp;not&nbsp;null&nbsp;default&nbsp;&#39;&#39;,\r\n&nbsp;&nbsp;`number`&nbsp;double&nbsp;not&nbsp;null&nbsp;default&nbsp;0\r\n)&nbsp;ENGINE=InnoDB&nbsp;DEFAULT&nbsp;CHARSET=utf8&nbsp;\r\n\r\nmysql&gt;&nbsp;desc&nbsp;shiwu;\r\n+--------+-------------+------+-----+---------+-------+\r\n|&nbsp;Field&nbsp;&nbsp;|&nbsp;Type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;Null&nbsp;|&nbsp;Key&nbsp;|&nbsp;Default&nbsp;|&nbsp;Extra&nbsp;|\r\n+--------+-------------+------+-----+---------+-------+\r\n|&nbsp;name&nbsp;&nbsp;&nbsp;|&nbsp;varchar(40)&nbsp;|&nbsp;NO&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|&nbsp;number&nbsp;|&nbsp;double&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;YES&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;NULL&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n+--------+-------------+------+-----+---------+-------+\r\n里面有2条数据：\r\nmysql&gt;&nbsp;select&nbsp;*&nbsp;from&nbsp;shiwu;\r\n+----------+--------+\r\n|&nbsp;name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;number&nbsp;|\r\n+----------+--------+\r\n|&nbsp;zhangsan&nbsp;|&nbsp;&nbsp;1000&nbsp;&nbsp;|\r\n|&nbsp;lisi&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;1000&nbsp;&nbsp;|\r\n+----------+--------+</pre><p>假如lisi要向zhangsan账户转入100元，那么就得zhangsan+100,lisi-100，体现在SQL中就是：</p><p>update shiwu set number = number + 100 where name = &#39;zhangsan&#39;;</p><p>update shiwu set number = number - 100 where name = &#39;lisi&#39;;</p><p>这两条若有一条不成功，则都不成功，这就可以理解为‘事务’。完整php代码如下：</p><pre class="brush:php;toolbar:false">try{\r\n&nbsp;&nbsp;&nbsp;&nbsp;$pdo&nbsp;=&nbsp;new&nbsp;pdo(&#39;mysql:host=localhost;dbname=test&#39;,&#39;root&#39;,&#39;mysql&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;$pdo-&gt;setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_EXCEPTION);\r\n&nbsp;&nbsp;&nbsp;&nbsp;$pdo-&gt;setAttribute(PDO::ATTR_AUTOCOMMIT,0);&nbsp;//关闭自动提交\r\n}catch(PDOException&nbsp;$e){\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;数据库连接出错：&#39;&nbsp;.&nbsp;$e-&gt;getMessage();\r\n&nbsp;&nbsp;&nbsp;&nbsp;exit;\r\n}\r\ntry{\r\n&nbsp;&nbsp;&nbsp;&nbsp;$pdo-&gt;beginTransaction();&nbsp;//开始事务\r\n&nbsp;&nbsp;&nbsp;&nbsp;$sql&nbsp;=&nbsp;&quot;update&nbsp;shiwu&nbsp;set&nbsp;number&nbsp;=&nbsp;number&nbsp;+&nbsp;100&nbsp;where&nbsp;name&nbsp;=&nbsp;&#39;zhangsan&#39;&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if(!$pdo-&gt;exec($sql)){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;PDOException(&#39;向zhangsan转账失败&#39;);&nbsp;//手动抛出一条异常\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;$sql&nbsp;=&nbsp;&quot;update&nbsp;shiwu&nbsp;set&nbsp;number&nbsp;=&nbsp;numdber&nbsp;-&nbsp;100&nbsp;where&nbsp;name&nbsp;=&nbsp;&#39;lisi&#39;&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if(!($pdo-&gt;exec($sql))){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;PDOException(&#39;lisi转出失败&#39;);&nbsp;//手动抛出一条异常\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;$pdo-&gt;commit();&nbsp;//都没问题就提交\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;转账成功&#39;;\r\n}catch(PDOException&nbsp;$e){\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;$e-&gt;getMessage();\r\n&nbsp;&nbsp;&nbsp;&nbsp;$pdo-&gt;rollback();//上面两条语句，只要其中有一条执行出错，就都撤销\r\n}&nbsp;//故意将字段num写错了\r\n\r\n$pdo-&gt;setAttribute(PDO::ATTR_AUTOCOMMIT,1);&nbsp;//&nbsp;都执行完后，再开启自动提交</pre>', 3, 1),
(116, 'php面向对象之实用系统方法', '2015-04-16 15:21:00', '<p>	</p><p>1.class_exists() 如果类存在返回true<br/></p><p>2.get_class() 获取对象的类名，如果不是对象，返回false</p><p>3.get_class_methods() 获取类中的方法（公共），以数组形式返回</p><p>4.get_class_vars()获取类中的字段（公共），以数组形式返回</p><p>5.get_parent_class()获取子类的父类，若没有返回false</p><p>6.interface_exists()确定接口是否存在，存在返回true，否则返回false</p><p>7.is_a()确定对象是否是类或者是否是这类的父类，是返回true，否则返回false</p><p>8.is_subclass_of()确定对象是否是类的子类，是返回true，否则返回false</p><p>9.method_exists()确定对象的方法是否存在，是返回true,否返回false</p><p>10.<span class="refname">spl_autoload_register</span> — <span class="dc-title">注册__autoload()函数</span></p>', 9, 1),
(117, '将Sublime Text，Notepad++打造成编写html代码利器之emmet使用', '2015-05-10 13:49:08', '<p>	</p><p>emmet以前叫Zen Coding，是用python写的，跨平台，能极大提高书写html,css的效率，假如要写这么一段html代码，只需输入html:4s并按下Ctrl和e就行：<br/></p><pre class="brush:html;toolbar:false">&lt;!DOCTYPE&nbsp;HTML&nbsp;PUBLIC&nbsp;&quot;-//W3C//DTD&nbsp;HTML&nbsp;4.01//EN&quot;&nbsp;&quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;\r\n&lt;html&nbsp;lang=&quot;en&quot;&gt;\r\n&lt;head&gt;\r\n	&lt;meta&nbsp;http-equiv=&quot;Content-Type&quot;&nbsp;content=&quot;text/html;charset=UTF-8&quot;&gt;\r\n	&lt;title&gt;Document&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n	\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre><p>附几个简单示例：</p><p><strong>html:5 ===&gt; ctrl+e</strong></p><pre class="brush:html;toolbar:false">&lt;!doctype&nbsp;html&gt;\r\n&lt;html&nbsp;lang=&quot;en&quot;&gt;\r\n&lt;head&gt;\r\n	&lt;meta&nbsp;charset=&quot;UTF-8&quot;&gt;\r\n	&lt;title&gt;Document&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n	\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre><p><strong>link:css ===&gt; ctrl+e<br/></strong></p><pre class="brush:html;toolbar:false">&lt;link&nbsp;rel=&quot;stylesheet&quot;&nbsp;href=&quot;style.css&quot;&gt;</pre><p><strong>ol&gt;li*5 ===&gt; ctrl+e</strong></p><pre class="brush:html;toolbar:false">&lt;ol&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;&lt;/li&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;&lt;/li&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;&lt;/li&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;&lt;/li&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;&lt;/li&gt;\r\n&lt;/ol&gt;</pre><p><strong>给ol和li指定id为head和class为cont==&gt;ol#head&gt;li.cont*5 按下Ctrl和e键</strong></p><pre class="brush:html;toolbar:false">&lt;ol&nbsp;id=&quot;head&quot;&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&nbsp;class=&quot;cont&quot;&gt;&lt;/li&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&nbsp;class=&quot;cont&quot;&gt;&lt;/li&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&nbsp;class=&quot;cont&quot;&gt;&lt;/li&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&nbsp;class=&quot;cont&quot;&gt;&lt;/li&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&nbsp;class=&quot;cont&quot;&gt;&lt;/li&gt;\r\n&lt;/ol&gt;</pre><p><br/></p><p><strong>安装emmet&nbsp;</strong></p><p>1、Sublime Text 2在线安装菜单栏&quot;Preferences&quot;-&gt;&quot;Package Control&quot;-&gt;&quot;Install Package&quot;-&gt;输入&quot;emmet&quot;，找到相关选项后回车安装，然后重启</p><p>2、Notepad++ 在线安装emmet 菜单菜 &quot;插件&quot;-&gt;Plugin Manager-&gt;Show Plugin Manager-&gt;Available-&gt;找到emmet点击install安装，然后重启</p><p><strong>更改快捷键：</strong></p><p>Sublime Text 2=&gt;Preferences-&gt;Package Settings-&gt;Emmet-&gt;Key Bindings Default-&gt;在打开的页面中找到 &quot;action&quot;: &quot;expand_abbreviation&quot;，</p><p>将&quot;keys&quot;里的快捷键改成你想改的。</p><pre class="brush:html;toolbar:false">&nbsp;&quot;keys&quot;:&nbsp;[\r\n&quot;ctrl+e&quot;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;],&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;args&quot;:&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;action&quot;:&nbsp;&quot;expand_abbreviation&quot;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</pre><p>&nbsp;<br/></p><p>Notepad++ =&gt;运行-&gt;管理快捷键-&gt;Plugin commands-&gt;找到Expand abbreviation，将对应的快捷键改成你想要的。</p><p><br/></p><p>emmet的配置文件是snippets.json，里面定义了所有的”缩写行为“，你也可以在里面定义自己的”缩写“。</p><p><br/></p>', 6, 1),
(118, '学习thinkphp框架之笔记1', '2015-05-13 07:14:15', '<p>	</p><p><strong>一些常用函数：</strong><br/></p><p>get_defined_constants(true); 获取系统都有哪些常量可供使用（包换自定义常量），给定参数true，自动分组显示。<br/></p><p><span label="强调" style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"><strong><span id="_baidu_bookmark_start_16" style="display: none; line-height: 0px;">‍</span></strong></span><span id="_baidu_bookmark_start_18" style="display: none; line-height: 0px;">‍</span><span id="_baidu_bookmark_start_20" style="display: none; line-height: 0px;">‍</span><span id="_baidu_bookmark_start_22" style="display: none; line-height: 0px;">‍</span><strong>跨项目、模块、控制器访问<span id="_baidu_bookmark_end_19" style="display: none; line-height: 0px;">‍</span><span id="_baidu_bookmark_end_17" style="display: none; line-height: 0px;">‍</span>：<span id="_baidu_bookmark_end_23" style="display: none; line-height: 0px;">‍</span><span label="明显强调" style="font-size: 16px; font-style: italic; font-weight: bold; color: rgb(51, 153, 204); line-height: 18px;"><span id="_baidu_bookmark_end_21" style="display: none; line-height: 0px;">‍</span></span></strong><span label="明显强调" style="font-size: 16px; font-style: italic; font-weight: bold; color: rgb(51, 153, 204); line-height: 18px;"><span id="_baidu_bookmark_end_21" style="display: none; line-height: 0px;"></span></span></p><p>在Home\\Controller有两控制器IndexController.class.php和ManagerController.class.php，我想在IndexController.class.php中访问ManagerController.class.php里的方法Show，该怎么做呢？<br/></p><p>传统的做法是</p><pre class="brush:php;toolbar:false">$manager&nbsp;=&nbsp;new&nbsp;ManagerController();\r\n$manager-&gt;Show();</pre><p>利用ThinkPHP提供的快捷函数A()可以这么写：<br/></p><pre class="brush:php;toolbar:false">$manager&nbsp;=&nbsp;A(&#39;Manager&#39;);\r\n$manager-&gt;Show();</pre><p><br/></p><p>通过更简便的R函数这么写：<br/></p><pre class="brush:php;toolbar:false">R(&#39;Manager/Show&#39;);</pre><p style="white-space: normal;">上面是在相同模块Home下面调用其它控制器，如果是调用其它模块Test下的控制器Index呢？</p><p style="white-space: normal;">通过A函数写法：</p><pre class="brush:php;toolbar:false">$manager&nbsp;=&nbsp;A(&#39;Test/Manager&#39;);\r\n$manager-&gt;Show();</pre><p>通过R函数写法：</p><pre class="brush:php;toolbar:false">R(&#39;Test/Manager/Show&#39;);</pre><p>调用不同项目Bokes下面的控制器是：</p><pre class="brush:php;toolbar:false">R(&#39;Bokes://模块/控制器标志&#39;);</pre><p><strong>实例化Model的3种方法：</strong></p><pre class="brush:php;toolbar:false">1、new&nbsp;命名空间&nbsp;model方法\r\n2、D(&#39;表名&#39;);\r\n3、M(&#39;表名&#39;);&nbsp;//实例化父类Model，可以直接使用父类Model里的属性方法</pre><p>TP3.1.3里D()方法是对new 操作的一个简化，M()就是实例化父类Model。它们与new 操作不同处是，不需要有具体的model类文件存在。直接传递一个数据库存在的表名，就可以对它进行操作了。</p><pre class="brush:php;toolbar:false">$news&nbsp;=&nbsp;M(&#39;news&#39;);\r\n$news-&gt;select();\r\nprint_r($news);\r\n//这3条语句就把news表里所有信息显示出来了。</pre><p><strong>修改Tp模板引擎为Smarty</strong>，在conf.php设置</p><pre class="brush:php;toolbar:false">&nbsp;&#39;TMPL_ENGINE_TYPE&#39;&nbsp;=&gt;&nbsp;&#39;Smarty&#39;,</pre><p>修改后，原先在模板里使用的$Think.const就需要改成$smarty.const，如模板里有css样式body{color:red; }不需要smarty去解析，就在它前面写{literal}，｝后面再写上{/literal}。</p><pre class="brush:php;toolbar:false">&nbsp;在控制器里将数据传递到模板：\r\n&nbsp;$info&nbsp;=&nbsp;M(&#39;news&#39;);\r\n&nbsp;$this&nbsp;-&gt;&nbsp;assign(&#39;info&#39;,&nbsp;$info);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;$this&nbsp;-&gt;&nbsp;display();\r\n&nbsp;&nbsp;在模板里再将数据循环取出：\r\n&nbsp;{foreach&nbsp;$info&nbsp;as&nbsp;$k&nbsp;=&gt;&nbsp;$v}\r\n&nbsp;$v.字段名\r\n&nbsp;{/foreach}</pre><p><strong>按条件取数据库里数据：</strong></p><pre class="brush:php;toolbar:false">$obj&nbsp;=&nbsp;M();\r\n$obj-&gt;field(字段1、字段2);查询指定字段\r\n$obj-&gt;table(表名);查询哪张表\r\n$obj-&gt;where(参数);&nbsp;平常SQL语句where后面是什么这里参数就是什么\r\n$obj-&gt;group(字段）;根据字段分组查询\r\n$obj-&gt;having(条件);\r\n$obj-&gt;order(id&nbsp;desc倒序/asc正序);\r\n$obj-&gt;limit(偏移量,条数)\r\n\r\nwhere和having都是根据给定条件，对结果进行筛选，它们的异同是？\r\nwhere后面跟的必须是数据表里存在的字段，having后面跟的是select出来的结果。\r\n\r\n假设表news有字段id,price,num\r\n\r\n1、都可以使用的情况：\r\nselect&nbsp;id,price&nbsp;from&nbsp;news&nbsp;where&nbsp;id&gt;100;\r\nselect&nbsp;id,price&nbsp;from&nbsp;news&nbsp;having&nbsp;id&gt;100;\r\n\r\n2、只能用where\r\nselect&nbsp;id,price&nbsp;from&nbsp;news&nbsp;where&nbsp;num&nbsp;=&nbsp;123;\r\n\r\n3、只能用having\r\nselect&nbsp;avg(price)&nbsp;as&nbsp;ag,num&nbsp;from&nbsp;news&nbsp;group&nbsp;by&nbsp;num&nbsp;having&nbsp;ag&nbsp;&gt;&nbsp;200;\r\nselect&nbsp;avg(price)&nbsp;as&nbsp;ag,num&nbsp;from&nbsp;news&nbsp;where&nbsp;ag&nbsp;&gt;&nbsp;200&nbsp;group&nbsp;by&nbsp;num;\r\n\r\n$news&nbsp;=&nbsp;M(&#39;news&#39;);\r\n$news-&gt;select(30);查询主键等于30的记录\r\n$news-&gt;select(&#39;1,3,5&#39;);查询主键等于1，3，5的记录\r\n支持连贯操作，一次可执行多个，并没顺序要求\r\n$re&nbsp;=&nbsp;$news-&gt;where(&#39;id&nbsp;&gt;&nbsp;100&#39;)-&gt;select();\r\n$re2&nbsp;=&nbsp;$news-&gt;limit(2)-&gt;order(&#39;id&nbsp;desc&#39;)-&gt;where(&#39;id&gt;100&#39;)-&gt;select();</pre><p>使用select()返回的结果都是二维数组，如果只取一条记录，不希望返回二维数组来，可以使用<strong>find()方法</strong>，返回的是一维数组，使用方法同select();</p><p>还有一个方法<strong>getBy字段名($name)</strong>对应的SQL是：select * from 表名 where 字段名=$name。查到数据则返回一维数组，没查到则返回null。</p><pre class="brush:php;toolbar:false">$news&nbsp;=&nbsp;M(&#39;news&#39;);\r\nvar_dump($news-&gt;find(30));</pre><p><strong>几个聚合函数</strong></p><p><strong>count() 计算行数,max() 求最大,min() 求最小,sum() 求和,avg() 求平均值。例：</strong></p><pre class="brush:php;toolbar:false">$news&nbsp;=&nbsp;M(&#39;news&#39;);\r\necho&nbsp;$news-&gt;count();&nbsp;将返回有多少条记录\r\n\r\n与where()方法一块执行：\r\necho&nbsp;where(&#39;id&nbsp;&gt;&nbsp;10&#39;)-&gt;count();&nbsp;计算id&gt;10&nbsp;有多少条记录</pre><p><strong>添加、修改、删除数据</strong></p><p>add()：添加数据<strong><br/></strong></p><pre class="brush:php;toolbar:false">1、以数组形式添加\r\n\r\n$news&nbsp;=&nbsp;D(&#39;news&#39;);\r\n$data&nbsp;=&nbsp;array(&#39;字段1&#39;=&gt;&#39;值1&#39;,&#39;字段2&#39;=&gt;&#39;值2&#39;,&#39;字段3&#39;=&gt;&#39;值3&#39;);\r\n$news-&gt;add($data);执行成功，返回的是自增长ID，若没主键则返回1\r\n\r\n2、以AR方式添加\r\n\r\nAR（ActiveRecord活跃记录）规定了程序与数据库之间的关系\r\n一个数据表对应一个类Model，一条数据记录对应类的对象，每个字段对应该对象的具体属性。\r\n\r\n$news&nbsp;=&nbsp;D(&#39;news&#39;);\r\n$news-&gt;字段1=&gt;&#39;值1&#39;;\r\n$news-&gt;字段2=&gt;&#39;值2&#39;;\r\n$news-&gt;字段3=&gt;&#39;值3&#39;;\r\n$news-&gt;add();&nbsp;这里不需要再传递参数，执行成功后返回的也是主键ID。\r\n\r\n可以用create()方法收集表单内容并自动过滤非法字段（默认是POST）\r\n$news&nbsp;=&nbsp;D(&#39;test.news&#39;);\r\n$news-&gt;create();\r\n$news-&gt;add();\r\n\r\n上面三行代码的意思是，收集表单提交来的内容，并添加到数据库test中的news表里。</pre><p>save()：修改数据，返回的是受影响的行数</p><p>有两种方式对数据进行修改：</p><p>1） &nbsp;$news = D(&#39;test.news&#39;);</p><p>&nbsp; &nbsp; $arr = array(&#39;num&#39;=&gt;&#39;100&#39;,&#39;price&#39;=&gt;&#39;189&#39;);</p><p>&nbsp; &nbsp; $news-&gt;where(&#39;id=99&#39;); //若不加限定，考虑数据安全，TP框架不会去执行</p><p>&nbsp; &nbsp; $news-&gt;save($arr);</p><p><br/></p><p>2) &nbsp; $news = D(&#39;test.news&#39;);</p><p>&nbsp; &nbsp; $news-&gt;num = 100;</p><p>&nbsp; &nbsp; $news-&gt;price = 189;</p><p>&nbsp; &nbsp; $news-&gt;where(&#39;id=99&#39;);</p><p>&nbsp; &nbsp; $news-&gt;save(); <br/></p><p>delete()：删除数据，返回受影响的行数</p><p>&nbsp; &nbsp; $news-&gt;delete(2); 删除主键为2的记录<br/></p><p>&nbsp; &nbsp; $news-&gt;delete(&#39;1,2,3&#39;);删除主键为1、2、3的记录<br/></p><p>&nbsp; &nbsp; $news-&gt;where(&#39;id&gt;10&#39;)-&gt;delete();删除id&gt;10的记录</p><p><strong>执行原生SQL语句</strong></p><ol class=" list-paddingleft-2" style="list-style-type: decimal;"><li><p>查询语句：query();返回二维数组</p></li><li><p>添加、修改、删除：execute();返回受影响的行数<strong><br/></strong></p></li></ol>', 24, 1),
(119, '有一个事实是', '2015-05-15 06:46:08', '<p>【本文转自微信公众号&quot;小道消息&quot;】</p><p>有一个我们不愿意承认的事实是：</p><p><br/></p><p><strong>人的内心其实一直在排斥自己的进步。</strong></p><p><strong><br/></strong></p><p>为什么？因为要让自己进步一点很难，要付出努力才行，但是原地踏步相对简单，退步一点则更容易。还会安慰自己：这样也挺好，甚至还有比我更糟糕的呐。</p><p>有的人排斥反应严重，有的反应轻微，也有极少人经历过挣扎后会获得免疫。</p><p><br/></p><p>如何识别完全排斥进步的人？谈几分钟就知道了，面对任何批评和建议都会找借口，认为任何事情自己没做好都是理所当然，不是自己的问题，别人的责任，因为有各种客观因素的制约，而且自己明明已经很努力了啊。</p><p><br/></p><p>针对以上言论，有人指出：</p><p><br/></p><ol class=" list-paddingleft-2" style="list-style-type: decimal;"><li><p>你说的也不全对；</p></li><li><p>要辩证的看问题；</p></li><li><p>所谓进步无意义；</p></li><li><p>这就是一碗鸡汤；</p></li><li><p>大半夜的发什么信息？</p></li></ol><p><br/></p><p>嗯。</p><p><br/></p><p><br/></p>', 3, 1),
(120, '学习thinkphp框架之笔记2', '2015-05-16 11:49:22', '<p>	</p><p><strong>怎么通过路由给一个操作方法传递参数？</strong><br/></p><p><span id="_baidu_bookmark_start_58" style="display: none; line-height: 0px;">‍</span></p><p><span style="background-color: rgb(0, 176, 80);">‍<em>http://网址/index.php/模块/控制器/方法/变量1/值1</em></span></p><p>这样就给‘方法&#39;通过get方式传递了一个‘变量1&#39;值为‘值1&#39;;</p><p>没用框架前，要获得这个变量，自然会想到用$_GET[&#39;变量1&#39;]来取值，用了TP框架后，就应该按它的规则来办事，如下：</p><p><a href="http://网址/index.php/Home/Admin/update/id/28" _src="http://网址/index.php/Home/Admin/update/id/28">http://网址/index.php/Home/Admin/update/id/28</a>&nbsp;=&gt; 是要将id=38传给方法update()的，可以在update方法里这么做：</p><pre class="brush:php;toolbar:false">public&nbsp;function&nbsp;update($id){\r\n&nbsp;&nbsp;&nbsp;$id&nbsp;;&nbsp;//这里可以直接用$id就可得到id的值\r\n}</pre><p>注意：上面方法需要得到$id，如果在方法里没设定默认值，且访问时也没传递，那么此方法是禁止访问的。</p><p>一个变量通过路由是这么写，多个呢？写法如下：</p><p><em><span id="_baidu_bookmark_start_29" style="display: none; line-height: 0px;">‍</span><span id="_baidu_bookmark_start_31" style="display: none; line-height: 0px;">‍</span></em><span id="_baidu_bookmark_start_80" style="display: none; line-height: 0px;">‍</span><em><span style="background-color: rgb(0, 176, 80);"><span id="_baidu_bookmark_start_78" style="display: none; line-height: 0px;">‍</span>http://网址/index.php/模块/控制器/方法/变量1/值1/变量2/值2/变量3/值3<span id="_baidu_bookmark_end_79" style="display: none; line-height: 0px;">‍</span></span></em><span id="_baidu_bookmark_end_81" style="display: none; line-height: 0px;">‍</span><span id="_baidu_bookmark_end_32" style="display: none; line-height: 0px;">‍</span><span id="_baidu_bookmark_end_30" style="display: none; line-height: 0px;">‍</span></p><p><em><br/></em></p><p><strong>使用TP3.2.3框架自带的验证码类Verify</strong></p><p>Verify.class.php所在目录=&gt; ThinkPHP/Library/Think/Verify.class.php</p><p>第一步.实例化&nbsp;</p><pre class="brush:php;toolbar:false">根据自己需求，可以更改这些默认参数：\r\n$config&nbsp;=&nbsp;array(\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;seKey&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;&#39;ThinkPHP.CN&#39;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;验证码加密密钥\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;codeSet&#39;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;&#39;2345678abcdefhijkmnpqrstuvwxyzABCDEFGHJKLMNPQRTUVWXY&#39;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;验证码字符集合\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;expire&#39;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;1800,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;验证码过期时间（s）\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;useZh&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;false,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;使用中文验证码&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;zhSet&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;&#39;这里是系统默认提供的中文验证字符串，因太长，这里就不展示了&#39;,&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;中文验证码字符串\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;useImgBg&#39;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;false,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;使用背景图片&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;fontSize&#39;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;25,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;验证码字体大小(px)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;useCurve&#39;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;true,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;是否画混淆曲线\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;useNoise&#39;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;true,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;是否添加杂点	\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;imageH&#39;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;0,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;验证码图片高度\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;imageW&#39;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;0,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;验证码图片宽度\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;length&#39;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;5,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;验证码位数\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;fontttf&#39;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;&#39;&#39;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;验证码字体，不设置随机获取\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;bg&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;array(243,&nbsp;251,&nbsp;254),&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;背景颜色\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;reset&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;&nbsp;true,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;验证成功后是否重置\r\n\r\n);\r\n$verify&nbsp;=&nbsp;new&nbsp;\\Think\\Verify($config);</pre><p>第二步.生成验证码<br/></p><pre class="brush:php;toolbar:false">$verify-&gt;entry();</pre><p>第三步.验证输入是否与生成验证码一致（成功返回true）</p><pre class="brush:php;toolbar:false">$verify-&gt;check(&#39;用户输入的验证码&#39;);</pre><p><strong>TP框架中SESSION的用法：</strong><br/></p><pre class="brush:php;toolbar:false">session(name,value,&#39;有效时间&#39;);&nbsp;&nbsp;//设置一个session名字为&#39;name&#39;，值为&#39;value&#39;\r\nsession(name);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//读取名字为&#39;name’的值\r\nsession(name,null);&nbsp;&nbsp;&nbsp;//删除名字为&#39;name’的session\r\nsession(null);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//删除全部session</pre><p><strong>TP框架中COOKIE用法：</strong></p><pre class="brush:php;toolbar:false">与SESSION一样，如上将session改为cookie就行\r\nredirect(&#39;$url&#39;,$params,$delay,$msg);跳转</pre><p><strong>TP缓存操作：</strong></p><pre class="brush:php;toolbar:false">S(name,value,过期时间（单位秒）);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//设置缓存变量\r\nS(name);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;读取缓存变量信息\r\nS(name,null);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//删除指定缓存变量信息</pre>', 2, 1),
(138, '更改mysql表某个字段的默认值为当前时间', '2015-05-16 16:41:00', '<p>	</p><p>假设要更改数据表news中的dates字段的默认值为当前时间，执行sql语句：</p><p>alter table news change dates dates timestamp not null default now(); （要将它的类型改为timestamp，这样就可以设置成now()了）</p>', 1, 1),
(139, '123', '2015-05-17 03:32:40', '&lt;p&gt;456&lt;br/&gt;&lt;/p&gt;', 2, 0),
(156, '2', '2015-05-17 10:02:00', '&lt;p&gt;d&lt;/p&gt;', 0, 0),
(157, 'd', '2015-05-17 10:02:24', '&lt;p&gt;ddd&lt;/p&gt;', 1, 0),
(158, 'fdsa', '2015-05-17 10:02:32', '&lt;p&gt;fdsafdsa&lt;/p&gt;', 1, 0),
(159, 'php开发工程师要求', '2015-05-17 10:28:40', '<p>1、1年以上PHP开发经验，熟悉至少一种PHP开发框架（Symfony，Codeigniter，Yii，Laravel等）；</p><p>2、拥有良好的代码习惯，要求结构清晰，命名规范，逻辑性强，代码冗余率低；</p><p>3、熟练PHP以及相关web技术;</p><p>4、熟练运用MySQL和NoSQL数据库操作，熟悉SQL语句调优；</p><p>5、对技术开发的主流技术工具有深入的了解，有较强的新技术学习能力；</p><p>6、有网站开发维护经验；</p><p>7、乐于沟通表达，有责任心，有团队精神。</p>', 3, 1),
(160, 'php都有哪些框架？', '2015-05-17 10:40:33', '<p><br/></p><pre id="best-content-718530716" accuse="aContent" class="best-text mb-10" style="margin-top: 0px; margin-bottom: 10px; padding: 0px; font-family: arial, &#39;courier new&#39;, courier, 宋体, monospace, &#39;Microsoft YaHei&#39;; white-space: pre-wrap; word-wrap: break-word; font-size: 14px; color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(243, 255, 236);"><ol class=" list-paddingleft-2" style="list-style-type: decimal;"><li><p>1.&nbsp;Yii&nbsp;<br/><br/>Yii是一个基于组件的高性能的PHP的框架，用于开发大规模Web应用。Yii采用严格的OOP编写，并有着完善的库引用以及全面的教程。从MVC，DAO/ActiveRecord，widgets，caching，等级式RBAC，Web服务，到主体化，I18N和L10N，Yii提供了今日Web&nbsp;2.0应用开发所需要的几乎一切功能。而且这个框架的价格也并不太高。事实上，Yii是最有效率的PHP框架之一。&nbsp;<br/><br/>2.&nbsp;CodeIgniter&nbsp;<br/><br/>CodeIgniter是一个应用开发框架——一个为建立PHP网站的人们所设计的工具包。其目标在于快速的开发项目：它提供了丰富的库组以完成常见的任务，以及简单的界面，富有条理性的架构来访问这些库。使用CodeIgniter开发可以往项目中注入更多的创造力，因为它节省了大量编码的时间。<br/><br/>3.&nbsp;CakePHP<br/><br/>CakePHP是一个快速开发PHP的框架，其中使用了一些常见的设计模式如ActiveRecord，Association&nbsp;Data&nbsp;Mapping，Front&nbsp;Controller以及MVC。其主要目标在于提供一个令任意水平的PHP开发人员都能够快速开发web应用的框架，而且这个快速的实现并没有牺牲项目的弹性。<br/><br/>4.&nbsp;PHPDevShell<br/><br/>PHPDevShell是一个开源（GNU/LGPL）的快速应用开发框架，用于开发不含Javascript的纯PHP。它有一个完整的GUI管理员后台界面。其主要目标在于开发插件一类的基于管理的应用，其中速度、安全、稳定性及弹性是最优先考虑的重点。其设计形成了一个简单的学习曲线，PHP开发者无需学习复杂的新术语。PHPDevShell的到来满足了开发者们对于一个轻量级但是功能完善，可以无限制的进行配置的GUI的需求。<br/><br/>5.&nbsp;Akelos<br/><br/>Akelos&nbsp;PHP框架是一个基于MVC设计模式的web应用开发平台。基于良好的使用习惯，使用它可以完成如下任务：<br/><br/>◆方便的使用Ajax编写views<br/><br/>◆通过控制器管理请求（request）及响应（response）<br/><br/>◆管理国际化的应用<br/><br/>◆使用简单的协议与模型及数据库通信<br/><br/>你的Akelos应用可以在大多数共享主机服务供应方上运行，因为Akelos对服务器唯一的要求就是支持PHP。因此，Akelos&nbsp;PHP框架是理想的用于发布单独web应用的框架，因为它不需要非标准PHP配置便能运行。<br/><br/>6.&nbsp;Symfony&nbsp;<br/><br/>Symfony是一个用于开发PHP5项目的web应用框架。<br/><br/>这个框架的目的在于加速web应用的开发以及维护，减少重复的编码工作。<br/><br/>Symfony的系统需求不高，可以被轻易的安装在任意设置上：你只需一个Unix或Windows，搭配一个安装了PHP5的网络服务器即可。它与差不多所有的数据库兼容。Symfony的价位不高，相比主机上的花销要低得多。<br/><br/>对于PHP开发者而言，使用Symfony是一件很自然的事，其学习曲线只有短短一天。干净的设计以及代码可读性将缩短开发时间。开发者可以将敏捷开发的原理（如DRY，KISS或XP等）应用在其中，将重点放在应用逻辑层面上，而不用花费大量时间在编写没完没了的XML配置文件上。<br/><br/>Symfony旨在建立企业级的完善应用程序。也就是说，你拥有整个设置的控制权：从路径结构到外部库，几乎一切都可以自定义。为了符合企业的开发条例，Symfony还绑定了一些额外的工具，以便于项目的测试，调试以及归档。<br/><br/>7.&nbsp;Prado<br/><br/>PRADO团队由一些PRADO狂热者组成，这些成员开发并推动PRADO框架以及相关项目的进行。<br/><br/>PRADO的灵感起源于Apache&nbsp;Tapestry。从04年开始，PRADO成为SourceForge上的开源项目之一。这个项目目前进展到了3.x版本。<br/><br/>8.&nbsp;Zend<br/><br/>作为PHP艺术及精神的延伸，Zend框架的基础在于简单，面向对象的最佳方法，方便企业的许可协议，以及经过反复测试的快速代码库。Zend框架旨在建造更安全，更可靠的Web&nbsp;2.0应用及web服务，并不断从前沿厂商（如Google，Amazon，Yahoo，Flickr，StrikeIron和ProgrammableWeb等）的API那里吸收精华。<br/><br/>9.&nbsp;ZooP&nbsp;<br/><br/>Zoop&nbsp;PHP框架，意为Zoop面向对象的PHP框架。<br/><br/>这是个稳定，可伸缩并可移植的框架。从诞生到现在的5年间，已经在不少产品开发中被使用。Zoop是一个快速，有效并干净的框架。它的伸缩性很好，你可以只安装你需要的功能。<br/><br/>对代码并不很熟悉的开发者也可以通过Zoop快速的开发安全的web应用。熟练的开发者则可以更加将Zoop的弹性利用到极致。<br/><br/>Zoop建议将display，logic以及数据层（MVC）分开使用。<br/><br/>Zoop由很多组件和项目集合而成，其中包括smarty和prototype&nbsp;AJAX框架，PEAR模块等。高效的核心组件提供了很多你原本需要自己编码来实现的功能。Zoop内置的纠错功能可以通过配置实现生产环境下的错误日志生成，这个错误日志提供了很多信息，可读性很高，可以更轻易的寻找并排除错误。<br/><br/>Zoop的一个特别之处在于其GuiControls，在PHP中是一个相当革新的想法。它提供了很多form&nbsp;widgets与验证完整的集合到一起，并形成了一个可以轻松打造个性化GuiControls的框架。<br/><br/>10.&nbsp;QPHP<br/><br/>QPHP，意为快速PHP，它是一个与ASP.NET类似的MVC框架。基本上它是这样一个情况：<br/><br/>◆整合了Java和C#的美感<br/><br/>◆除去了在其他PHP框架中使用的Perl形式的意义含糊的语言<br/><br/>◆大量基于OOP的概念<br/><br/>11.Laravel<br/><br/>一、Laravel是一套简洁、优雅的PHP Web开发框架(PHP Web Framework)。它可以让你从面条一样杂乱的代码中解脱出来；它可以帮你构建一个完美的网络APP，而且每行代码都可以简洁、富于表达力。<br/>语法更富有表现力<br/>你知道下面这行代码里 “true” 代表什么意思么?<br/>$uri = Uri::create(‘some/uri’, array(), array(), true);<br/>laravel php开发框架<br/>另外，你知道其他参数在这里的意思么（除了第一个）？当然你不知道。因为这行代码没有表现力。<br/>再看看这段代码:<br/>$url = URL::to_secure(‘some/uri’);<br/>这个表达式使用HTTPS协议创建了一条URL链接， 事实上，上面两种写法都在做同样的事情，但哪一个更一目了然，更富有表现力呢？<br/>二、高质量的文档<br/>CodeIgniter非常流行原因之一是它有良好的文档。这对程序员来说是十分方便的。相比之下，Kohana一个在技术上比CI更加优秀的框架，但你猜怎么着？ 大家不在乎Kohana技术有多强，因为Kohana的文档实在是太糟了。　而Laravel 有一个非常棒的的社区支持。Laravel代码本身的表现力和良好的文档使PHP程序编写令人愉快。<br/>三、丰富的扩展包<br/>Bundle是Laravel中对扩展包的称呼。它可以是任何东西 -- 大到完整的ORM，小到除错(debug)工具，仅仅复制&amp;粘贴就能安装任何扩展包！Laravel的扩展包由世界各地的开发者贡献，而且还在不断增加中。<br/>四、开源、托管在GITHUB上<br/>Laravel是完全开源的。所有代码都可以从Github上获取，并且欢迎你贡献出自己的力量。<br/></p></li></ol></pre><p><br/></p>', 1, 1),
(161, 'js控制前进后退', '2015-05-18 15:57:18', '<pre id="recommend-content-868562249" accuse="aContent" class="recommend-text mb-10" style="margin-top: 0px; margin-bottom: 10px; padding: 0px; font-family: arial, &#39;courier new&#39;, courier, 宋体, monospace, &#39;Microsoft YaHei&#39;; white-space: pre-wrap; word-wrap: break-word; font-size: 14px; color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(243, 255, 236);">&lt;a&nbsp;href=&quot;javascript:history.go(-1);&quot;&gt;后退&lt;/a&gt;\r\n&nbsp;&lt;a&nbsp;href=&quot;javascript:history.go(1);&quot;&gt;前进&lt;/a&gt;</pre><p><br/></p>', 5, 1);
INSERT INTO `news` (`id`, `title`, `dates`, `content`, `hits`, `is_delete`) VALUES
(162, 'smarty学习笔记之基本使用流程', '2015-05-20 09:22:10', '<p>	</p><p><strong>smarty是什么？</strong><br/></p><p><a href="http://www.smarty.net/docs/zh_CN/what.is.smarty.tpl" target="_blank" title="smarty官网"><strong><strong style="white-space: normal;">smarty官网</strong></strong><strong><strong style="white-space: normal;">说明</strong></strong></a><strong><strong style="white-space: normal;">：</strong></strong></p><p>Smarty是一个PHP的模板引擎。更明确来说，它可以帮助开发者更好地分离程序逻辑和页面显示。最好的例子，是当程序员和模板设计师是不同的两个角色的情况，而且大部分时候都不是同一个人的情况。</p><p><br/></p><p>嗯，按上面的说法，如果一个项目就你一人，所有编码工作都是你自己在做，smarty模板可用可不用了。即便不用，不代表可以不会使用，所以学习它仍是必需的，体会什么是模板思想，这更重要。</p><p>使用smarty的典型流程：</p><p><strong>下载：</strong>smarty模板引擎免费，开源，要获得它直接去官网下载就好了，当前（2015-05-20）最新版是3.1.23===&gt;<a href="https://github.com/smarty-php/smarty/releases" target="_blank" title="">https://github.com/smarty-php/smarty/releases</a>。若速度太慢，可去我共享的百度云盘下载<a href="http://pan.baidu.com/s/1c0hf5Kk" target="_blank" title="">http://pan.baidu.com/s/1c0hf5Kk</a>。</p><p><strong><br/></strong></p><p><strong>实例化：</strong>将下载好的压缩包解压，[<span style="font-family: Verdana, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(136, 136, 136);">强烈建议（但不强制）把这些目录 放到WEB服务器文档根目录</span><span class="emphasis" style="font-family: Verdana, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(136, 136, 136);"><em>之外，<span style="font-family: Verdana, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(136, 136, 136);">Smarty目录仅可以通过Smarty库文件访问，而不能直接被浏览器访问。 这样可以避免一些安全问题</span></em></span>],假如在index.php中使用smarty：</p><pre class="brush:php;toolbar:false">require(&#39;libs/Smarty.class.php&#39;);\r\n$smarty&nbsp;=&nbsp;new&nbsp;Smarty();</pre><p><strong>配置：</strong></p><pre class="brush:php;toolbar:false">$smarty-&gt;template_dir&nbsp;=&nbsp;&#39;./temp&#39;;指定模板文件目录\r\n$smarty-&gt;compile_dir&nbsp;=&nbsp;&#39;./comp&#39;;&nbsp;\r\n若不指定compile_dir会在当前自动创建templates_c目录</pre><p><strong>赋值：</strong></p><pre class="brush:php;toolbar:false">$smarty-&gt;assign(&#39;title&#39;,&#39;smarty时间到&#39;);\r\n$smarty-&gt;assign(&#39;content&#39;,&#39;现在开始学习smarty...&#39;);\r\n\r\n如果就这么写：$smarty-&gt;assign(array(&#39;name&#39;=&gt;&#39;zhansan&#39;,&#39;age&#39;=&gt;8));\r\n\r\nsmarty内部会循环这个数组，并依次赋值：\r\n$smarty-&gt;assign(&#39;name&#39;,&#39;zhansan&#39;);\r\n$smarty-&gt;assign(&#39;age&#39;,8);\r\n\r\n如果用append给同一个标签赋值：\r\n$smarty-&gt;append(&#39;name&#39;,&#39;zhansan&#39;);\r\n$smarty-&gt;append(&#39;name&#39;,&#39;lisi&#39;);\r\n\r\nsmarty会将刚赋的值都放到$name数组里$name&nbsp;=&nbsp;array(&#39;zhansan&#39;,&#39;lisi&#39;);</pre><p>./temp目录下有文件1.html，它如何显示刚才赋的值呢，使用{$title}和{$content}就行</p><p><strong>查看效果：</strong></p><pre class="brush:php;toolbar:false">$smarty-&gt;display(&#39;1.html&#39;);&nbsp;//会去./temp目录下将1.html包含进来</pre><p><strong>数组赋值：</strong></p><p>上面的赋值是单个的字符串，数组可不可赋值呢？</p><p>答案是：当然没问题。</p><pre class="brush:php;toolbar:false">关联数组：\r\n$zs&nbsp;=&nbsp;array(&#39;name&#39;=&gt;&#39;zhansan&#39;,&#39;age&#39;=&gt;28);\r\n\r\n将$zs数组传递给模板\r\n$smarty-&gt;assign(&#39;zs&#39;,$zs);&nbsp;\r\n\r\n在模板显示{$标签.key}\r\n姓名：{$zs.name}，年龄：{$zs.age}\r\n\r\n索引数组：\r\n$ls&nbsp;=&nbsp;array(&#39;lisi&#39;,30);\r\n\r\n将$ls传递给模板\r\n$smarty-&gt;assign(&#39;ls&#39;,$ls);\r\n\r\n在模板中显示：可以通过{$标签[index]}和{$标签.index}\r\n姓名：{ls.0}，年龄：{ls[1]}</pre><p><strong>smarty定界符与css标签冲突：</strong></p><p>假如你模板页面有css样式a{text-decoration:none}，你在访问页面时，smarty在解析可能会报错，解决办法有两种。<strong><br/></strong></p><p>1、修改默认定界符</p><pre class="brush:php;toolbar:false">$smarty-&gt;left_delimiter&nbsp;=&nbsp;&#39;{&gt;&#39;;\r\n$smarty-&gt;right_delimiter&nbsp;=&nbsp;&#39;&lt;}&#39;;</pre><p>2、在模板里用{literal}{/literal}来告诉smarty这里不用解析，正常输出</p><pre class="brush:css;toolbar:false">{literal}a{text-decoration:none}{/literal}</pre><p><strong>smarty标签变量来源：</strong><br/></p><pre class="brush:html;toolbar:false">1、php中assign分配的变量，上面的赋值都是assign，这里不展开了。\r\n\r\n2、smarty系统保留变量，意味着不用在php中赋值，可以直接在模板中使用。\r\n如&nbsp;$smarty.get.id&nbsp;===&gt;&nbsp;可以直接获取通过地址栏GET传过来的id值。\r\n\r\nsmarty保留变量一共有：\r\n$smarty.get，$smarty.post，$smarty.cookies，$smarty.server，$smarty.env，$smarty.session，$smarty.request\r\n\r\n3、从配置文件读取的配置变量：（不需要在php页面做额外赋值assign操作，直接在模板中使用）\r\n配置文件的格式是\r\n&nbsp;&nbsp;&nbsp;&nbsp;name1=value1\r\n&nbsp;&nbsp;&nbsp;&nbsp;name2=value2\r\n&nbsp;&nbsp;&nbsp;&nbsp;name3=value3\r\n&nbsp;&nbsp;&nbsp;&nbsp;name4=value4\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n要在模板页面使用这些值，需做如下操作：\r\n\r\n1、先在php页面设置配置文件所在目录\r\n$smarty-&gt;config_dir&nbsp;=&nbsp;&#39;./conf&#39;;\r\n\r\n2、在模板中载入配置文件site.conf，{config_load&nbsp;file=&#39;site.conf&#39;}，site.conf里面有如下内容\r\ntitle=取个好名字真难\r\ncontent=之所以觉得难，还是功力不到位！\r\n\r\n3、在模板中读取配置文件的值\r\n第一种读法&nbsp;{$smarty.config.title}&nbsp;&nbsp;\r\n第二种读法&nbsp;{#content#}</pre><p><strong>smarty显示常量：</strong><br/></p><pre class="brush:html;toolbar:false">常量也不需要再赋值给模板，在模板页面直接用$smarty.const.常量名来引用。</pre><p><strong>对象赋值：</strong></p><p>可以将变量、数组赋值给模板，也可以将对象赋值给模板<strong><br/></strong></p><pre class="brush:php;toolbar:false">&lt;?php\r\n&nbsp;&nbsp;&nbsp;&nbsp;class&nbsp;human{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;$name&nbsp;=&nbsp;&#39;zhansan&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;$age&nbsp;=&nbsp;80;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;say(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&#39;说什么呢，一时还真无话可说。&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;$man&nbsp;=&nbsp;new&nbsp;human();\r\n&nbsp;&nbsp;&nbsp;&nbsp;$smarty-&gt;assign(&#39;man&#39;,$man);\r\n&nbsp;&nbsp;&nbsp;&nbsp;$smarty-&gt;display(&#39;1.html&#39;);\r\n?&gt;</pre><p>在模板里显示：</p><p>数组是用{$标签.key}，对象就是用{$标签-&gt;key}，具体到上面这段代码就是：{$man.name}说：{$man.say()}</p><p><span style="background-color: rgb(128, 100, 162);">勿忘初心：模板里的标签就只显示内容好了，不要做太多其它的事。</span></p><p><br/></p><p><strong>通过类继续来简化smarty配置</strong><br/></p><p>如果多个页面都用到smarty，那么得在每个页面来配置模板目录和编译目录，挺麻烦的，有没什么办法来简化一下呢？可以写一个类文件来统一做这些事，以后要用到时，引入smarty类文件和自己写的类文件就行了。<strong><br/></strong></p><pre class="brush:php;toolbar:false">class&nbsp;MySmarty&nbsp;extends&nbsp;Smarty{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;__construct(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parent::__construct();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*这里为什么不再用设置$this-&gt;template_dir和$this-&gt;compile_dir来设置呢？因为它们在父类中是私有属性，\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;继承过来后，不能重写它们，所以用公开的方法setTemplateDir和setCompileDir来设置。\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;setTemplateDir(&#39;./temp&#39;);&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;setCompileDir(&#39;./comp&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p><br/></p>', 10, 1),
(163, 'smarty学习笔记之逻辑控制与循环', '2015-05-21 05:43:50', '<p>	</p><p>smarty模板里支持<strong><em>if/if--else/if--elseif--else</em></strong>逻辑判断，{if}{/if} 要成对出现。<br/></p><pre class="brush:php;toolbar:false">{if&nbsp;$age&nbsp;&gt;&nbsp;18}\r\n&nbsp;&nbsp;&nbsp;&nbsp;已成年\r\n{else}\r\n&nbsp;&nbsp;&nbsp;&nbsp;未成年\r\n{/if}</pre><p><strong><em>for循环</em></strong>{for $i=1 to 100}$i{/for}效果是输出1到100，不指定step的话，默认$i+1。{for $i=1 to 100 step=2}{$i}{/for}指定步长为2， 效果是输出1,3,5,7,9...99，另外<strong>{$i@total}会输出此次for循环共循环了多少次</strong>，这里会输出50。{$i@iteration}指当前是第几次循环</p><pre class="brush:php;toolbar:false">{for&nbsp;$i=1&nbsp;to&nbsp;100&nbsp;step=2}\r\n&nbsp;&nbsp;&nbsp;&nbsp;{$i}&amp;nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{if&nbsp;$i@iteration&nbsp;%&nbsp;3&nbsp;==&nbsp;0}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br/&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{/if}\r\n{/for}\r\n&lt;br/&gt;\r\n此次循环共循环了{$i@total}次</pre><p>上面代码输出的效果：</p><pre class="brush:html;toolbar:false">1&nbsp;&nbsp;3&nbsp;&nbsp;5&nbsp;&nbsp;\r\n7&nbsp;&nbsp;9&nbsp;&nbsp;11&nbsp;&nbsp;\r\n13&nbsp;&nbsp;15&nbsp;&nbsp;17&nbsp;&nbsp;\r\n19&nbsp;&nbsp;21&nbsp;&nbsp;23&nbsp;&nbsp;\r\n25&nbsp;&nbsp;27&nbsp;&nbsp;29&nbsp;&nbsp;\r\n31&nbsp;&nbsp;33&nbsp;&nbsp;35&nbsp;&nbsp;\r\n37&nbsp;&nbsp;39&nbsp;&nbsp;41&nbsp;&nbsp;\r\n43&nbsp;&nbsp;45&nbsp;&nbsp;47&nbsp;&nbsp;\r\n49&nbsp;&nbsp;51&nbsp;&nbsp;53&nbsp;&nbsp;\r\n55&nbsp;&nbsp;57&nbsp;&nbsp;59&nbsp;&nbsp;\r\n61&nbsp;&nbsp;63&nbsp;&nbsp;65&nbsp;&nbsp;\r\n67&nbsp;&nbsp;69&nbsp;&nbsp;71&nbsp;&nbsp;\r\n73&nbsp;&nbsp;75&nbsp;&nbsp;77&nbsp;&nbsp;\r\n79&nbsp;&nbsp;81&nbsp;&nbsp;83&nbsp;&nbsp;\r\n85&nbsp;&nbsp;87&nbsp;&nbsp;89&nbsp;&nbsp;\r\n91&nbsp;&nbsp;93&nbsp;&nbsp;95&nbsp;&nbsp;\r\n97&nbsp;&nbsp;99&nbsp;\r\n此次循环共循环了50次</pre><p><span style="font-family: Simsun; font-size: medium;"></span><em style="white-space: normal;"><strong>foreach循环</strong></em></p><p>很适合用于循环从数据库取出来的二维数组<em style="white-space: normal;"><strong><br/></strong></em></p><p>假如$goods是从数据库取出来的商品数据</p><pre class="brush:php;toolbar:false">$goods&nbsp;=&nbsp;array(\r\n&nbsp;&nbsp;&nbsp;&nbsp;0=&gt;array(&#39;id&#39;=&gt;1,&#39;goods_price&#39;=&gt;2998,&#39;goods_name&#39;=&gt;&#39;ipad2&#39;),\r\n&nbsp;&nbsp;&nbsp;&nbsp;2=&gt;array(&#39;id&#39;=&gt;3,&#39;goods_price&#39;=&gt;998,&#39;goods_name&#39;=&gt;&#39;iphon4&#39;),\r\n&nbsp;&nbsp;&nbsp;&nbsp;4=&gt;array(&#39;id&#39;=&gt;4,&#39;goods_price&#39;=&gt;999,&#39;goods_name&#39;=&gt;&#39;iphone&nbsp;4s&#39;),\r\n&nbsp;&nbsp;&nbsp;&nbsp;6=&gt;array(&#39;id&#39;=&gt;8,&#39;goods_price&#39;=&gt;13456,&#39;goods_name&#39;=&gt;&#39;Mac&nbsp;Pro&#39;),\r\n);</pre><pre class="brush:php;toolbar:false">{foreach&nbsp;$goods&nbsp;as&nbsp;$k=&gt;$v}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n{/foreach}</pre><p><em><strong>在模板页面显示goods相关信息：<br/></strong></em></p><pre class="brush:php;toolbar:false">&lt;table&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr&gt;&lt;td&gt;序号&lt;/td&gt;&lt;td&gt;商品ID&lt;/td&gt;&lt;td&gt;商品名称&lt;/td&gt;&lt;td&gt;商品价格&lt;/td&gt;&lt;/tr&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{foreach&nbsp;$goods&nbsp;as&nbsp;$k&nbsp;=&gt;&nbsp;$v}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr&gt;&lt;td&gt;{$k}&lt;/td&gt;&lt;td&gt;{$v.id}&lt;/td&gt;&lt;td&gt;{$v.goods_name}&lt;/td&gt;&lt;td&gt;{$v.goods_price}&lt;/td&gt;&lt;/tr&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{/foreach}\r\n&lt;/table&gt;\r\n\r\n浏览器中看到的结果是这样的：</pre><table><tbody><tr><td width="98" valign="top" style="word-break: break-all;"><span style="font-family: Simsun; font-size: medium;">序号</span></td><td width="154" valign="top" style="word-break: break-all;"><span style="font-family: Simsun; font-size: medium;">商品ID</span></td><td width="156" valign="top" style="word-break: break-all;"><span style="font-family: Simsun; font-size: medium;">商品名称</span></td><td width="151" valign="top" style="word-break: break-all;">商品价格<br/></td></tr><tr><td width="98" valign="top" style="word-break: break-all;">0<br/></td><td width="154" valign="top" style="word-break: break-all;">1<br/></td><td width="156" valign="top" style="word-break: break-all;">ipad2</td><td width="151" valign="top" style="word-break: break-all;">2998<br/></td></tr><tr><td width="98" valign="top" style="word-break: break-all;">2<br/></td><td width="154" valign="top" style="word-break: break-all;">3</td><td width="156" valign="top" style="word-break: break-all;"><span style="font-family: Simsun; font-size: medium;">iphon4</span></td><td width="151" valign="top" style="word-break: break-all;">998</td></tr><tr><td width="98" valign="top" style="word-break: break-all;">4</td><td width="154" valign="top" style="word-break: break-all;">4</td><td width="156" valign="top" style="word-break: break-all;">iphone 4s</td><td width="151" valign="top" style="word-break: break-all;">999</td></tr><tr><td width="98" valign="top" style="word-break: break-all;">6</td><td width="154" valign="top" style="word-break: break-all;">8</td><td width="156" valign="top" style="word-break: break-all;">Mac Pro</td><td width="151" valign="top" style="word-break: break-all;">13456</td></tr></tbody></table><p>很明显，其实在序号那列是希望它显示1，2，3，4，对于数组里键值不是标准的升序关系，这里输出$k就不恰当了，可以用充号那列可以用<strong>{$v@iteration}</strong>来输出<em><strong><br/></strong></em></p><p><br/></p><p><em><strong>while循环</strong></em></p><pre class="brush:php;toolbar:false">{$i=0}\r\n{while&nbsp;$i&lt;10}\r\n&nbsp;&nbsp;&nbsp;&nbsp;{$i++}\r\n{/while}\r\n\r\n输出：\r\n0&nbsp;1&nbsp;2&nbsp;3&nbsp;4&nbsp;5&nbsp;6&nbsp;7&nbsp;8&nbsp;9</pre>', 7, 1),
(164, 'smarty学习笔记之进阶篇', '2015-05-21 10:43:54', '<p>	</p><p><strong>变量修饰器</strong><br/></p><p>假如存储发布时间是以UNIX时间戳格式存储的，用PHP从数据库将数据取出来了，将值赋给模板让它显示，显然，发布时间那栏，直接显示时间戳是不对的，这时怎么办呢？</p><p>答：smarty称之为变量修饰器，在输出时间那栏，可以对它进行一定格式修改再显示出来。</p><pre class="brush:php;toolbar:false">{foreach&nbsp;$goods&nbsp;as&nbsp;$k=&gt;v}\r\n&nbsp;&nbsp;&nbsp;&nbsp;{$goods.add_time|date_format:&quot;%Y-%m-%d&nbsp;%H:%M:%S&quot;}\r\n{/foreach}</pre><p>将$goods.add_time的值传给date_format来处理，然后显示date_format返回的值。<br/></p><p>smarty默认提供了哪些变量修饰器呢？</p><p style="line-height: normal;"><a href="">capitalize</a> [首字符大写]&nbsp;<a href="http://localhost/3/form/edit.php?edit=164" style="white-space: normal;">count_characters</a>&nbsp;[字符计数]&nbsp;<a href="http://localhost/3/form/edit.php?edit=164" style="white-space: normal;">cat</a>&nbsp;[连接字符串]&nbsp;<a href="http://localhost/3/form/edit.php?edit=164" style="white-space: normal;">count_paragraphs</a>&nbsp;[计算段数]&nbsp;<a href="http://localhost/3/form/edit.php?edit=164" style="white-space: normal;">count_sentences</a>&nbsp;[计算句数]&nbsp;<a href="http://localhost/3/form/edit.php?edit=164" style="white-space: normal;">count_words</a>&nbsp;[计算词数]</p><p style="line-height: normal;"><a href="http://localhost/3/form/edit.php?edit=164" style="white-space: normal;">date_format</a>&nbsp;[格式化日期]&nbsp;<a href="http://localhost/3/form/edit.php?edit=164" style="white-space: normal;">default</a>&nbsp;[默认值]&nbsp;<a href="http://localhost/3/form/edit.php?edit=164" style="white-space: normal;">escape</a>&nbsp;[编码]&nbsp;<a href="http://localhost/3/form/edit.php?edit=164" style="white-space: normal;">indent</a>&nbsp;[缩进]&nbsp;<a href="http://localhost/3/form/edit.php?edit=164" style="white-space: normal;">lower</a>&nbsp;[小写]&nbsp;<a href="http://localhost/3/form/edit.php?edit=164" style="white-space: normal;">nl2br</a>&nbsp;[换行符替换成 &lt;br /&gt;]&nbsp;<a href="http://localhost/3/form/edit.php?edit=164" style="white-space: normal;">regex_replace</a>&nbsp;[正则替换]&nbsp;<a href="http://localhost/3/form/edit.php?edit=164" style="white-space: normal;">replace</a>&nbsp;[替换]</p><p style="line-height: normal;"><a href="http://localhost/3/form/edit.php?edit=164" style="white-space: normal;">spacify</a>&nbsp;[插空]&nbsp;<a href="http://localhost/3/form/edit.php?edit=164" style="white-space: normal;">string_format</a>&nbsp;[字符串格式化]&nbsp;<a href="http://localhost/3/form/edit.php?edit=164" style="white-space: normal;">strip</a>&nbsp;[去除(多余空格)]&nbsp;<a href="http://localhost/3/form/edit.php?edit=164" style="white-space: normal;">strip_tags</a>&nbsp;[去除html标签]&nbsp;<a href="http://localhost/3/form/edit.php?edit=164" style="white-space: normal;">truncate</a>&nbsp;[截取]&nbsp;<a href="http://localhost/3/form/edit.php?edit=164" style="white-space: normal;">upper</a>&nbsp;[大写]&nbsp;<a href="http://localhost/3/form/edit.php?edit=164" style="white-space: normal;">wordwrap</a>&nbsp;[行宽约束]&nbsp;</p><p style="line-height: normal;"><strong>缓存</strong><br/></p><p style="line-height: normal;">把页面内容保存在磁盘上，下次访问时，直接显示保存的内容</p><p style="line-height: normal;">具体如何使用？</p><p style="line-height: normal;">1、开启缓存</p><pre class="brush:php;toolbar:false">$smarty&nbsp;=&nbsp;new&nbsp;Smarty();\r\n$smarty-&gt;caching=true;</pre><p style="line-height: normal;">2、配置生命周期</p><pre class="brush:php;toolbar:false">$smarty-&gt;cache_lifetime=3600;&nbsp;&nbsp;//单位是秒，多久缓存一下</pre><p style="line-height: normal;">3、设置缓存存储目录&nbsp;</p><pre class="brush:php;toolbar:false">$smarty-&gt;cache_dir&nbsp;=&nbsp;&#39;./cache&#39;;&nbsp;若不指定，会自动程序运行当前目录下创建一个cache目录</pre><p style="line-height: normal;">4、判断是否缓存和是否从数据库取数据</p><pre class="brush:php;toolbar:false">&lt;?php\r\nif(!$smarty-&gt;isCached(&#39;1.html&#39;)){&nbsp;//1.html没缓存时赋值\r\n&nbsp;&nbsp;&nbsp;&nbsp;$smarty-&gt;assign(&#39;date1&#39;,time());\r\n}\r\n$smarty-&gt;display(&#39;1.html&#39;);\r\n?&gt;\r\n现在时间是：{$date1|date_format:&quot;%Y-%m-%d&nbsp;%H:%M:%S&quot;}&nbsp;&nbsp;\r\n//上面设置的生命周期是3600秒，在这时间内，通过浏览器查看，这输出的时间是不会变的</pre><p><strong>局部缓存</strong></p><p>一个页面缓存了，希望实时显示时间那不缓存，能不能做到呢？</p><p>答：没问题。方法有这几种：</p><p>1、在标签处不让它缓存，加上“nocache”</p><pre class="brush:php;toolbar:false">当前时间是：{$date|date_format:&quot;%Y-%m-%d&nbsp;%H:%M:%S&quot;&nbsp;nocache}</pre><p>2、让某一段不缓存，用{nocache}{/nocache}包起来</p><p>3、在php赋值时让它不缓存</p><pre class="brush:php;toolbar:false">&nbsp;$smarty-&gt;assign(&#39;date&#39;,time(),true);&nbsp;//第三个参数为true表示nocache</pre><p><em>注意：不缓存的值要保证它总能从PHP得到值</em></p><p>4、{insert name=&#39;程序名&#39; parm1=&#39;v1&#39; parm2=&#39;v2&#39;}</p><pre class="brush:php;toolbar:false">&lt;?php\r\n&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;insert_程序名($parm){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$parm[&#39;parm1&#39;];\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;//模板insert&nbsp;name的形式，也实现局部不缓存\r\n?&gt;</pre><p><strong>单模板多缓存：</strong></p><p>能不能为同一个模板页面生成不同缓存文件呢？假如这个模板页面展示的内容是需要根据商品ID或者page页数来变化的，那就需要为不同ID或者其它引起内容变化的变量来生成缓存了。<strong><br/></strong></p><p><br/></p><p>做法就是，在$smarty-&gt;display();再传一个参数，如id,page等引起页面内容变化的变量。</p><pre class="brush:php;toolbar:false">$smarty-&gt;display(&#39;cont&#39;,$cont,$id);</pre><p>然后在判断是否缓存时就需要加上这个‘id’：</p><pre class="brush:php;toolbar:false">$smarty-&gt;isCached(&#39;1.html&#39;,$id)</pre><p><strong>删除缓存：</strong></p><pre class="brush:php;toolbar:false">$smarty-&gt;clearCache(&#39;模板文件名称&#39;,&#39;缓存id&#39;);</pre><p><em>注：如果只指定模板名，就会将该模板对应的所有缓存文件都删除。</em></p>', 8, 1),
(165, '读《jQuery权威指南》从头梳理一遍jQuery', '2015-05-23 03:04:29', '<p>	</p><p><strong>jQuery是什么？</strong><br/></p><p>jQuery是由美国人John Resig于2006年创建的一个开源项目，如今已发展成集JavaScript、CSS、DOM、Ajax于一体的强大框架体系。它的主旨是：以更少的代码，实现更多的功能（Write less，do more）。<strong><br/></strong></p><p><br/></p><p><strong>jQuery基本功能：</strong></p><p>1、访问和操作DOM元素：可以方便地获取、删除、移动、复制、修改页面中的某元素。<strong><br/></strong></p><p>2、控制页面样式：很便捷地控制页面的CSS文件，很好地兼容各种浏览器。</p><p>3、对页面事件的处理：可以使页面表现层和功能开发分离，然后通过事件绑定机制，轻松地将二者结合起来。</p><p>4、大量插件在页面中的运用：如表单插件、UI插件等极大丰富页面展示效果，原来用JavaScript实现这些功能比较费时费力，引用这些插件，轻松就实现了。</p><p>5、与Ajax技术的完美结合：通过内部对象或函数，几行代码就可以实现复杂的功能。</p><p><br/></p><p><strong>下载jQuery:</strong></p><p>jQuery目前有两大版本，1.x和2.x，它们两者区别是，2.x不再支持IE6、7、8。若项目中仍要考虑兼容IE6、7、8，那就使用1.x的，当前最新版是1.11.3，去官网下载：<a href="https://jquery.com/download/" target="_blank" title="jQuery下载地址">https://jquery.com/download</a>&nbsp;</p><p><strong>引入jQuery:</strong></p><p>1、引入本地jquery：</p><pre class="brush:html;toolbar:false">&lt;script&nbsp;src=&quot;js/jquery-1.10.2.js&quot;&gt;&lt;/script&gt;</pre><p>2、引入CDN公共库：</p><p><strong><span style="font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 12px; line-height: 20px; text-indent: 24px;  background-color: rgb(255, 255, 255);"><span id="_baidu_bookmark_start_5" style="display: none; line-height: 0px;">‍</span></span></strong><span id="_baidu_bookmark_start_7" style="display: none; line-height: 0px;">‍</span><span style="font-size: 14px;">CDN公共库是指将常用的JS库存放在CDN节点，以方便广大开发者直接调用。与将JS库存放在服务器单机上相比，CDN公共库更加稳定、高速。</span><span id="_baidu_bookmark_end_8" style="display: none; line-height: 0px;">‍</span><strong><span style="font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 12px; line-height: 20px; text-indent: 24px;  background-color: rgb(255, 255, 255);"><span id="_baidu_bookmark_end_6" style="display: none; line-height: 0px;">‍</span></span></strong></p><p>这是百度cdn:<strong>&nbsp;</strong><span style="background-color: rgb(248, 248, 248);"></span></p><pre class="brush:html;toolbar:false">&lt;script&nbsp;src=&quot;http://libs.baidu.com/jquery/1.10.2/jquery.js&quot;&gt;&lt;/script&gt;</pre><p><span style="background-color: rgb(248, 248, 248);"></span><strong>使用jQuery:<span style="font-size: 16px;"></span></strong><br/></p><pre class="brush:html;toolbar:false">&lt;script&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$(document).ready(function(){&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;to&nbsp;do&nbsp;anything...\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(&#39;欢迎来到jQuery世界!&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;});\r\n&lt;/script&gt;</pre><p>上面这段代码类似传统的javascript代码：</p><pre class="brush:html;toolbar:false">window.onload=function(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;//程序段\r\n}</pre><p>它们在功能上是一样的，之间的区别是：</p><p><br/></p><p>执行时间不同：$(document).ready在页面框架下载完毕后就执行；而windows.onload必须在页面全部加载完毕（包括图片下载）后才能执行。<br/></p><p>执行数量不同：$(document).ready可以重复写多个，并且每次执行结果不同；而window.onload尽管可以执行多个，但仅输出最后一个执行结果，无法完成多个结果的输出。</p><p><br/></p><p><strong>$(document).ready(function(){});可以简写成===&gt; $(function(){});</strong></p><p><strong><br/></strong></p><p><strong>一些简单例子：</strong></p><p><strong>让这个表格隔行变色：$(&#39;#tab tr:nth-child(even)&#39;).css(&#39;background&#39;,&#39;green&#39;); //even表示偶数，odd表示奇数</strong></p><pre class="brush:php;toolbar:false">&lt;table&nbsp;border=&#39;1&#39;&nbsp;id=&#39;tab&#39;&gt;\r\n	&lt;tr&gt;\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&lt;th&gt;姓名&lt;/th&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;th&gt;性别&lt;/th&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;th&gt;年龄&lt;/th&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/tr&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;张三&lt;/td&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;男&lt;/td&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;28&lt;/td&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/tr&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;李四&lt;/td&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;27&lt;/td&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;男&lt;/td&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/tr&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;李四&lt;/td&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;29&lt;/td&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;男&lt;/td&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/tr&gt;\r\n&lt;/table&gt;</pre><p>siblings()选择所有相邻元素<br/></p><p>next()选择后面一个元素</p><p>nextAll()选择后面所有元素</p><p><strong>简单过滤选择器：</strong></p><p>first()或:first 获取第一个元素<strong><br/></strong></p><p>las()或:last 获取最后一个元素</p><p>:not(selector) 获取除给定选择器外的所有元素</p><p>:even 获取所有索引为偶数的元素，索引从0开始。</p><p>:odd 获取所有索引值为奇数的元素，索引从0开始。</p><p>eq(index) 获取指定索引值的元素</p><p>:gt(index) 获取所有大于给定索引值的元素</p><p>:lt(index) 获取所有小于给定索引值的元素</p><p>:header 获取所有标题类型的元素，如h1,h2,h3...</p><p>:animated 获取正在执行动画效果的元素</p><p><strong>内容过滤选择器：</strong></p><p>:contains(text) 获取包含给定文本的元素<strong><br/></strong></p><p>:empty()&nbsp;&nbsp;&nbsp;&nbsp;获取所有不包含子元素或文本的空元素</p><p>:has(selector) 获取含有选择器所匹配的元素的元素</p><p>:parent&nbsp;&nbsp;&nbsp;&nbsp;获取含有子元素或者文本的元素</p><p><strong>可见性过滤选择器：</strong></p><p>:hidden 获取所有不可见元素，或者type为hidden的元素<strong><br/></strong></p><p>:visible 获取所有的可见元素</p><p><strong>属性过滤选择器：</strong></p><p>[attribute] 获取包含给定属性的元素</p><p>[attribute=value] 获取等于给定的属性是某个特定值的元素</p><p>[attribute!=value] 获取不等于给定的属性是某个特定值的元素</p><p>[attribute^=value] 获取给定的属性是以某些值开始的元素</p><p>[attribute$=value] 获取给定的属性是以某些值结尾的元素</p><p>[attribute*=value] 获取给定的属性是以包含某些值的元素</p><p>[selector1][selector2][selectorN] 获取满足多个条件 的复合属性的元素</p><p><strong>子元素过滤选择器：</strong></p><p>:nth-child(eq|even|odd|index) 获取每个父元素下的特定位置元素，索引从1开始<strong><br/></strong></p><p>:first-child 获取每个父元素下的第一个子元素</p><p>:last-child 获取每个父元素下的最后一个子元素</p><p>:only-child 获取每个父元素下的仅有一个子元素</p><p><strong>表单对象属性过滤选择器：</strong></p><p>:enabled 获取表单中所有属性为可用的元素<strong><br/></strong></p><p>:disabled 获取表单中所有属性为不可用的元素</p><p>:checked 获取表单中所有被选中的元素</p><p>:selected 获取表单中所有被选中option的元素</p><p><strong>表单选择器：</strong></p><p>:input 获取所有input、textarea、select</p><p>:text 获取所有单行文本框</p><p>:password 获取所有密码框</p><p>:radio 获取所有单选按钮</p><p>:checkbox 获取所有复选框</p><p>:submit 获取所有提交按钮</p><p>:image 获取所有图像域</p><p>:reset 获取所有重置按钮</p><p>:button 获取所有按钮</p><p>:file 获取所有文件域</p><p><strong><br/></strong><br/></p>', 15, 1),
(167, 'jQuery实现多选框选择', '2015-05-29 06:46:52', '<pre class="brush:php;toolbar:false">&lt;script&nbsp;src=&#39;..\\201504\\js\\jquery-1.3.2.min.js&#39;&gt;&lt;/script&gt;\r\n&lt;div&nbsp;id=&#39;chk&#39;&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input&nbsp;type=&#39;checkbox&#39;&nbsp;/&gt;吃\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input&nbsp;type=&#39;checkbox&#39;&nbsp;/&gt;喝\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input&nbsp;type=&#39;checkbox&#39;&nbsp;/&gt;玩\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input&nbsp;type=&#39;checkbox&#39;&nbsp;/&gt;乐\r\n&lt;/div&gt;\r\n&lt;div&nbsp;id=&#39;btn&#39;&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input&nbsp;type=&#39;button&#39;&nbsp;value=&#39;全选&#39;&nbsp;id=&#39;chkAll&#39;&nbsp;/&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input&nbsp;type=&#39;button&#39;&nbsp;value=&#39;全不选&#39;&nbsp;id=&#39;chkNone&#39;&nbsp;/&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input&nbsp;type=&#39;button&#39;&nbsp;value=&#39;反选&#39;&nbsp;id=&#39;chkAver&#39;&nbsp;/&gt;\r\n&lt;/div&gt;\r\n&lt;script&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$(function(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(&#39;#chkAll&#39;).click(function(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(&#39;#chk&gt;:checkbox&#39;).attr(&#39;checked&#39;,true);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(&#39;#chkNone&#39;).click(function(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(&#39;#chk&gt;:checkbox&#39;).attr(&#39;checked&#39;,false);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(&#39;#chkAver&#39;).click(function(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(&#39;#chk&gt;:checkbox&#39;).each(function(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(this).attr(&#39;checked&#39;,!$(this).attr(&#39;checked&#39;));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\r\n&nbsp;&nbsp;&nbsp;&nbsp;});\r\n&lt;/script&gt;</pre><p>注意：上面代码把jquery版本换成jquery-1.10.2.js、jquery-1.11.0.min.js就不灵了。</p>', 3, 1),
(168, '123', '2015-05-30 05:16:25', '<p>	</p><p>现在有多少个汉字，能统计出来不？</p>', 0, 1),
(169, '4:23', '2015-05-30 08:23:23', '&lt;p&gt;网络连接正常&lt;/p&gt;', 0, 1);

-- --------------------------------------------------------

--
-- 表的结构 `oil`
--

CREATE TABLE IF NOT EXISTS `oil` (
  `id` int(4) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(20) COLLATE utf8_unicode_ci NOT NULL,
  `number` float NOT NULL,
  `price` float NOT NULL,
  `comment` varchar(10) COLLATE utf8_unicode_ci NOT NULL,
  `dates` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=54 ;

--
-- 转存表中的数据 `oil`
--

INSERT INTO `oil` (`id`, `name`, `number`, `price`, `comment`, `dates`) VALUES
(29, 'FDW004/14商标（黑色）', 350, 0.05, '完成', '2014-03-29 03:27:35'),
(30, 'FDW004/14商标（黑色', 400, 0.05, '完成', '2014-03-29 03:28:09'),
(31, 'FDW004/14商标（红色）', 400, 0.05, '完成', '2014-03-29 03:42:36'),
(32, 'FDW004/14商标（红色）', 450, 0.05, '完成', '2014-03-29 03:29:38'),
(33, 'MM149单（黑色）', 132, 0.05, '完成', '2014-03-29 03:42:36'),
(34, 'FDW072单（粉色）', 600, 0.05, '完成', '2014-03-29 03:42:36'),
(35, 'FDW072单（白色）', 2700, 0.05, '完成', '2014-03-29 03:42:36'),
(36, 'FDW149（粉色）', 132, 0.05, '完成', '2014-03-29 03:42:36'),
(37, '3264单（白）', 5040, 0.15, '完成', '2014-03-29 03:42:36'),
(38, '3264单（黄）', 4105, 0.15, '完成', '2014-03-29 03:42:36'),
(39, '小方块', 1300, 0.05, '完成', '2014-03-29 03:42:36'),
(40, '拉头', 2600, 0.08, '完成', '2014-03-29 03:42:36'),
(41, 'FDW003B/14红色商标', 1200, 0.05, '完成', '2014-03-29 03:42:36'),
(42, 'FDW0028/28黑色商标', 1250, 0.05, '完成', '2014-03-29 03:42:36'),
(43, 'M148/13黑色', 237, 0.05, '完成', '2014-03-29 03:42:36'),
(45, '点当', 3900, 0.06, '完成', '2014-03-29 04:11:47'),
(46, '163单2150包耳仔', 4300, 0.1, '完成', '2014-03-29 04:17:17'),
(47, '163单2150包拉头', 2150, 0.07, '完成', '2014-03-29 04:18:15'),
(48, '141单1430包', 1430, 0.5, '完成', '2014-03-29 04:19:55'),
(49, '141单肩带', 1430, 0.06, '完成', '2014-03-29 04:20:35'),
(50, '吊牌灰色', 1000, 0.07, '完成', '2014-03-29 04:21:34'),
(51, '140单3100包', 3100, 0.56, '完成', '2014-03-29 04:22:55'),
(52, '249单10000包', 10000, 0.49, '完成', '2014-03-29 04:23:32'),
(53, '229单2700包', 2700, 0.2, '完成', '2014-03-29 04:24:21');

-- --------------------------------------------------------

--
-- 表的结构 `stat`
--

CREATE TABLE IF NOT EXISTS `stat` (
  `cid` int(10) unsigned NOT NULL DEFAULT '0',
  `dname` varchar(40) NOT NULL DEFAULT '',
  `dtime` varchar(40) NOT NULL DEFAULT '',
  `dnum` int(11) NOT NULL DEFAULT '0'
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `stat`
--

INSERT INTO `stat` (`cid`, `dname`, `dtime`, `dnum`) VALUES
(27317, '20150529224200.blog.zip', '1432910523', 57);

-- --------------------------------------------------------

--
-- 表的结构 `tttt`
--

CREATE TABLE IF NOT EXISTS `tttt` (
  `num11` float NOT NULL,
  `num22` float NOT NULL,
  `oper00` text CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `sum00` float NOT NULL,
  `id` float NOT NULL AUTO_INCREMENT,
  `dates` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=2 ;

--
-- 转存表中的数据 `tttt`
--

INSERT INTO `tttt` (`num11`, `num22`, `oper00`, `sum00`, `id`, `dates`) VALUES
(13245, 45646, '+', 58891, 1, '0000-00-00 00:00:00');

-- --------------------------------------------------------

--
-- 表的结构 `user`
--

CREATE TABLE IF NOT EXISTS `user` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `username` varchar(40) CHARACTER SET utf8 NOT NULL,
  `password` varchar(40) CHARACTER SET utf8 NOT NULL,
  `email` varchar(20) CHARACTER SET utf8 NOT NULL,
  `sex` varchar(6) CHARACTER SET utf8 NOT NULL,
  `birthday` date DEFAULT '0000-00-00',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=120 ;

--
-- 转存表中的数据 `user`
--

INSERT INTO `user` (`id`, `username`, `password`, `email`, `sex`, `birthday`) VALUES
(110, 'admin', '21232f297a57a5a743894a0e4a801fc3', 'admin@163.com', 'female', '2014-05-08'),
(119, 'lisi', 'dc3a8f1670d65bea69b7b65048a0ac40', '', '', '0000-00-00');

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
